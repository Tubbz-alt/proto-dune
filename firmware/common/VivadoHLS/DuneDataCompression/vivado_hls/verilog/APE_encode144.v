// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module APE_encode144 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        etxOut_ha_m_ccur3,
        etxOut_ha_m_ccur3_ap_vld,
        etxOut_ha_m_cidx6,
        etxOut_ha_m_cidx6_ap_vld,
        etxOut_ha_m_buf9_din,
        etxOut_ha_m_buf9_full_n,
        etxOut_ha_m_buf9_write,
        etxOut_ba_m_ccur12,
        etxOut_ba_m_ccur12_ap_vld,
        etxOut_ba_m_cidx15,
        etxOut_ba_m_cidx15_ap_vld,
        etxOut_ba_m_buf18_din,
        etxOut_ba_m_buf18_full_n,
        etxOut_ba_m_buf18_write,
        hist_m_omask_V_address0,
        hist_m_omask_V_ce0,
        hist_m_omask_V_q0,
        hist_m_omask_V19_address0,
        hist_m_omask_V19_ce0,
        hist_m_omask_V19_q0,
        hist_m_omask_V20_address0,
        hist_m_omask_V20_ce0,
        hist_m_omask_V20_q0,
        hist_m_omask_V21_address0,
        hist_m_omask_V21_ce0,
        hist_m_omask_V21_q0,
        hist_m_omask_V22_address0,
        hist_m_omask_V22_ce0,
        hist_m_omask_V22_q0,
        hist_m_omask_V23_address0,
        hist_m_omask_V23_ce0,
        hist_m_omask_V23_q0,
        hist_m_omask_V24_address0,
        hist_m_omask_V24_ce0,
        hist_m_omask_V24_q0,
        hist_m_omask_V25_address0,
        hist_m_omask_V25_ce0,
        hist_m_omask_V25_q0,
        hist_m_omask_V_offset_dout,
        hist_m_omask_V_offset_empty_n,
        hist_m_omask_V_offset_read,
        hist_m_maxcnt_V_address0,
        hist_m_maxcnt_V_ce0,
        hist_m_maxcnt_V_q0,
        hist_m_maxcnt_V26_address0,
        hist_m_maxcnt_V26_ce0,
        hist_m_maxcnt_V26_q0,
        hist_m_maxcnt_V27_address0,
        hist_m_maxcnt_V27_ce0,
        hist_m_maxcnt_V27_q0,
        hist_m_maxcnt_V28_address0,
        hist_m_maxcnt_V28_ce0,
        hist_m_maxcnt_V28_q0,
        hist_m_maxcnt_V29_address0,
        hist_m_maxcnt_V29_ce0,
        hist_m_maxcnt_V29_q0,
        hist_m_maxcnt_V30_address0,
        hist_m_maxcnt_V30_ce0,
        hist_m_maxcnt_V30_q0,
        hist_m_maxcnt_V31_address0,
        hist_m_maxcnt_V31_ce0,
        hist_m_maxcnt_V31_q0,
        hist_m_maxcnt_V32_address0,
        hist_m_maxcnt_V32_ce0,
        hist_m_maxcnt_V32_q0,
        hist_m_nobits_V_address0,
        hist_m_nobits_V_ce0,
        hist_m_nobits_V_q0,
        hist_m_nobits_V33_address0,
        hist_m_nobits_V33_ce0,
        hist_m_nobits_V33_q0,
        hist_m_nobits_V34_address0,
        hist_m_nobits_V34_ce0,
        hist_m_nobits_V34_q0,
        hist_m_nobits_V35_address0,
        hist_m_nobits_V35_ce0,
        hist_m_nobits_V35_q0,
        hist_m_nobits_V36_address0,
        hist_m_nobits_V36_ce0,
        hist_m_nobits_V36_q0,
        hist_m_nobits_V37_address0,
        hist_m_nobits_V37_ce0,
        hist_m_nobits_V37_q0,
        hist_m_nobits_V38_address0,
        hist_m_nobits_V38_ce0,
        hist_m_nobits_V38_q0,
        hist_m_nobits_V39_address0,
        hist_m_nobits_V39_ce0,
        hist_m_nobits_V39_q0,
        hist_m_bins_V_address0,
        hist_m_bins_V_ce0,
        hist_m_bins_V_q0,
        hist_m_bins_V1_address0,
        hist_m_bins_V1_ce0,
        hist_m_bins_V1_q0,
        hist_m_bins_V40_address0,
        hist_m_bins_V40_ce0,
        hist_m_bins_V40_q0,
        hist_m_bins_V402_address0,
        hist_m_bins_V402_ce0,
        hist_m_bins_V402_q0,
        hist_m_bins_V41_address0,
        hist_m_bins_V41_ce0,
        hist_m_bins_V41_q0,
        hist_m_bins_V413_address0,
        hist_m_bins_V413_ce0,
        hist_m_bins_V413_q0,
        hist_m_bins_V42_address0,
        hist_m_bins_V42_ce0,
        hist_m_bins_V42_q0,
        hist_m_bins_V424_address0,
        hist_m_bins_V424_ce0,
        hist_m_bins_V424_q0,
        hist_m_bins_V43_address0,
        hist_m_bins_V43_ce0,
        hist_m_bins_V43_q0,
        hist_m_bins_V435_address0,
        hist_m_bins_V435_ce0,
        hist_m_bins_V435_q0,
        hist_m_bins_V44_address0,
        hist_m_bins_V44_ce0,
        hist_m_bins_V44_q0,
        hist_m_bins_V446_address0,
        hist_m_bins_V446_ce0,
        hist_m_bins_V446_q0,
        hist_m_bins_V45_address0,
        hist_m_bins_V45_ce0,
        hist_m_bins_V45_q0,
        hist_m_bins_V457_address0,
        hist_m_bins_V457_ce0,
        hist_m_bins_V457_q0,
        hist_m_bins_V46_address0,
        hist_m_bins_V46_ce0,
        hist_m_bins_V46_q0,
        hist_m_bins_V468_address0,
        hist_m_bins_V468_ce0,
        hist_m_bins_V468_q0,
        syms_V_address0,
        syms_V_ce0,
        syms_V_q0,
        syms_V47_address0,
        syms_V47_ce0,
        syms_V47_q0,
        syms_V48_address0,
        syms_V48_ce0,
        syms_V48_q0,
        syms_V49_address0,
        syms_V49_ce0,
        syms_V49_q0
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_pp0_stage0 = 9'd8;
parameter    ap_ST_fsm_state10 = 9'd16;
parameter    ap_ST_fsm_pp1_stage0 = 9'd32;
parameter    ap_ST_fsm_state21 = 9'd64;
parameter    ap_ST_fsm_state22 = 9'd128;
parameter    ap_ST_fsm_state23 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [63:0] etxOut_ha_m_ccur3;
output   etxOut_ha_m_ccur3_ap_vld;
output  [31:0] etxOut_ha_m_cidx6;
output   etxOut_ha_m_cidx6_ap_vld;
output  [63:0] etxOut_ha_m_buf9_din;
input   etxOut_ha_m_buf9_full_n;
output   etxOut_ha_m_buf9_write;
output  [63:0] etxOut_ba_m_ccur12;
output   etxOut_ba_m_ccur12_ap_vld;
output  [31:0] etxOut_ba_m_cidx15;
output   etxOut_ba_m_cidx15_ap_vld;
output  [63:0] etxOut_ba_m_buf18_din;
input   etxOut_ba_m_buf18_full_n;
output   etxOut_ba_m_buf18_write;
output  [1:0] hist_m_omask_V_address0;
output   hist_m_omask_V_ce0;
input  [31:0] hist_m_omask_V_q0;
output  [1:0] hist_m_omask_V19_address0;
output   hist_m_omask_V19_ce0;
input  [31:0] hist_m_omask_V19_q0;
output  [1:0] hist_m_omask_V20_address0;
output   hist_m_omask_V20_ce0;
input  [31:0] hist_m_omask_V20_q0;
output  [1:0] hist_m_omask_V21_address0;
output   hist_m_omask_V21_ce0;
input  [31:0] hist_m_omask_V21_q0;
output  [1:0] hist_m_omask_V22_address0;
output   hist_m_omask_V22_ce0;
input  [31:0] hist_m_omask_V22_q0;
output  [1:0] hist_m_omask_V23_address0;
output   hist_m_omask_V23_ce0;
input  [31:0] hist_m_omask_V23_q0;
output  [1:0] hist_m_omask_V24_address0;
output   hist_m_omask_V24_ce0;
input  [31:0] hist_m_omask_V24_q0;
output  [1:0] hist_m_omask_V25_address0;
output   hist_m_omask_V25_ce0;
input  [31:0] hist_m_omask_V25_q0;
input  [4:0] hist_m_omask_V_offset_dout;
input   hist_m_omask_V_offset_empty_n;
output   hist_m_omask_V_offset_read;
output  [1:0] hist_m_maxcnt_V_address0;
output   hist_m_maxcnt_V_ce0;
input  [9:0] hist_m_maxcnt_V_q0;
output  [1:0] hist_m_maxcnt_V26_address0;
output   hist_m_maxcnt_V26_ce0;
input  [9:0] hist_m_maxcnt_V26_q0;
output  [1:0] hist_m_maxcnt_V27_address0;
output   hist_m_maxcnt_V27_ce0;
input  [9:0] hist_m_maxcnt_V27_q0;
output  [1:0] hist_m_maxcnt_V28_address0;
output   hist_m_maxcnt_V28_ce0;
input  [9:0] hist_m_maxcnt_V28_q0;
output  [1:0] hist_m_maxcnt_V29_address0;
output   hist_m_maxcnt_V29_ce0;
input  [9:0] hist_m_maxcnt_V29_q0;
output  [1:0] hist_m_maxcnt_V30_address0;
output   hist_m_maxcnt_V30_ce0;
input  [9:0] hist_m_maxcnt_V30_q0;
output  [1:0] hist_m_maxcnt_V31_address0;
output   hist_m_maxcnt_V31_ce0;
input  [9:0] hist_m_maxcnt_V31_q0;
output  [1:0] hist_m_maxcnt_V32_address0;
output   hist_m_maxcnt_V32_ce0;
input  [9:0] hist_m_maxcnt_V32_q0;
output  [1:0] hist_m_nobits_V_address0;
output   hist_m_nobits_V_ce0;
input  [3:0] hist_m_nobits_V_q0;
output  [1:0] hist_m_nobits_V33_address0;
output   hist_m_nobits_V33_ce0;
input  [3:0] hist_m_nobits_V33_q0;
output  [1:0] hist_m_nobits_V34_address0;
output   hist_m_nobits_V34_ce0;
input  [3:0] hist_m_nobits_V34_q0;
output  [1:0] hist_m_nobits_V35_address0;
output   hist_m_nobits_V35_ce0;
input  [3:0] hist_m_nobits_V35_q0;
output  [1:0] hist_m_nobits_V36_address0;
output   hist_m_nobits_V36_ce0;
input  [3:0] hist_m_nobits_V36_q0;
output  [1:0] hist_m_nobits_V37_address0;
output   hist_m_nobits_V37_ce0;
input  [3:0] hist_m_nobits_V37_q0;
output  [1:0] hist_m_nobits_V38_address0;
output   hist_m_nobits_V38_ce0;
input  [3:0] hist_m_nobits_V38_q0;
output  [1:0] hist_m_nobits_V39_address0;
output   hist_m_nobits_V39_ce0;
input  [3:0] hist_m_nobits_V39_q0;
output  [6:0] hist_m_bins_V_address0;
output   hist_m_bins_V_ce0;
input  [9:0] hist_m_bins_V_q0;
output  [5:0] hist_m_bins_V1_address0;
output   hist_m_bins_V1_ce0;
input  [9:0] hist_m_bins_V1_q0;
output  [6:0] hist_m_bins_V40_address0;
output   hist_m_bins_V40_ce0;
input  [9:0] hist_m_bins_V40_q0;
output  [5:0] hist_m_bins_V402_address0;
output   hist_m_bins_V402_ce0;
input  [9:0] hist_m_bins_V402_q0;
output  [6:0] hist_m_bins_V41_address0;
output   hist_m_bins_V41_ce0;
input  [9:0] hist_m_bins_V41_q0;
output  [5:0] hist_m_bins_V413_address0;
output   hist_m_bins_V413_ce0;
input  [9:0] hist_m_bins_V413_q0;
output  [6:0] hist_m_bins_V42_address0;
output   hist_m_bins_V42_ce0;
input  [9:0] hist_m_bins_V42_q0;
output  [5:0] hist_m_bins_V424_address0;
output   hist_m_bins_V424_ce0;
input  [9:0] hist_m_bins_V424_q0;
output  [6:0] hist_m_bins_V43_address0;
output   hist_m_bins_V43_ce0;
input  [9:0] hist_m_bins_V43_q0;
output  [5:0] hist_m_bins_V435_address0;
output   hist_m_bins_V435_ce0;
input  [9:0] hist_m_bins_V435_q0;
output  [6:0] hist_m_bins_V44_address0;
output   hist_m_bins_V44_ce0;
input  [9:0] hist_m_bins_V44_q0;
output  [5:0] hist_m_bins_V446_address0;
output   hist_m_bins_V446_ce0;
input  [9:0] hist_m_bins_V446_q0;
output  [6:0] hist_m_bins_V45_address0;
output   hist_m_bins_V45_ce0;
input  [9:0] hist_m_bins_V45_q0;
output  [5:0] hist_m_bins_V457_address0;
output   hist_m_bins_V457_ce0;
input  [9:0] hist_m_bins_V457_q0;
output  [6:0] hist_m_bins_V46_address0;
output   hist_m_bins_V46_ce0;
input  [9:0] hist_m_bins_V46_q0;
output  [5:0] hist_m_bins_V468_address0;
output   hist_m_bins_V468_ce0;
input  [9:0] hist_m_bins_V468_q0;
output  [12:0] syms_V_address0;
output   syms_V_ce0;
input  [11:0] syms_V_q0;
output  [12:0] syms_V47_address0;
output   syms_V47_ce0;
input  [11:0] syms_V47_q0;
output  [12:0] syms_V48_address0;
output   syms_V48_ce0;
input  [11:0] syms_V48_q0;
output  [12:0] syms_V49_address0;
output   syms_V49_ce0;
input  [11:0] syms_V49_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg etxOut_ha_m_ccur3_ap_vld;
reg etxOut_ha_m_cidx6_ap_vld;
reg[63:0] etxOut_ha_m_buf9_din;
reg etxOut_ha_m_buf9_write;
reg etxOut_ba_m_ccur12_ap_vld;
reg etxOut_ba_m_cidx15_ap_vld;
reg[63:0] etxOut_ba_m_buf18_din;
reg etxOut_ba_m_buf18_write;
reg hist_m_omask_V_ce0;
reg hist_m_omask_V19_ce0;
reg hist_m_omask_V20_ce0;
reg hist_m_omask_V21_ce0;
reg hist_m_omask_V22_ce0;
reg hist_m_omask_V23_ce0;
reg hist_m_omask_V24_ce0;
reg hist_m_omask_V25_ce0;
reg hist_m_omask_V_offset_read;
reg hist_m_maxcnt_V_ce0;
reg hist_m_maxcnt_V26_ce0;
reg hist_m_maxcnt_V27_ce0;
reg hist_m_maxcnt_V28_ce0;
reg hist_m_maxcnt_V29_ce0;
reg hist_m_maxcnt_V30_ce0;
reg hist_m_maxcnt_V31_ce0;
reg hist_m_maxcnt_V32_ce0;
reg hist_m_nobits_V_ce0;
reg hist_m_nobits_V33_ce0;
reg hist_m_nobits_V34_ce0;
reg hist_m_nobits_V35_ce0;
reg hist_m_nobits_V36_ce0;
reg hist_m_nobits_V37_ce0;
reg hist_m_nobits_V38_ce0;
reg hist_m_nobits_V39_ce0;
reg hist_m_bins_V_ce0;
reg hist_m_bins_V1_ce0;
reg hist_m_bins_V40_ce0;
reg hist_m_bins_V402_ce0;
reg hist_m_bins_V41_ce0;
reg hist_m_bins_V413_ce0;
reg hist_m_bins_V42_ce0;
reg hist_m_bins_V424_ce0;
reg hist_m_bins_V43_ce0;
reg hist_m_bins_V435_ce0;
reg hist_m_bins_V44_ce0;
reg hist_m_bins_V446_ce0;
reg hist_m_bins_V45_ce0;
reg hist_m_bins_V457_ce0;
reg hist_m_bins_V46_ce0;
reg hist_m_bins_V468_ce0;
reg[12:0] syms_V_address0;
reg syms_V_ce0;
reg[12:0] syms_V47_address0;
reg syms_V47_ce0;
reg[12:0] syms_V48_address0;
reg syms_V48_ce0;
reg[12:0] syms_V49_address0;
reg syms_V49_ce0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    etxOut_ha_m_buf9_blk_n;
reg    ap_enable_reg_pp0_iter5;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_385_i_reg_3022;
reg   [0:0] tmp_385_i_reg_3022_pp0_iter4_reg;
reg   [0:0] tmp_212_reg_3149;
reg   [0:0] tmp_212_reg_3149_pp0_iter4_reg;
reg    ap_enable_reg_pp1_iter5;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond_reg_3249;
reg   [0:0] exitcond_reg_3249_pp1_iter4_reg;
reg   [0:0] tmp_415_i_reg_3291;
reg   [0:0] tmp_415_i_reg_3291_pp1_iter4_reg;
reg   [0:0] tmp_229_reg_3326;
reg   [0:0] tmp_229_reg_3326_pp1_iter4_reg;
reg    etxOut_ba_m_buf18_blk_n;
reg    ap_enable_reg_pp1_iter9;
reg   [0:0] tmp_439_i_reg_3392;
reg   [0:0] tmp_439_i_reg_3392_pp1_iter8_reg;
reg   [0:0] tmp_238_reg_3457;
reg   [0:0] tmp_238_reg_3457_pp1_iter8_reg;
wire    ap_CS_fsm_state23;
reg   [0:0] tmp_222_reg_3498;
reg    hist_m_omask_V_offset_blk_n;
reg   [5:0] i_assign_reg_972;
reg   [5:0] i_assign_reg_972_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state8_pp0_stage0_iter4;
reg    ap_predicate_op273_write_state9;
reg    ap_block_state9_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [9:0] p_070_0_i_i_reg_984;
reg   [9:0] p_030_0_i1_i_reg_996;
reg   [9:0] p_030_0_i1_i_reg_996_pp0_iter3_reg;
reg   [31:0] etx_ha_m_idx_i_reg_1054;
reg   [31:0] nbits_assign_reg_1066;
reg   [31:0] p_0100_0_i_i_reg_1078;
reg   [63:0] syms_pn_rec_i_reg_1106;
reg   [11:0] p_i_reg_1117;
reg   [10:0] etx_cv_m_lo_V_reg_1126;
reg   [11:0] etx_cv_m_hi_V_reg_1138;
wire   [1:0] tmp_207_fu_1207_p1;
reg   [1:0] tmp_207_reg_2818;
reg    ap_block_state1;
reg   [2:0] tmp_s_reg_2823;
wire   [2:0] tmp_208_fu_1221_p1;
reg   [2:0] tmp_208_reg_2828;
wire   [1:0] tmp_92_fu_1225_p4;
reg   [1:0] tmp_92_reg_2835;
reg   [1:0] hist_m_nobits_V_addr_reg_2881;
reg   [1:0] hist_m_nobits_V33_ad_reg_2886;
reg   [1:0] hist_m_nobits_V34_ad_reg_2891;
reg   [1:0] hist_m_nobits_V35_ad_reg_2896;
reg   [1:0] hist_m_nobits_V36_ad_reg_2901;
reg   [1:0] hist_m_nobits_V37_ad_reg_2906;
reg   [1:0] hist_m_nobits_V38_ad_reg_2911;
reg   [1:0] hist_m_nobits_V39_ad_reg_2916;
reg   [1:0] hist_m_omask_V_addr_reg_2921;
reg   [1:0] hist_m_omask_V19_add_reg_2926;
reg   [1:0] hist_m_omask_V20_add_reg_2931;
reg   [1:0] hist_m_omask_V21_add_reg_2936;
reg   [1:0] hist_m_omask_V22_add_reg_2941;
reg   [1:0] hist_m_omask_V23_add_reg_2946;
reg   [1:0] hist_m_omask_V24_add_reg_2951;
reg   [1:0] hist_m_omask_V25_add_reg_2956;
wire   [12:0] tmp_90_fu_1268_p3;
reg   [12:0] tmp_90_reg_2961;
wire    ap_CS_fsm_state2;
reg   [9:0] p_Result_60_fu_1304_p4;
reg   [9:0] p_Result_60_reg_2986;
wire   [14:0] tmp_110_cast_fu_1314_p1;
reg   [14:0] tmp_110_cast_reg_2991;
wire    ap_CS_fsm_state3;
wire   [6:0] p_shl_cast_fu_1327_p1;
reg   [6:0] p_shl_cast_reg_2996;
wire   [6:0] tmp_94_fu_1331_p2;
reg   [6:0] tmp_94_reg_3001;
wire   [11:0] grp_fu_1159_p6;
reg   [11:0] prv_V_reg_3006;
wire   [31:0] nbits_3_fu_1352_p2;
reg   [31:0] nbits_3_reg_3011;
wire   [31:0] bits_V_fu_1372_p2;
wire   [0:0] tmp_385_i_fu_1378_p2;
reg   [0:0] tmp_385_i_reg_3022_pp0_iter1_reg;
reg   [0:0] tmp_385_i_reg_3022_pp0_iter2_reg;
reg   [0:0] tmp_385_i_reg_3022_pp0_iter3_reg;
wire   [5:0] ibin_fu_1384_p2;
reg   [5:0] ibin_reg_3026;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_213_fu_1390_p3;
reg   [0:0] tmp_213_reg_3031;
reg   [0:0] tmp_213_reg_3031_pp0_iter1_reg;
reg   [0:0] tmp_213_reg_3031_pp0_iter2_reg;
reg   [0:0] tmp_213_reg_3031_pp0_iter3_reg;
reg   [0:0] tmp_213_reg_3031_pp0_iter4_reg;
wire   [0:0] tmp_214_fu_1423_p3;
reg   [0:0] tmp_214_reg_3035;
wire   [0:0] tmp_218_fu_1431_p1;
reg   [0:0] tmp_218_reg_3039;
wire   [9:0] left_V_fu_1483_p2;
reg   [9:0] left_V_reg_3123;
wire   [9:0] total_V_fu_1494_p2;
reg    ap_enable_reg_pp0_iter2;
wire   [31:0] left_cast_i_fu_1514_p1;
reg   [31:0] left_cast_i_reg_3133;
wire   [31:0] overrun_fu_1518_p2;
reg   [31:0] overrun_reg_3138;
wire   [0:0] tmp_387_i_fu_1524_p2;
reg   [0:0] tmp_387_i_reg_3143;
wire   [31:0] etx_ha_m_idx_fu_1538_p2;
reg   [31:0] etx_ha_m_idx_reg_3153;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] etx_ha_m_idx_reg_3153_pp0_iter4_reg;
wire   [31:0] p_mbits_0_i_i_fu_1580_p3;
reg   [31:0] p_mbits_0_i_i_reg_3159;
reg    ap_enable_reg_pp0_iter4;
wire   [63:0] etx_ha_m_cur_fu_1642_p3;
reg   [63:0] etx_ha_m_cur_reg_3169;
wire   [31:0] bits_V_1_fu_1660_p1;
wire   [63:0] etx_ha_m_cur_4_load_1_load_fu_1664_p1;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state11_pp1_stage0_iter0;
wire    ap_block_state12_pp1_stage0_iter1;
wire    ap_block_state13_pp1_stage0_iter2;
wire    ap_block_state14_pp1_stage0_iter3;
wire    ap_block_state15_pp1_stage0_iter4;
reg    ap_predicate_op417_write_state16;
reg    ap_block_state16_pp1_stage0_iter5;
wire    ap_block_state17_pp1_stage0_iter6;
wire    ap_block_state18_pp1_stage0_iter7;
wire    ap_block_state19_pp1_stage0_iter8;
reg    ap_predicate_op519_write_state20;
reg    ap_block_state20_pp1_stage0_iter9;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] exitcond_fu_1713_p2;
reg   [0:0] exitcond_reg_3249_pp1_iter1_reg;
reg   [0:0] exitcond_reg_3249_pp1_iter2_reg;
reg   [0:0] exitcond_reg_3249_pp1_iter3_reg;
reg   [0:0] exitcond_reg_3249_pp1_iter5_reg;
wire   [63:0] phitmp2_i_fu_1719_p2;
reg    ap_enable_reg_pp1_iter0;
reg   [11:0] cur_V_reg_3258;
reg    ap_enable_reg_pp1_iter1;
wire   [11:0] r_V_i_fu_1725_p2;
reg   [11:0] r_V_i_reg_3263;
wire   [12:0] tmp_404_i_fu_1745_p2;
reg   [12:0] tmp_404_i_reg_3269;
wire   [12:0] ovr_V_1_fu_1811_p3;
reg   [12:0] ovr_V_1_reg_3274;
reg   [12:0] ovr_V_1_reg_3274_pp1_iter3_reg;
wire   [0:0] tmp_415_i_fu_1847_p2;
reg   [0:0] tmp_415_i_reg_3291_pp1_iter3_reg;
wire   [9:0] table_i_q0;
reg   [9:0] table_i_load_reg_3295;
reg    ap_enable_reg_pp1_iter3;
wire   [9:0] table_i_q1;
reg   [9:0] table_i_load_1_reg_3300;
wire   [6:0] nbits_assign_3_cast_s_fu_1866_p1;
reg   [6:0] nbits_assign_3_cast_s_reg_3305;
wire   [6:0] left_3_fu_1874_p2;
reg   [6:0] left_3_reg_3310;
wire   [6:0] overrun_3_fu_1880_p2;
reg   [6:0] overrun_3_reg_3315;
wire   [0:0] tmp_417_i_fu_1886_p2;
reg   [0:0] tmp_417_i_reg_3320;
wire   [23:0] grp_fu_2791_p3;
reg   [23:0] r_V_10_reg_3330;
reg    ap_enable_reg_pp1_iter4;
wire   [23:0] grp_fu_2800_p3;
reg   [23:0] r_V_12_reg_3336;
wire   [11:0] cv_m_lo_V_1_fu_1979_p4;
reg   [11:0] cv_m_lo_V_1_reg_3341;
reg   [11:0] cv_m_lo_V_1_reg_3341_pp1_iter5_reg;
wire   [63:0] etx_ha_m_cur_2_fu_2040_p3;
reg   [63:0] etx_ha_m_cur_2_reg_3347;
wire   [11:0] r_V_19_fu_2058_p2;
reg   [11:0] r_V_19_reg_3352;
wire   [3:0] nsame_V_fu_2107_p1;
reg   [3:0] nsame_V_reg_3358;
wire   [3:0] nreduce_V_fu_2206_p1;
reg   [3:0] nreduce_V_reg_3366;
wire   [10:0] r_V_23_fu_2218_p2;
wire   [11:0] cv_m_hi_V_fu_2257_p2;
reg   [31:0] etx_ba_m_idx_2_load_reg_3381;
reg    ap_enable_reg_pp1_iter6;
wire   [5:0] cur_bidx_2_fu_2266_p1;
reg   [5:0] cur_bidx_2_reg_3386;
wire   [0:0] tmp_439_i_fu_2283_p2;
reg   [0:0] tmp_439_i_reg_3392_pp1_iter7_reg;
reg   [31:0] etx_tofollow_load_1_reg_3396;
wire   [11:0] r_V_22_fu_2331_p3;
reg   [11:0] r_V_22_reg_3402;
wire   [31:0] nebits_fu_2339_p2;
reg   [31:0] nebits_reg_3408;
reg   [31:0] nebits_reg_3408_pp1_iter7_reg;
wire  signed [31:0] p_0_1_0_i_cast_i_fu_2351_p1;
reg  signed [31:0] p_0_1_0_i_cast_i_reg_3414;
wire   [0:0] tmp_235_fu_2355_p3;
reg   [0:0] tmp_235_reg_3420;
wire   [31:0] tmp_448_i_fu_2363_p2;
reg   [31:0] tmp_448_i_reg_3426;
wire   [11:0] tmp_219_i_fu_2497_p2;
reg   [11:0] tmp_219_i_reg_3431;
reg   [51:0] tmp_220_i_reg_3436;
wire   [31:0] left_4_cast_i_fu_2522_p1;
reg   [31:0] left_4_cast_i_reg_3441;
wire   [31:0] overrun_4_fu_2526_p2;
reg   [31:0] overrun_4_reg_3446;
wire   [0:0] tmp_456_i_fu_2531_p2;
reg   [0:0] tmp_456_i_reg_3451;
wire   [63:0] etx_ba_m_cur_2_fu_2582_p2;
reg   [63:0] etx_ba_m_cur_2_reg_3461;
wire   [31:0] nbits_assign_2_fu_2612_p2;
reg   [31:0] nbits_assign_2_reg_3466;
wire    ap_CS_fsm_state21;
wire   [0:0] tmp_12_fu_2694_p2;
reg   [0:0] tmp_12_reg_3472;
reg   [62:0] tmp_13_reg_3477;
wire   [31:0] left_3_cast_i_fu_2719_p1;
reg   [31:0] left_3_cast_i_reg_3482;
wire   [31:0] overrun_2_fu_2723_p2;
reg   [31:0] overrun_2_reg_3487;
wire   [0:0] tmp_428_i_fu_2729_p2;
reg   [0:0] tmp_428_i_reg_3492;
wire   [63:0] buf_7_fu_2743_p3;
reg   [63:0] buf_7_reg_3502;
wire    ap_CS_fsm_state22;
wire   [63:0] etx_ba_m_cur_fu_2780_p2;
reg   [63:0] etx_ba_m_cur_reg_3507;
reg    ap_block_pp0_stage0_subdone;
reg    ap_predicate_tran9to10_state4;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state10;
reg    ap_block_pp1_stage0_subdone;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter7;
reg    ap_condition_pp1_exit_iter6_state17;
reg    ap_enable_reg_pp1_iter8;
reg   [5:0] table_i_address0;
reg    table_i_ce0;
reg    table_i_we0;
wire   [5:0] table_i_address1;
reg    table_i_ce1;
reg   [5:0] ap_phi_mux_i_assign_phi_fu_976_p4;
reg   [9:0] ap_phi_mux_p_030_0_i1_i_phi_fu_1000_p34;
reg   [9:0] ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_996;
wire   [9:0] ap_phi_reg_pp0_iter0_p_030_0_i1_i_reg_996;
reg   [9:0] ap_phi_reg_pp0_iter1_p_030_0_i1_i_reg_996;
reg   [31:0] ap_phi_mux_etx_ha_m_idx_i_phi_fu_1058_p4;
reg   [31:0] ap_phi_mux_nbits_assign_phi_fu_1070_p4;
reg   [31:0] BitStream64_m_idx_re_reg_1087;
reg   [63:0] BitStream64_m_cur_re_reg_1097;
reg   [11:0] ap_phi_mux_p_i_phi_fu_1120_p4;
reg   [10:0] ap_phi_mux_etx_cv_m_lo_V_phi_fu_1130_p4;
reg   [11:0] ap_phi_mux_etx_cv_m_hi_V_phi_fu_1142_p4;
reg   [63:0] ap_phi_mux_BitStream64_m_cur_re_2_phi_fu_1152_p4;
reg    ap_block_state23;
wire   [63:0] newIndex59_cast_i_fu_1235_p1;
wire   [63:0] tmp_91_fu_1275_p1;
wire   [63:0] tmp_116_cast_fu_1454_p1;
wire   [63:0] tmp_117_cast_fu_1471_p1;
wire   [63:0] tmp_386_i_fu_1489_p1;
wire   [63:0] tmp_118_cast_fu_1701_p1;
wire   [63:0] tmp_409_i_fu_1827_p1;
wire   [63:0] tmp_410_i_fu_1842_p1;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp1_stage0_01001;
reg   [63:0] etx_ha_m_cur_4_fu_320;
wire   [63:0] etx_ha_m_cur_1_fu_1590_p1;
reg   [12:0] ovr_V_2_fu_328;
reg   [31:0] etx_tofollow_fu_332;
wire   [31:0] npending_1_fu_2375_p1;
wire   [31:0] npending_fu_2393_p2;
reg   [63:0] BitStream64_m_cur_re_1_fu_336;
wire   [63:0] etx_ha_m_cur_3_fu_1988_p1;
reg   [31:0] BitStream64_m_idx_re_1_fu_340;
wire   [31:0] etx_ha_m_idx_1_fu_1903_p2;
reg   [63:0] etx_ba_m_cur_1_fu_344;
wire   [63:0] buf_6_fu_2545_p3;
reg   [31:0] etx_ba_m_idx_2_fu_348;
wire   [31:0] etx_ba_m_idx_fu_2369_p2;
wire   [9:0] maxcnt_V_fu_1283_p10;
wire   [5:0] tmp_93_fu_1320_p3;
wire   [6:0] newIndex59_cast_i_ca_fu_1317_p1;
wire   [31:0] p_Result_61_fu_1337_p3;
reg   [31:0] tmp_i_fu_1344_p3;
wire   [15:0] tmp_209_fu_1358_p1;
wire   [3:0] grp_fu_1172_p10;
wire   [31:0] tmp_384_i_fu_1362_p4;
wire   [31:0] p_Val2_48_fu_1402_p10;
wire   [31:0] i_assign_cast24_i_fu_1398_p1;
wire   [4:0] tmp_219_fu_1435_p4;
wire   [6:0] newIndex60_i_cast_fu_1445_p1;
wire   [6:0] tmp_96_fu_1449_p2;
wire   [6:0] tmp_97_fu_1466_p2;
wire   [5:0] cur_bidx_fu_1500_p1;
wire   [6:0] cur_bidx_cast_i_fu_1504_p1;
wire   [6:0] left_fu_1508_p2;
reg   [9:0] p_Result_62_fu_1544_p4;
wire   [31:0] p_Result_63_fu_1553_p3;
reg   [31:0] tmp_397_i_fu_1561_p3;
wire   [31:0] nbits_fu_1569_p2;
wire   [0:0] tmp_406_i_fu_1575_p2;
wire   [31:0] shift_fu_1594_p3;
wire   [63:0] tmp_388_i_fu_1600_p1;
wire   [31:0] tmp_391_i_fu_1610_p2;
wire   [63:0] tmp_389_i_fu_1604_p2;
wire   [31:0] tmp_211_fu_1622_p1;
wire   [31:0] tmp_392_i_fu_1615_p3;
wire   [31:0] tmp_9_fu_1632_p4;
wire   [31:0] tmp_8_fu_1626_p2;
wire   [14:0] tmp_215_fu_1692_p1;
wire   [14:0] tmp_95_fu_1696_p2;
wire   [31:0] tmp_217_fu_1709_p1;
wire   [12:0] r_V_fu_1731_p3;
wire   [12:0] tmp_403_i_fu_1739_p2;
wire   [11:0] tmp_224_fu_1754_p2;
wire   [11:0] tmp_405_i_fu_1766_p2;
wire   [0:0] tmp_225_fu_1759_p3;
wire   [12:0] tmp_405_cast_i_fu_1772_p1;
wire   [12:0] storemerge_i_fu_1776_p3;
wire   [13:0] tmp_407_cast_i_fu_1783_p1;
wire   [13:0] diff_fu_1787_p2;
wire   [0:0] tmp_226_fu_1793_p3;
wire   [12:0] ovr_V_fu_1801_p2;
wire   [4:0] idx_V_fu_1807_p1;
wire   [4:0] idx_V_1_fu_1819_p3;
wire   [5:0] lhs_V_cast_i_fu_1832_p1;
wire   [5:0] r_V_8_fu_1836_p2;
wire   [5:0] cur_bidx_3_fu_1858_p1;
wire   [6:0] cur_bidx_2_cast_i_fu_1870_p1;
wire   [31:0] nbits_assign_3_fu_1862_p1;
wire   [12:0] range_V_fu_1914_p1;
wire   [12:0] tmp_411_i_fu_1918_p1;
wire   [12:0] range_V_1_fu_1922_p2;
wire   [20:0] xlo_V_1_fu_1934_p3;
wire   [21:0] xlo_V_2_cast_i_fu_1942_p1;
wire   [12:0] range_V_2_fu_1928_p2;
wire   [21:0] xlo_V_fu_1946_p2;
wire   [6:0] shift_3_fu_1991_p3;
wire   [63:0] tmp_418_i_fu_1996_p1;
wire   [12:0] tmp_422_cast_i_fu_2006_p1;
wire   [12:0] tmp_423_i_fu_2009_p2;
wire   [63:0] tmp_419_i_fu_2000_p2;
wire   [12:0] tmp_228_fu_2020_p1;
wire   [12:0] tmp_424_i_fu_2014_p3;
wire   [50:0] tmp_18_fu_2030_p4;
wire   [12:0] tmp_17_fu_2024_p2;
wire   [11:0] cv_m_hi_V_2_fu_1963_p4;
reg   [11:0] p_Result_64_fu_2082_p4;
wire   [31:0] p_Result_65_fu_2091_p3;
reg   [31:0] val_assign_s_fu_2099_p3;
wire   [10:0] cv_m_hi_V_1_cast_fu_2064_p4;
wire   [10:0] cv_m_lo_V_1_cast_fu_2073_p4;
wire   [10:0] rhs_V_5_fu_2111_p2;
wire   [10:0] r_V_14_fu_2117_p2;
wire   [10:0] nbits_assign_4_cast_s_fu_2123_p1;
wire   [10:0] r_V_20_fu_2127_p2;
wire   [0:0] tmp_231_fu_2133_p3;
wire   [10:0] tmp_217_i_fu_2149_p2;
wire   [10:0] p_1_i_fu_2155_p2;
wire   [11:0] tmp_438_i_fu_2161_p3;
wire   [11:0] phitmp_i_fu_2169_p2;
wire   [11:0] pending_V_fu_2175_p2;
reg   [11:0] p_Result_66_fu_2180_p4;
wire   [31:0] p_Result_67_fu_2190_p3;
reg   [31:0] val_assign_1_fu_2198_p3;
wire   [10:0] tmp_465_cast_i_cast_fu_2214_p1;
reg   [11:0] p_Result_58_fu_2224_p4;
wire   [12:0] r_V_3_fu_2233_p3;
wire   [12:0] tmp_465_cast19_i_fu_2210_p1;
wire   [12:0] tmp_468_i_fu_2241_p2;
reg   [11:0] p_Result_59_fu_2247_p4;
wire   [11:0] hi_mask_V_1_fu_2141_p3;
wire   [4:0] nbits_assign_4_cast2_fu_2276_p1;
wire  signed [4:0] r_V_21_fu_2288_p2;
wire   [4:0] tmp_443_i_fu_2306_p2;
wire   [14:0] lhs_V_5_cast_i_fu_2270_p1;
wire   [14:0] tmp_443_cast_i_fu_2312_p1;
wire  signed [11:0] tmp_442_cast21_i_fu_2302_p1;
wire   [14:0] tmp_444_i_fu_2316_p2;
wire   [0:0] tmp_233_fu_2294_p3;
wire   [11:0] tmp_234_fu_2327_p1;
wire   [11:0] tmp_445_i_fu_2322_p2;
wire   [31:0] nbits_assign_4_fu_2273_p1;
wire   [4:0] p_0_1_0_i_i_fu_2345_p2;
wire   [3:0] mpending_V_fu_2279_p2;
wire   [31:0] tmp_441_i_fu_2389_p1;
wire   [63:0] leading_bit_1_fu_2409_p1;
wire   [63:0] tmp_449_i_fu_2412_p1;
wire   [63:0] tmp_451_i_fu_2429_p1;
wire   [63:0] tmp_452_i_fu_2432_p2;
wire   [63:0] tmp_453_i_fu_2438_p2;
wire   [63:0] tmp_454_i_fu_2444_p1;
wire   [63:0] buf_3_fu_2415_p2;
wire   [63:0] tmp_455_i_fu_2447_p2;
wire   [0:0] tmp_446_i_fu_2404_p2;
wire   [0:0] sel_tmp7_fu_2459_p2;
wire   [0:0] sel_tmp8_fu_2465_p2;
reg   [11:0] p_Result_s_fu_2421_p4;
wire   [63:0] buf_4_fu_2453_p2;
wire   [63:0] sel_tmp3_fu_2477_p3;
wire   [63:0] buf_1_i_i_fu_2485_p3;
wire   [11:0] tmp_237_fu_2493_p1;
wire   [11:0] bits_V_assign_1_fu_2470_p3;
wire   [6:0] cur_bidx_4_cast_i_fu_2513_p1;
wire   [6:0] left_4_fu_2516_p2;
wire   [31:0] shift_4_fu_2551_p3;
wire   [63:0] tmp_457_i_fu_2556_p1;
wire   [63:0] tmp_459_i_fu_2566_p1;
wire   [63:0] tmp_460_i_fu_2569_p2;
wire   [63:0] tmp_461_i_fu_2575_p3;
wire   [63:0] tmp_458_i_fu_2560_p2;
wire   [31:0] tofollow_fu_2598_p2;
wire   [0:0] bit_V_fu_2604_p3;
wire   [63:0] leading_bit_fu_2624_p1;
wire   [63:0] tmp_416_i_fu_2628_p1;
wire   [63:0] tmp_420_i_fu_2638_p2;
wire   [63:0] buf_fu_2632_p2;
wire   [63:0] tmp_421_i_fu_2644_p2;
wire   [0:0] tmp_401_i_fu_2618_p2;
wire   [63:0] buf_1_fu_2650_p2;
wire   [0:0] sel_tmp1_fu_2670_p2;
wire   [0:0] sel_tmp2_fu_2676_p2;
wire   [63:0] sel_tmp_fu_2662_p3;
wire   [63:0] buf_1_i_i_i_fu_2682_p3;
wire   [0:0] tmp_221_fu_2690_p1;
wire   [0:0] tmp_427_i_fu_2656_p2;
wire   [6:0] cur_bidx_3_cast_i_fu_2710_p1;
wire   [6:0] left_2_fu_2713_p2;
wire   [31:0] shift_2_fu_2749_p3;
wire   [63:0] tmp_429_i_fu_2754_p1;
wire   [63:0] tmp_432_i_fu_2764_p1;
wire   [63:0] tmp_433_i_fu_2767_p2;
wire   [63:0] tmp_434_i_fu_2773_p3;
wire   [63:0] tmp_430_i_fu_2758_p2;
wire   [12:0] grp_fu_2791_p0;
wire   [22:0] lhs_V_fu_1952_p1;
wire   [9:0] grp_fu_2791_p1;
wire   [21:0] grp_fu_2791_p2;
wire   [12:0] grp_fu_2800_p0;
wire   [9:0] grp_fu_2800_p1;
wire   [20:0] grp_fu_2800_p2;
reg   [8:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [22:0] grp_fu_2791_p10;
wire   [23:0] grp_fu_2791_p20;
wire   [22:0] grp_fu_2800_p10;
wire   [23:0] grp_fu_2800_p20;
reg    ap_condition_2159;
reg    ap_condition_2164;
reg    ap_condition_983;
reg    ap_condition_894;
reg    ap_condition_908;
reg    ap_condition_913;
reg    ap_condition_919;
reg    ap_condition_922;
reg    ap_condition_928;
reg    ap_condition_931;
reg    ap_condition_937;
reg    ap_condition_940;
reg    ap_condition_946;
reg    ap_condition_949;
reg    ap_condition_955;
reg    ap_condition_958;
reg    ap_condition_964;
reg    ap_condition_967;
reg    ap_condition_973;
reg    ap_condition_976;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 tmp_385_i_reg_3022 = 1'd0;
#0 tmp_385_i_reg_3022_pp0_iter4_reg = 1'd0;
#0 tmp_212_reg_3149 = 1'd0;
#0 tmp_212_reg_3149_pp0_iter4_reg = 1'd0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 exitcond_reg_3249 = 1'd0;
#0 exitcond_reg_3249_pp1_iter4_reg = 1'd0;
#0 tmp_415_i_reg_3291 = 1'd0;
#0 tmp_415_i_reg_3291_pp1_iter4_reg = 1'd0;
#0 tmp_229_reg_3326 = 1'd0;
#0 tmp_229_reg_3326_pp1_iter4_reg = 1'd0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 tmp_439_i_reg_3392 = 1'd0;
#0 tmp_439_i_reg_3392_pp1_iter8_reg = 1'd0;
#0 tmp_238_reg_3457 = 1'd0;
#0 tmp_238_reg_3457_pp1_iter8_reg = 1'd0;
#0 tmp_222_reg_3498 = 1'd0;
#0 i_assign_reg_972 = 6'd0;
#0 i_assign_reg_972_pp0_iter1_reg = 6'd0;
#0 p_070_0_i_i_reg_984 = 10'd0;
#0 p_030_0_i1_i_reg_996 = 10'd0;
#0 p_030_0_i1_i_reg_996_pp0_iter3_reg = 10'd0;
#0 etx_ha_m_idx_i_reg_1054 = 32'd0;
#0 nbits_assign_reg_1066 = 32'd0;
#0 p_0100_0_i_i_reg_1078 = 32'd0;
#0 syms_pn_rec_i_reg_1106 = 64'd0;
#0 p_i_reg_1117 = 12'd0;
#0 etx_cv_m_lo_V_reg_1126 = 11'd0;
#0 etx_cv_m_hi_V_reg_1138 = 12'd0;
#0 tmp_207_reg_2818 = 2'd0;
#0 tmp_s_reg_2823 = 3'd0;
#0 tmp_208_reg_2828 = 3'd0;
#0 tmp_92_reg_2835 = 2'd0;
#0 hist_m_nobits_V_addr_reg_2881 = 2'd0;
#0 hist_m_nobits_V33_ad_reg_2886 = 2'd0;
#0 hist_m_nobits_V34_ad_reg_2891 = 2'd0;
#0 hist_m_nobits_V35_ad_reg_2896 = 2'd0;
#0 hist_m_nobits_V36_ad_reg_2901 = 2'd0;
#0 hist_m_nobits_V37_ad_reg_2906 = 2'd0;
#0 hist_m_nobits_V38_ad_reg_2911 = 2'd0;
#0 hist_m_nobits_V39_ad_reg_2916 = 2'd0;
#0 hist_m_omask_V_addr_reg_2921 = 2'd0;
#0 hist_m_omask_V19_add_reg_2926 = 2'd0;
#0 hist_m_omask_V20_add_reg_2931 = 2'd0;
#0 hist_m_omask_V21_add_reg_2936 = 2'd0;
#0 hist_m_omask_V22_add_reg_2941 = 2'd0;
#0 hist_m_omask_V23_add_reg_2946 = 2'd0;
#0 hist_m_omask_V24_add_reg_2951 = 2'd0;
#0 hist_m_omask_V25_add_reg_2956 = 2'd0;
#0 tmp_90_reg_2961 = 13'd0;
#0 p_Result_60_reg_2986 = 10'd0;
#0 tmp_110_cast_reg_2991 = 15'd0;
#0 p_shl_cast_reg_2996 = 7'd0;
#0 tmp_94_reg_3001 = 7'd0;
#0 prv_V_reg_3006 = 12'd0;
#0 nbits_3_reg_3011 = 32'd0;
#0 tmp_385_i_reg_3022_pp0_iter1_reg = 1'd0;
#0 tmp_385_i_reg_3022_pp0_iter2_reg = 1'd0;
#0 tmp_385_i_reg_3022_pp0_iter3_reg = 1'd0;
#0 ibin_reg_3026 = 6'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 tmp_213_reg_3031 = 1'd0;
#0 tmp_213_reg_3031_pp0_iter1_reg = 1'd0;
#0 tmp_213_reg_3031_pp0_iter2_reg = 1'd0;
#0 tmp_213_reg_3031_pp0_iter3_reg = 1'd0;
#0 tmp_213_reg_3031_pp0_iter4_reg = 1'd0;
#0 tmp_214_reg_3035 = 1'd0;
#0 tmp_218_reg_3039 = 1'd0;
#0 left_V_reg_3123 = 10'd0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 left_cast_i_reg_3133 = 32'd0;
#0 overrun_reg_3138 = 32'd0;
#0 tmp_387_i_reg_3143 = 1'd0;
#0 etx_ha_m_idx_reg_3153 = 32'd0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 etx_ha_m_idx_reg_3153_pp0_iter4_reg = 32'd0;
#0 p_mbits_0_i_i_reg_3159 = 32'd0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 etx_ha_m_cur_reg_3169 = 64'd0;
#0 exitcond_reg_3249_pp1_iter1_reg = 1'd0;
#0 exitcond_reg_3249_pp1_iter2_reg = 1'd0;
#0 exitcond_reg_3249_pp1_iter3_reg = 1'd0;
#0 exitcond_reg_3249_pp1_iter5_reg = 1'd0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 cur_V_reg_3258 = 12'd0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 r_V_i_reg_3263 = 12'd0;
#0 tmp_404_i_reg_3269 = 13'd0;
#0 ovr_V_1_reg_3274 = 13'd0;
#0 ovr_V_1_reg_3274_pp1_iter3_reg = 13'd0;
#0 tmp_415_i_reg_3291_pp1_iter3_reg = 1'd0;
#0 table_i_load_reg_3295 = 10'd0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 table_i_load_1_reg_3300 = 10'd0;
#0 nbits_assign_3_cast_s_reg_3305 = 7'd0;
#0 left_3_reg_3310 = 7'd0;
#0 overrun_3_reg_3315 = 7'd0;
#0 tmp_417_i_reg_3320 = 1'd0;
#0 r_V_10_reg_3330 = 24'd0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 r_V_12_reg_3336 = 24'd0;
#0 cv_m_lo_V_1_reg_3341 = 12'd0;
#0 cv_m_lo_V_1_reg_3341_pp1_iter5_reg = 12'd0;
#0 etx_ha_m_cur_2_reg_3347 = 64'd0;
#0 r_V_19_reg_3352 = 12'd0;
#0 nsame_V_reg_3358 = 4'd0;
#0 nreduce_V_reg_3366 = 4'd0;
#0 etx_ba_m_idx_2_load_reg_3381 = 32'd0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 cur_bidx_2_reg_3386 = 6'd0;
#0 tmp_439_i_reg_3392_pp1_iter7_reg = 1'd0;
#0 etx_tofollow_load_1_reg_3396 = 32'd0;
#0 r_V_22_reg_3402 = 12'd0;
#0 nebits_reg_3408 = 32'd0;
#0 nebits_reg_3408_pp1_iter7_reg = 32'd0;
#0 p_0_1_0_i_cast_i_reg_3414 = 32'd0;
#0 tmp_235_reg_3420 = 1'd0;
#0 tmp_448_i_reg_3426 = 32'd0;
#0 tmp_219_i_reg_3431 = 12'd0;
#0 tmp_220_i_reg_3436 = 52'd0;
#0 left_4_cast_i_reg_3441 = 32'd0;
#0 overrun_4_reg_3446 = 32'd0;
#0 tmp_456_i_reg_3451 = 1'd0;
#0 etx_ba_m_cur_2_reg_3461 = 64'd0;
#0 nbits_assign_2_reg_3466 = 32'd0;
#0 tmp_12_reg_3472 = 1'd0;
#0 tmp_13_reg_3477 = 63'd0;
#0 left_3_cast_i_reg_3482 = 32'd0;
#0 overrun_2_reg_3487 = 32'd0;
#0 tmp_428_i_reg_3492 = 1'd0;
#0 buf_7_reg_3502 = 64'd0;
#0 etx_ba_m_cur_reg_3507 = 64'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_996 = 10'd0;
#0 ap_phi_reg_pp0_iter1_p_030_0_i1_i_reg_996 = 10'd0;
#0 BitStream64_m_idx_re_reg_1087 = 32'd0;
#0 BitStream64_m_cur_re_reg_1097 = 64'd0;
#0 etx_ha_m_cur_4_fu_320 = 64'd0;
#0 ovr_V_2_fu_328 = 13'd0;
#0 etx_tofollow_fu_332 = 32'd0;
#0 BitStream64_m_cur_re_1_fu_336 = 64'd0;
#0 BitStream64_m_idx_re_1_fu_340 = 32'd0;
#0 etx_ba_m_cur_1_fu_344 = 64'd0;
#0 etx_ba_m_idx_2_fu_348 = 32'd0;
end

APE_encode141_tabbFp #(
    .DataWidth( 10 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
table_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(table_i_address0),
    .ce0(table_i_ce0),
    .we0(table_i_we0),
    .d0(p_070_0_i_i_reg_984),
    .q0(table_i_q0),
    .address1(table_i_address1),
    .ce1(table_i_ce1),
    .q1(table_i_q1)
);

DuneDataCompressibGp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
DuneDataCompressibGp_U777(
    .din0(syms_V_q0),
    .din1(syms_V47_q0),
    .din2(syms_V48_q0),
    .din3(syms_V49_q0),
    .din4(tmp_207_reg_2818),
    .dout(grp_fu_1159_p6)
);

DuneDataCompressibHp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 4 ),
    .din5_WIDTH( 4 ),
    .din6_WIDTH( 4 ),
    .din7_WIDTH( 4 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
DuneDataCompressibHp_U778(
    .din0(hist_m_nobits_V_q0),
    .din1(hist_m_nobits_V33_q0),
    .din2(hist_m_nobits_V34_q0),
    .din3(hist_m_nobits_V35_q0),
    .din4(hist_m_nobits_V36_q0),
    .din5(hist_m_nobits_V37_q0),
    .din6(hist_m_nobits_V38_q0),
    .din7(hist_m_nobits_V39_q0),
    .din8(tmp_208_reg_2828),
    .dout(grp_fu_1172_p10)
);

DuneDataCompressibIp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .din3_WIDTH( 10 ),
    .din4_WIDTH( 10 ),
    .din5_WIDTH( 10 ),
    .din6_WIDTH( 10 ),
    .din7_WIDTH( 10 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 10 ))
DuneDataCompressibIp_U779(
    .din0(hist_m_maxcnt_V_q0),
    .din1(hist_m_maxcnt_V26_q0),
    .din2(hist_m_maxcnt_V27_q0),
    .din3(hist_m_maxcnt_V28_q0),
    .din4(hist_m_maxcnt_V29_q0),
    .din5(hist_m_maxcnt_V30_q0),
    .din6(hist_m_maxcnt_V31_q0),
    .din7(hist_m_maxcnt_V32_q0),
    .din8(tmp_208_reg_2828),
    .dout(maxcnt_V_fu_1283_p10)
);

DuneDataCompressibJp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
DuneDataCompressibJp_U780(
    .din0(hist_m_omask_V_q0),
    .din1(hist_m_omask_V19_q0),
    .din2(hist_m_omask_V20_q0),
    .din3(hist_m_omask_V21_q0),
    .din4(hist_m_omask_V22_q0),
    .din5(hist_m_omask_V23_q0),
    .din6(hist_m_omask_V24_q0),
    .din7(hist_m_omask_V25_q0),
    .din8(tmp_208_reg_2828),
    .dout(p_Val2_48_fu_1402_p10)
);

DuneDataCompressibKp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 24 ))
DuneDataCompressibKp_U781(
    .din0(grp_fu_2791_p0),
    .din1(grp_fu_2791_p1),
    .din2(grp_fu_2791_p2),
    .dout(grp_fu_2791_p3)
);

DuneDataCompressibLp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 24 ))
DuneDataCompressibLp_U782(
    .din0(grp_fu_2800_p0),
    .din1(grp_fu_2800_p1),
    .din2(grp_fu_2800_p2),
    .dout(grp_fu_2800_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        BitStream64_m_cur_re_1_fu_336 <= 64'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter3_reg == 1'd0) & (tmp_415_i_reg_3291_pp1_iter3_reg == 1'd1) & (tmp_229_reg_3326 == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
            BitStream64_m_cur_re_1_fu_336 <= etx_ha_m_cur_2_fu_2040_p3;
        end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter3_reg == 1'd0) & (tmp_229_reg_3326 == 1'd0) & (tmp_415_i_reg_3291_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
            BitStream64_m_cur_re_1_fu_336 <= etx_ha_m_cur_3_fu_1988_p1;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            BitStream64_m_cur_re_1_fu_336 <= BitStream64_m_cur_re_reg_1097;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        BitStream64_m_cur_re_reg_1097 <= 64'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            if ((1'b1 == ap_condition_2159)) begin
                BitStream64_m_cur_re_reg_1097 <= etx_ha_m_cur_4_load_1_load_fu_1664_p1;
            end else if (((tmp_385_i_reg_3022_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
                BitStream64_m_cur_re_reg_1097 <= etx_ha_m_cur_4_fu_320;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        BitStream64_m_idx_re_1_fu_340 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter2_reg == 1'd0) & (tmp_415_i_reg_3291 == 1'd1) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
            BitStream64_m_idx_re_1_fu_340 <= etx_ha_m_idx_1_fu_1903_p2;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            BitStream64_m_idx_re_1_fu_340 <= BitStream64_m_idx_re_reg_1087;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        BitStream64_m_idx_re_reg_1087 <= 32'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            if ((1'b1 == ap_condition_2159)) begin
                BitStream64_m_idx_re_reg_1087 <= etx_ha_m_idx_reg_3153_pp0_iter4_reg;
            end else if (((tmp_385_i_reg_3022_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
                BitStream64_m_idx_re_reg_1087 <= etx_ha_m_idx_i_reg_1054;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((tmp_222_reg_3498 == 1'd0) & (etxOut_ba_m_buf18_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state23))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_predicate_tran9to10_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_fu_1713_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter6_state17)) begin
                ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter5;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp1_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_phi_reg_pp0_iter1_p_030_0_i1_i_reg_996 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_phi_reg_pp0_iter1_p_030_0_i1_i_reg_996 <= ap_phi_reg_pp0_iter0_p_030_0_i1_i_reg_996;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_996 <= 10'd0;
    end else begin
        if ((1'b1 == ap_condition_894)) begin
            if ((1'b1 == ap_condition_983)) begin
                ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_996 <= 10'd0;
            end else if ((1'b1 == 1'b1)) begin
                ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_996 <= ap_phi_reg_pp0_iter1_p_030_0_i1_i_reg_996;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        buf_7_reg_3502 <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            buf_7_reg_3502 <= buf_7_fu_2743_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        cur_V_reg_3258 <= 12'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            cur_V_reg_3258 <= grp_fu_1159_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        cur_bidx_2_reg_3386 <= 6'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
            cur_bidx_2_reg_3386 <= cur_bidx_2_fu_2266_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        cv_m_lo_V_1_reg_3341 <= 12'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter3_reg == 1'd0))) begin
            cv_m_lo_V_1_reg_3341 <= {{grp_fu_2800_p3[21:10]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        cv_m_lo_V_1_reg_3341_pp1_iter5_reg <= 12'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            cv_m_lo_V_1_reg_3341_pp1_iter5_reg <= cv_m_lo_V_1_reg_3341;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ba_m_cur_1_fu_344 <= 64'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_439_i_reg_3392_pp1_iter7_reg == 1'd0) & (tmp_238_reg_3457 == 1'd1) & (ap_enable_reg_pp1_iter8 == 1'b1))) begin
            etx_ba_m_cur_1_fu_344 <= etx_ba_m_cur_2_fu_2582_p2;
        end else if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_439_i_reg_3392_pp1_iter7_reg == 1'd0) & (tmp_238_reg_3457 == 1'd0) & (ap_enable_reg_pp1_iter8 == 1'b1))) begin
            etx_ba_m_cur_1_fu_344 <= buf_6_fu_2545_p3;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            etx_ba_m_cur_1_fu_344 <= 64'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ba_m_cur_2_reg_3461 <= 64'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_439_i_reg_3392_pp1_iter7_reg == 1'd0))) begin
            etx_ba_m_cur_2_reg_3461 <= etx_ba_m_cur_2_fu_2582_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ba_m_cur_reg_3507 <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            etx_ba_m_cur_reg_3507 <= etx_ba_m_cur_fu_2780_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ba_m_idx_2_fu_348 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_439_i_fu_2283_p2 == 1'd0) & (exitcond_reg_3249_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
            etx_ba_m_idx_2_fu_348 <= etx_ba_m_idx_fu_2369_p2;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            etx_ba_m_idx_2_fu_348 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ba_m_idx_2_load_reg_3381 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
            etx_ba_m_idx_2_load_reg_3381 <= etx_ba_m_idx_2_fu_348;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_cv_m_hi_V_reg_1138 <= 12'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            etx_cv_m_hi_V_reg_1138 <= 12'd4095;
        end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
            etx_cv_m_hi_V_reg_1138 <= cv_m_hi_V_fu_2257_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_cv_m_lo_V_reg_1126 <= 11'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            etx_cv_m_lo_V_reg_1126 <= 11'd0;
        end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
            etx_cv_m_lo_V_reg_1126 <= r_V_23_fu_2218_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ha_m_cur_2_reg_3347 <= 64'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter3_reg == 1'd0) & (tmp_415_i_reg_3291_pp1_iter3_reg == 1'd1))) begin
            etx_ha_m_cur_2_reg_3347 <= etx_ha_m_cur_2_fu_2040_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ha_m_cur_4_fu_320 <= 64'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_385_i_reg_3022_pp0_iter3_reg == 1'd1) & (tmp_212_reg_3149 == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            etx_ha_m_cur_4_fu_320 <= etx_ha_m_cur_fu_1642_p3;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_212_reg_3149 == 1'd0) & (tmp_385_i_reg_3022_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            etx_ha_m_cur_4_fu_320 <= etx_ha_m_cur_1_fu_1590_p1;
        end else if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            etx_ha_m_cur_4_fu_320 <= 64'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ha_m_cur_reg_3169 <= 64'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_385_i_reg_3022_pp0_iter3_reg == 1'd1))) begin
            etx_ha_m_cur_reg_3169 <= etx_ha_m_cur_fu_1642_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ha_m_idx_i_reg_1054 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_213_reg_3031_pp0_iter3_reg == 1'd0) & (tmp_385_i_reg_3022_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            etx_ha_m_idx_i_reg_1054 <= etx_ha_m_idx_reg_3153;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            etx_ha_m_idx_i_reg_1054 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ha_m_idx_reg_3153 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_385_i_reg_3022_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            etx_ha_m_idx_reg_3153 <= etx_ha_m_idx_fu_1538_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ha_m_idx_reg_3153_pp0_iter4_reg <= 32'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            etx_ha_m_idx_reg_3153_pp0_iter4_reg <= etx_ha_m_idx_reg_3153;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_tofollow_fu_332 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter5_reg == 1'd0) & (tmp_439_i_fu_2283_p2 == 1'd1) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
            etx_tofollow_fu_332 <= npending_fu_2393_p2;
        end else if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_439_i_fu_2283_p2 == 1'd0) & (exitcond_reg_3249_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
            etx_tofollow_fu_332 <= npending_1_fu_2375_p1;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            etx_tofollow_fu_332 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_tofollow_load_1_reg_3396 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
            etx_tofollow_load_1_reg_3396 <= etx_tofollow_fu_332;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        exitcond_reg_3249 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            exitcond_reg_3249 <= exitcond_fu_1713_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        exitcond_reg_3249_pp1_iter1_reg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            exitcond_reg_3249_pp1_iter1_reg <= exitcond_reg_3249;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        exitcond_reg_3249_pp1_iter2_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            exitcond_reg_3249_pp1_iter2_reg <= exitcond_reg_3249_pp1_iter1_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        exitcond_reg_3249_pp1_iter3_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            exitcond_reg_3249_pp1_iter3_reg <= exitcond_reg_3249_pp1_iter2_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        exitcond_reg_3249_pp1_iter4_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            exitcond_reg_3249_pp1_iter4_reg <= exitcond_reg_3249_pp1_iter3_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        exitcond_reg_3249_pp1_iter5_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            exitcond_reg_3249_pp1_iter5_reg <= exitcond_reg_3249_pp1_iter4_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V33_ad_reg_2886 <= 2'd0;
    end else begin
        if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V33_ad_reg_2886 <= newIndex59_cast_i_fu_1235_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V34_ad_reg_2891 <= 2'd0;
    end else begin
        if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V34_ad_reg_2891 <= newIndex59_cast_i_fu_1235_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V35_ad_reg_2896 <= 2'd0;
    end else begin
        if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V35_ad_reg_2896 <= newIndex59_cast_i_fu_1235_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V36_ad_reg_2901 <= 2'd0;
    end else begin
        if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V36_ad_reg_2901 <= newIndex59_cast_i_fu_1235_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V37_ad_reg_2906 <= 2'd0;
    end else begin
        if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V37_ad_reg_2906 <= newIndex59_cast_i_fu_1235_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V38_ad_reg_2911 <= 2'd0;
    end else begin
        if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V38_ad_reg_2911 <= newIndex59_cast_i_fu_1235_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V39_ad_reg_2916 <= 2'd0;
    end else begin
        if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V39_ad_reg_2916 <= newIndex59_cast_i_fu_1235_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V_addr_reg_2881 <= 2'd0;
    end else begin
        if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V_addr_reg_2881 <= newIndex59_cast_i_fu_1235_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V19_add_reg_2926 <= 2'd0;
    end else begin
        if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V19_add_reg_2926 <= newIndex59_cast_i_fu_1235_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V20_add_reg_2931 <= 2'd0;
    end else begin
        if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V20_add_reg_2931 <= newIndex59_cast_i_fu_1235_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V21_add_reg_2936 <= 2'd0;
    end else begin
        if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V21_add_reg_2936 <= newIndex59_cast_i_fu_1235_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V22_add_reg_2941 <= 2'd0;
    end else begin
        if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V22_add_reg_2941 <= newIndex59_cast_i_fu_1235_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V23_add_reg_2946 <= 2'd0;
    end else begin
        if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V23_add_reg_2946 <= newIndex59_cast_i_fu_1235_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V24_add_reg_2951 <= 2'd0;
    end else begin
        if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V24_add_reg_2951 <= newIndex59_cast_i_fu_1235_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V25_add_reg_2956 <= 2'd0;
    end else begin
        if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V25_add_reg_2956 <= newIndex59_cast_i_fu_1235_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V_addr_reg_2921 <= 2'd0;
    end else begin
        if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V_addr_reg_2921 <= newIndex59_cast_i_fu_1235_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        i_assign_reg_972 <= 6'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_213_reg_3031 == 1'd0) & (tmp_385_i_reg_3022 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            i_assign_reg_972 <= ibin_reg_3026;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            i_assign_reg_972 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        i_assign_reg_972_pp0_iter1_reg <= 6'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            i_assign_reg_972_pp0_iter1_reg <= i_assign_reg_972;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ibin_reg_3026 <= 6'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ibin_reg_3026 <= ibin_fu_1384_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                left_3_cast_i_reg_3482[0] <= 1'b0;
        left_3_cast_i_reg_3482[1] <= 1'b0;
        left_3_cast_i_reg_3482[2] <= 1'b0;
        left_3_cast_i_reg_3482[3] <= 1'b0;
        left_3_cast_i_reg_3482[4] <= 1'b0;
        left_3_cast_i_reg_3482[5] <= 1'b0;
        left_3_cast_i_reg_3482[6] <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
                        left_3_cast_i_reg_3482[6 : 0] <= left_3_cast_i_fu_2719_p1[6 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        left_3_reg_3310 <= 7'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter2_reg == 1'd0) & (tmp_415_i_reg_3291 == 1'd1))) begin
            left_3_reg_3310 <= left_3_fu_1874_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                left_4_cast_i_reg_3441[0] <= 1'b0;
        left_4_cast_i_reg_3441[1] <= 1'b0;
        left_4_cast_i_reg_3441[2] <= 1'b0;
        left_4_cast_i_reg_3441[3] <= 1'b0;
        left_4_cast_i_reg_3441[4] <= 1'b0;
        left_4_cast_i_reg_3441[5] <= 1'b0;
        left_4_cast_i_reg_3441[6] <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_439_i_reg_3392 == 1'd0))) begin
                        left_4_cast_i_reg_3441[6 : 0] <= left_4_cast_i_fu_2522_p1[6 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        left_V_reg_3123 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_385_i_reg_3022_pp0_iter1_reg == 1'd1))) begin
            left_V_reg_3123 <= left_V_fu_1483_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                left_cast_i_reg_3133[0] <= 1'b0;
        left_cast_i_reg_3133[1] <= 1'b0;
        left_cast_i_reg_3133[2] <= 1'b0;
        left_cast_i_reg_3133[3] <= 1'b0;
        left_cast_i_reg_3133[4] <= 1'b0;
        left_cast_i_reg_3133[5] <= 1'b0;
        left_cast_i_reg_3133[6] <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_385_i_reg_3022_pp0_iter2_reg == 1'd1))) begin
                        left_cast_i_reg_3133[6 : 0] <= left_cast_i_fu_1514_p1[6 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        nbits_3_reg_3011 <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            nbits_3_reg_3011 <= nbits_3_fu_1352_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        nbits_assign_2_reg_3466 <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            nbits_assign_2_reg_3466 <= nbits_assign_2_fu_2612_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                nbits_assign_3_cast_s_reg_3305[0] <= 1'b0;
        nbits_assign_3_cast_s_reg_3305[1] <= 1'b0;
        nbits_assign_3_cast_s_reg_3305[2] <= 1'b0;
        nbits_assign_3_cast_s_reg_3305[3] <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter2_reg == 1'd0) & (tmp_415_i_reg_3291 == 1'd1))) begin
                        nbits_assign_3_cast_s_reg_3305[3 : 0] <= nbits_assign_3_cast_s_fu_1866_p1[3 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        nbits_assign_reg_1066 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_213_reg_3031_pp0_iter3_reg == 1'd0) & (tmp_385_i_reg_3022_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            nbits_assign_reg_1066 <= p_mbits_0_i_i_reg_3159;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            nbits_assign_reg_1066 <= 32'd32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        nebits_reg_3408 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_439_i_fu_2283_p2 == 1'd0) & (exitcond_reg_3249_pp1_iter5_reg == 1'd0))) begin
            nebits_reg_3408 <= nebits_fu_2339_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        nebits_reg_3408_pp1_iter7_reg <= 32'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            nebits_reg_3408_pp1_iter7_reg <= nebits_reg_3408;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        nreduce_V_reg_3366 <= 4'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter4_reg == 1'd0))) begin
            nreduce_V_reg_3366 <= nreduce_V_fu_2206_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        nsame_V_reg_3358 <= 4'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter4_reg == 1'd0))) begin
            nsame_V_reg_3358 <= nsame_V_fu_2107_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        overrun_2_reg_3487 <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            overrun_2_reg_3487 <= overrun_2_fu_2723_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        overrun_3_reg_3315 <= 7'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter2_reg == 1'd0) & (tmp_415_i_reg_3291 == 1'd1))) begin
            overrun_3_reg_3315 <= overrun_3_fu_1880_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        overrun_4_reg_3446 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_439_i_reg_3392 == 1'd0))) begin
            overrun_4_reg_3446 <= overrun_4_fu_2526_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        overrun_reg_3138 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_385_i_reg_3022_pp0_iter2_reg == 1'd1))) begin
            overrun_reg_3138 <= overrun_fu_1518_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ovr_V_1_reg_3274 <= 13'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter1_reg == 1'd0))) begin
            ovr_V_1_reg_3274 <= ovr_V_1_fu_1811_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ovr_V_1_reg_3274_pp1_iter3_reg <= 13'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            ovr_V_1_reg_3274_pp1_iter3_reg <= ovr_V_1_reg_3274;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ovr_V_2_fu_328 <= 13'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
            ovr_V_2_fu_328 <= ovr_V_1_fu_1811_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_0100_0_i_i_reg_1078 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_213_reg_3031_pp0_iter3_reg == 1'd0) & (tmp_385_i_reg_3022_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            p_0100_0_i_i_reg_1078 <= bits_V_1_fu_1660_p1;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            p_0100_0_i_i_reg_1078 <= bits_V_fu_1372_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_030_0_i1_i_reg_996 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            if ((1'b1 == ap_condition_976)) begin
                p_030_0_i1_i_reg_996 <= hist_m_bins_V468_q0;
            end else if ((1'b1 == ap_condition_973)) begin
                p_030_0_i1_i_reg_996 <= hist_m_bins_V46_q0;
            end else if ((1'b1 == ap_condition_967)) begin
                p_030_0_i1_i_reg_996 <= hist_m_bins_V457_q0;
            end else if ((1'b1 == ap_condition_964)) begin
                p_030_0_i1_i_reg_996 <= hist_m_bins_V45_q0;
            end else if ((1'b1 == ap_condition_958)) begin
                p_030_0_i1_i_reg_996 <= hist_m_bins_V446_q0;
            end else if ((1'b1 == ap_condition_955)) begin
                p_030_0_i1_i_reg_996 <= hist_m_bins_V44_q0;
            end else if ((1'b1 == ap_condition_949)) begin
                p_030_0_i1_i_reg_996 <= hist_m_bins_V435_q0;
            end else if ((1'b1 == ap_condition_946)) begin
                p_030_0_i1_i_reg_996 <= hist_m_bins_V43_q0;
            end else if ((1'b1 == ap_condition_940)) begin
                p_030_0_i1_i_reg_996 <= hist_m_bins_V424_q0;
            end else if ((1'b1 == ap_condition_937)) begin
                p_030_0_i1_i_reg_996 <= hist_m_bins_V42_q0;
            end else if ((1'b1 == ap_condition_931)) begin
                p_030_0_i1_i_reg_996 <= hist_m_bins_V413_q0;
            end else if ((1'b1 == ap_condition_928)) begin
                p_030_0_i1_i_reg_996 <= hist_m_bins_V41_q0;
            end else if ((1'b1 == ap_condition_922)) begin
                p_030_0_i1_i_reg_996 <= hist_m_bins_V402_q0;
            end else if ((1'b1 == ap_condition_919)) begin
                p_030_0_i1_i_reg_996 <= hist_m_bins_V40_q0;
            end else if ((1'b1 == ap_condition_913)) begin
                p_030_0_i1_i_reg_996 <= hist_m_bins_V1_q0;
            end else if ((1'b1 == ap_condition_908)) begin
                p_030_0_i1_i_reg_996 <= hist_m_bins_V_q0;
            end else if ((1'b1 == 1'b1)) begin
                p_030_0_i1_i_reg_996 <= ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_996;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_030_0_i1_i_reg_996_pp0_iter3_reg <= 10'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            p_030_0_i1_i_reg_996_pp0_iter3_reg <= p_030_0_i1_i_reg_996;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_070_0_i_i_reg_984 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_213_reg_3031_pp0_iter1_reg == 1'd0) & (tmp_385_i_reg_3022_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            p_070_0_i_i_reg_984 <= total_V_fu_1494_p2;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            p_070_0_i_i_reg_984 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_0_1_0_i_cast_i_reg_3414 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_439_i_fu_2283_p2 == 1'd0) & (exitcond_reg_3249_pp1_iter5_reg == 1'd0))) begin
            p_0_1_0_i_cast_i_reg_3414 <= p_0_1_0_i_cast_i_fu_2351_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_Result_60_reg_2986 <= 10'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            p_Result_60_reg_2986 <= p_Result_60_fu_1304_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_i_reg_1117 <= 12'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            p_i_reg_1117 <= prv_V_reg_3006;
        end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
            p_i_reg_1117 <= cur_V_reg_3258;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_mbits_0_i_i_reg_3159 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_213_reg_3031_pp0_iter2_reg == 1'd0) & (tmp_385_i_reg_3022_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            p_mbits_0_i_i_reg_3159 <= p_mbits_0_i_i_fu_1580_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                p_shl_cast_reg_2996[4] <= 1'b0;
        p_shl_cast_reg_2996[5] <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
                        p_shl_cast_reg_2996[5 : 4] <= p_shl_cast_fu_1327_p1[5 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        prv_V_reg_3006 <= 12'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            prv_V_reg_3006 <= grp_fu_1159_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        r_V_10_reg_3330 <= 24'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
            r_V_10_reg_3330 <= grp_fu_2791_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        r_V_12_reg_3336 <= 24'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
            r_V_12_reg_3336 <= grp_fu_2800_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        r_V_19_reg_3352 <= 12'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter3_reg == 1'd0))) begin
            r_V_19_reg_3352 <= r_V_19_fu_2058_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        r_V_22_reg_3402 <= 12'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_439_i_fu_2283_p2 == 1'd0) & (exitcond_reg_3249_pp1_iter5_reg == 1'd0))) begin
            r_V_22_reg_3402 <= r_V_22_fu_2331_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        r_V_i_reg_3263 <= 12'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            r_V_i_reg_3263 <= r_V_i_fu_1725_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        syms_pn_rec_i_reg_1106 <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            syms_pn_rec_i_reg_1106 <= 64'd1;
        end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_fu_1713_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            syms_pn_rec_i_reg_1106 <= phitmp2_i_fu_1719_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        table_i_load_1_reg_3300 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
            table_i_load_1_reg_3300 <= table_i_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        table_i_load_reg_3295 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
            table_i_load_reg_3295 <= table_i_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                tmp_110_cast_reg_2991[10] <= 1'b0;
        tmp_110_cast_reg_2991[11] <= 1'b0;
        tmp_110_cast_reg_2991[12] <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
                        tmp_110_cast_reg_2991[12 : 10] <= tmp_110_cast_fu_1314_p1[12 : 10];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_12_reg_3472 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            tmp_12_reg_3472 <= tmp_12_fu_2694_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_13_reg_3477 <= 63'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            tmp_13_reg_3477 <= {{buf_1_i_i_i_fu_2682_p3[63:1]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_207_reg_2818 <= 2'd0;
    end else begin
        if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            tmp_207_reg_2818 <= tmp_207_fu_1207_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_208_reg_2828 <= 3'd0;
    end else begin
        if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            tmp_208_reg_2828 <= tmp_208_fu_1221_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_212_reg_3149 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_385_i_reg_3022_pp0_iter2_reg == 1'd1))) begin
            tmp_212_reg_3149 <= overrun_fu_1518_p2[32'd31];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_212_reg_3149_pp0_iter4_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_212_reg_3149_pp0_iter4_reg <= tmp_212_reg_3149;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_213_reg_3031 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_385_i_fu_1378_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_213_reg_3031 <= ap_phi_mux_i_assign_phi_fu_976_p4[32'd5];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_213_reg_3031_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_213_reg_3031_pp0_iter1_reg <= tmp_213_reg_3031;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_213_reg_3031_pp0_iter2_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_213_reg_3031_pp0_iter2_reg <= tmp_213_reg_3031_pp0_iter1_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_213_reg_3031_pp0_iter3_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_213_reg_3031_pp0_iter3_reg <= tmp_213_reg_3031_pp0_iter2_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_213_reg_3031_pp0_iter4_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_213_reg_3031_pp0_iter4_reg <= tmp_213_reg_3031_pp0_iter3_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_214_reg_3035 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_213_reg_3031 == 1'd0) & (tmp_385_i_reg_3022 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_214_reg_3035 <= tmp_214_fu_1423_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_218_reg_3039 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_213_reg_3031 == 1'd0) & (tmp_214_fu_1423_p3 == 1'd1) & (tmp_385_i_reg_3022 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_218_reg_3039 <= tmp_218_fu_1431_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_219_i_reg_3431 <= 12'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_439_i_reg_3392 == 1'd0))) begin
            tmp_219_i_reg_3431 <= tmp_219_i_fu_2497_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_220_i_reg_3436 <= 52'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_439_i_reg_3392 == 1'd0))) begin
            tmp_220_i_reg_3436 <= {{buf_1_i_i_fu_2485_p3[63:12]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_222_reg_3498 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            tmp_222_reg_3498 <= overrun_2_fu_2723_p2[32'd31];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_229_reg_3326 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter2_reg == 1'd0) & (tmp_415_i_reg_3291 == 1'd1))) begin
            tmp_229_reg_3326 <= overrun_3_fu_1880_p2[32'd6];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_229_reg_3326_pp1_iter4_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            tmp_229_reg_3326_pp1_iter4_reg <= tmp_229_reg_3326;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_235_reg_3420 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_439_i_fu_2283_p2 == 1'd0) & (exitcond_reg_3249_pp1_iter5_reg == 1'd0))) begin
            tmp_235_reg_3420 <= tmp_235_fu_2355_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_238_reg_3457 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_439_i_reg_3392 == 1'd0))) begin
            tmp_238_reg_3457 <= overrun_4_fu_2526_p2[32'd31];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_238_reg_3457_pp1_iter8_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            tmp_238_reg_3457_pp1_iter8_reg <= tmp_238_reg_3457;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_385_i_reg_3022 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_385_i_reg_3022 <= tmp_385_i_fu_1378_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_385_i_reg_3022_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_385_i_reg_3022_pp0_iter1_reg <= tmp_385_i_reg_3022;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_385_i_reg_3022_pp0_iter2_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_385_i_reg_3022_pp0_iter2_reg <= tmp_385_i_reg_3022_pp0_iter1_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_385_i_reg_3022_pp0_iter3_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_385_i_reg_3022_pp0_iter3_reg <= tmp_385_i_reg_3022_pp0_iter2_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_385_i_reg_3022_pp0_iter4_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_385_i_reg_3022_pp0_iter4_reg <= tmp_385_i_reg_3022_pp0_iter3_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_387_i_reg_3143 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_385_i_reg_3022_pp0_iter2_reg == 1'd1))) begin
            tmp_387_i_reg_3143 <= tmp_387_i_fu_1524_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                tmp_404_i_reg_3269[1] <= 1'b0;
        tmp_404_i_reg_3269[2] <= 1'b0;
        tmp_404_i_reg_3269[3] <= 1'b0;
        tmp_404_i_reg_3269[4] <= 1'b0;
        tmp_404_i_reg_3269[5] <= 1'b0;
        tmp_404_i_reg_3269[6] <= 1'b0;
        tmp_404_i_reg_3269[7] <= 1'b0;
        tmp_404_i_reg_3269[8] <= 1'b0;
        tmp_404_i_reg_3269[9] <= 1'b0;
        tmp_404_i_reg_3269[10] <= 1'b0;
        tmp_404_i_reg_3269[11] <= 1'b0;
        tmp_404_i_reg_3269[12] <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
                        tmp_404_i_reg_3269[12 : 1] <= tmp_404_i_fu_1745_p2[12 : 1];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_415_i_reg_3291 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter1_reg == 1'd0))) begin
            tmp_415_i_reg_3291 <= tmp_415_i_fu_1847_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_415_i_reg_3291_pp1_iter3_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            tmp_415_i_reg_3291_pp1_iter3_reg <= tmp_415_i_reg_3291;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_415_i_reg_3291_pp1_iter4_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            tmp_415_i_reg_3291_pp1_iter4_reg <= tmp_415_i_reg_3291_pp1_iter3_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_417_i_reg_3320 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter2_reg == 1'd0) & (tmp_415_i_reg_3291 == 1'd1))) begin
            tmp_417_i_reg_3320 <= tmp_417_i_fu_1886_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_428_i_reg_3492 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            tmp_428_i_reg_3492 <= tmp_428_i_fu_2729_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_439_i_reg_3392 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3249_pp1_iter5_reg == 1'd0))) begin
            tmp_439_i_reg_3392 <= tmp_439_i_fu_2283_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_439_i_reg_3392_pp1_iter7_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            tmp_439_i_reg_3392_pp1_iter7_reg <= tmp_439_i_reg_3392;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_439_i_reg_3392_pp1_iter8_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            tmp_439_i_reg_3392_pp1_iter8_reg <= tmp_439_i_reg_3392_pp1_iter7_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_448_i_reg_3426 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_439_i_fu_2283_p2 == 1'd0) & (exitcond_reg_3249_pp1_iter5_reg == 1'd0))) begin
            tmp_448_i_reg_3426 <= tmp_448_i_fu_2363_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_456_i_reg_3451 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_439_i_reg_3392 == 1'd0))) begin
            tmp_456_i_reg_3451 <= tmp_456_i_fu_2531_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                tmp_90_reg_2961[10] <= 1'b0;
        tmp_90_reg_2961[11] <= 1'b0;
        tmp_90_reg_2961[12] <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
                        tmp_90_reg_2961[12 : 10] <= tmp_90_fu_1268_p3[12 : 10];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_92_reg_2835 <= 2'd0;
    end else begin
        if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            tmp_92_reg_2835 <= {{hist_m_omask_V_offset_dout[4:3]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_94_reg_3001 <= 7'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            tmp_94_reg_3001 <= tmp_94_fu_1331_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_s_reg_2823 <= 3'd0;
    end else begin
        if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            tmp_s_reg_2823 <= {{hist_m_omask_V_offset_dout[4:2]}};
        end
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter6 == 1'b1) & (ap_enable_reg_pp1_iter5 == 1'b0))) begin
        ap_condition_pp1_exit_iter6_state17 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter6_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((~((tmp_222_reg_3498 == 1'd0) & (etxOut_ba_m_buf18_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state23))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((tmp_222_reg_3498 == 1'd1)) begin
            ap_phi_mux_BitStream64_m_cur_re_2_phi_fu_1152_p4 = etx_ba_m_cur_reg_3507;
        end else if ((tmp_222_reg_3498 == 1'd0)) begin
            ap_phi_mux_BitStream64_m_cur_re_2_phi_fu_1152_p4 = buf_7_reg_3502;
        end else begin
            ap_phi_mux_BitStream64_m_cur_re_2_phi_fu_1152_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_BitStream64_m_cur_re_2_phi_fu_1152_p4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_reg_3249_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        ap_phi_mux_etx_cv_m_hi_V_phi_fu_1142_p4 = cv_m_hi_V_fu_2257_p2;
    end else begin
        ap_phi_mux_etx_cv_m_hi_V_phi_fu_1142_p4 = etx_cv_m_hi_V_reg_1138;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_reg_3249_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        ap_phi_mux_etx_cv_m_lo_V_phi_fu_1130_p4 = r_V_23_fu_2218_p2;
    end else begin
        ap_phi_mux_etx_cv_m_lo_V_phi_fu_1130_p4 = etx_cv_m_lo_V_reg_1126;
    end
end

always @ (*) begin
    if (((tmp_213_reg_3031_pp0_iter3_reg == 1'd0) & (tmp_385_i_reg_3022_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_phi_mux_etx_ha_m_idx_i_phi_fu_1058_p4 = etx_ha_m_idx_reg_3153;
    end else begin
        ap_phi_mux_etx_ha_m_idx_i_phi_fu_1058_p4 = etx_ha_m_idx_i_reg_1054;
    end
end

always @ (*) begin
    if (((tmp_213_reg_3031 == 1'd0) & (tmp_385_i_reg_3022 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_assign_phi_fu_976_p4 = ibin_reg_3026;
    end else begin
        ap_phi_mux_i_assign_phi_fu_976_p4 = i_assign_reg_972;
    end
end

always @ (*) begin
    if (((tmp_213_reg_3031_pp0_iter3_reg == 1'd0) & (tmp_385_i_reg_3022_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_phi_mux_nbits_assign_phi_fu_1070_p4 = p_mbits_0_i_i_reg_3159;
    end else begin
        ap_phi_mux_nbits_assign_phi_fu_1070_p4 = nbits_assign_reg_1066;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2164)) begin
        if (((tmp_208_reg_2828 == 3'd7) & (tmp_218_reg_3039 == 1'd1))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1000_p34 = hist_m_bins_V468_q0;
        end else if (((tmp_208_reg_2828 == 3'd7) & (tmp_218_reg_3039 == 1'd0))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1000_p34 = hist_m_bins_V46_q0;
        end else if (((tmp_208_reg_2828 == 3'd6) & (tmp_218_reg_3039 == 1'd1))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1000_p34 = hist_m_bins_V457_q0;
        end else if (((tmp_208_reg_2828 == 3'd6) & (tmp_218_reg_3039 == 1'd0))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1000_p34 = hist_m_bins_V45_q0;
        end else if (((tmp_208_reg_2828 == 3'd5) & (tmp_218_reg_3039 == 1'd1))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1000_p34 = hist_m_bins_V446_q0;
        end else if (((tmp_208_reg_2828 == 3'd5) & (tmp_218_reg_3039 == 1'd0))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1000_p34 = hist_m_bins_V44_q0;
        end else if (((tmp_208_reg_2828 == 3'd4) & (tmp_218_reg_3039 == 1'd1))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1000_p34 = hist_m_bins_V435_q0;
        end else if (((tmp_208_reg_2828 == 3'd4) & (tmp_218_reg_3039 == 1'd0))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1000_p34 = hist_m_bins_V43_q0;
        end else if (((tmp_208_reg_2828 == 3'd3) & (tmp_218_reg_3039 == 1'd1))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1000_p34 = hist_m_bins_V424_q0;
        end else if (((tmp_208_reg_2828 == 3'd3) & (tmp_218_reg_3039 == 1'd0))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1000_p34 = hist_m_bins_V42_q0;
        end else if (((tmp_208_reg_2828 == 3'd2) & (tmp_218_reg_3039 == 1'd1))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1000_p34 = hist_m_bins_V413_q0;
        end else if (((tmp_208_reg_2828 == 3'd2) & (tmp_218_reg_3039 == 1'd0))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1000_p34 = hist_m_bins_V41_q0;
        end else if (((tmp_208_reg_2828 == 3'd1) & (tmp_218_reg_3039 == 1'd1))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1000_p34 = hist_m_bins_V402_q0;
        end else if (((tmp_208_reg_2828 == 3'd1) & (tmp_218_reg_3039 == 1'd0))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1000_p34 = hist_m_bins_V40_q0;
        end else if (((tmp_208_reg_2828 == 3'd0) & (tmp_218_reg_3039 == 1'd1))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1000_p34 = hist_m_bins_V1_q0;
        end else if (((tmp_208_reg_2828 == 3'd0) & (tmp_218_reg_3039 == 1'd0))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1000_p34 = hist_m_bins_V_q0;
        end else begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1000_p34 = ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_996;
        end
    end else begin
        ap_phi_mux_p_030_0_i1_i_phi_fu_1000_p34 = ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_996;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_reg_3249_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_mux_p_i_phi_fu_1120_p4 = cur_V_reg_3258;
    end else begin
        ap_phi_mux_p_i_phi_fu_1120_p4 = p_i_reg_1117;
    end
end

always @ (*) begin
    if ((~((tmp_222_reg_3498 == 1'd0) & (etxOut_ba_m_buf18_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state23))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_222_reg_3498 == 1'd0) & (1'b1 == ap_CS_fsm_state23)) | ((1'b0 == ap_block_pp1_stage0) & (tmp_238_reg_3457_pp1_iter8_reg == 1'd0) & (tmp_439_i_reg_3392_pp1_iter8_reg == 1'd0) & (ap_enable_reg_pp1_iter9 == 1'b1)))) begin
        etxOut_ba_m_buf18_blk_n = etxOut_ba_m_buf18_full_n;
    end else begin
        etxOut_ba_m_buf18_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((tmp_222_reg_3498 == 1'd0) & (etxOut_ba_m_buf18_full_n == 1'b0)) & (tmp_222_reg_3498 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        etxOut_ba_m_buf18_din = etx_ba_m_cur_reg_3507;
    end else if (((ap_predicate_op519_write_state20 == 1'b1) & (ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0_01001))) begin
        etxOut_ba_m_buf18_din = etx_ba_m_cur_2_reg_3461;
    end else begin
        etxOut_ba_m_buf18_din = 'bx;
    end
end

always @ (*) begin
    if (((~((tmp_222_reg_3498 == 1'd0) & (etxOut_ba_m_buf18_full_n == 1'b0)) & (tmp_222_reg_3498 == 1'd0) & (1'b1 == ap_CS_fsm_state23)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_predicate_op519_write_state20 == 1'b1) & (ap_enable_reg_pp1_iter9 == 1'b1)))) begin
        etxOut_ba_m_buf18_write = 1'b1;
    end else begin
        etxOut_ba_m_buf18_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((tmp_222_reg_3498 == 1'd0) & (etxOut_ba_m_buf18_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state23))) begin
        etxOut_ba_m_ccur12_ap_vld = 1'b1;
    end else begin
        etxOut_ba_m_ccur12_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~((tmp_222_reg_3498 == 1'd0) & (etxOut_ba_m_buf18_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state23))) begin
        etxOut_ba_m_cidx15_ap_vld = 1'b1;
    end else begin
        etxOut_ba_m_cidx15_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0) & (tmp_229_reg_3326_pp1_iter4_reg == 1'd0) & (exitcond_reg_3249_pp1_iter4_reg == 1'd0) & (tmp_415_i_reg_3291_pp1_iter4_reg == 1'd1) & (ap_enable_reg_pp1_iter5 == 1'b1)) | ((tmp_212_reg_3149_pp0_iter4_reg == 1'd0) & (tmp_385_i_reg_3022_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
        etxOut_ha_m_buf9_blk_n = etxOut_ha_m_buf9_full_n;
    end else begin
        etxOut_ha_m_buf9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op417_write_state16 == 1'b1) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_01001))) begin
        etxOut_ha_m_buf9_din = etx_ha_m_cur_2_reg_3347;
    end else if (((ap_predicate_op273_write_state9 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        etxOut_ha_m_buf9_din = etx_ha_m_cur_reg_3169;
    end else begin
        etxOut_ha_m_buf9_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_predicate_op417_write_state16 == 1'b1) & (ap_enable_reg_pp1_iter5 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op273_write_state9 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
        etxOut_ha_m_buf9_write = 1'b1;
    end else begin
        etxOut_ha_m_buf9_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((tmp_222_reg_3498 == 1'd0) & (etxOut_ba_m_buf18_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state23))) begin
        etxOut_ha_m_ccur3_ap_vld = 1'b1;
    end else begin
        etxOut_ha_m_ccur3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~((tmp_222_reg_3498 == 1'd0) & (etxOut_ba_m_buf18_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state23))) begin
        etxOut_ha_m_cidx6_ap_vld = 1'b1;
    end else begin
        etxOut_ha_m_cidx6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V1_ce0 = 1'b1;
    end else begin
        hist_m_bins_V1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V402_ce0 = 1'b1;
    end else begin
        hist_m_bins_V402_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V40_ce0 = 1'b1;
    end else begin
        hist_m_bins_V40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V413_ce0 = 1'b1;
    end else begin
        hist_m_bins_V413_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V41_ce0 = 1'b1;
    end else begin
        hist_m_bins_V41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V424_ce0 = 1'b1;
    end else begin
        hist_m_bins_V424_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V42_ce0 = 1'b1;
    end else begin
        hist_m_bins_V42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V435_ce0 = 1'b1;
    end else begin
        hist_m_bins_V435_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V43_ce0 = 1'b1;
    end else begin
        hist_m_bins_V43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V446_ce0 = 1'b1;
    end else begin
        hist_m_bins_V446_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V44_ce0 = 1'b1;
    end else begin
        hist_m_bins_V44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V457_ce0 = 1'b1;
    end else begin
        hist_m_bins_V457_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V45_ce0 = 1'b1;
    end else begin
        hist_m_bins_V45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V468_ce0 = 1'b1;
    end else begin
        hist_m_bins_V468_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V46_ce0 = 1'b1;
    end else begin
        hist_m_bins_V46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V_ce0 = 1'b1;
    end else begin
        hist_m_bins_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V26_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V27_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V28_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V29_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V30_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V31_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V32_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V33_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V34_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V35_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V36_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V37_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V38_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V39_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V19_ce0 = 1'b1;
    end else begin
        hist_m_omask_V19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V20_ce0 = 1'b1;
    end else begin
        hist_m_omask_V20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V21_ce0 = 1'b1;
    end else begin
        hist_m_omask_V21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V22_ce0 = 1'b1;
    end else begin
        hist_m_omask_V22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V23_ce0 = 1'b1;
    end else begin
        hist_m_omask_V23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V24_ce0 = 1'b1;
    end else begin
        hist_m_omask_V24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V25_ce0 = 1'b1;
    end else begin
        hist_m_omask_V25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V_ce0 = 1'b1;
    end else begin
        hist_m_omask_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_omask_V_offset_blk_n = hist_m_omask_V_offset_empty_n;
    end else begin
        hist_m_omask_V_offset_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_omask_V_offset_read = 1'b1;
    end else begin
        hist_m_omask_V_offset_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        syms_V47_address0 = tmp_118_cast_fu_1701_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        syms_V47_address0 = tmp_91_fu_1275_p1;
    end else begin
        syms_V47_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        syms_V47_ce0 = 1'b1;
    end else begin
        syms_V47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        syms_V48_address0 = tmp_118_cast_fu_1701_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        syms_V48_address0 = tmp_91_fu_1275_p1;
    end else begin
        syms_V48_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        syms_V48_ce0 = 1'b1;
    end else begin
        syms_V48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        syms_V49_address0 = tmp_118_cast_fu_1701_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        syms_V49_address0 = tmp_91_fu_1275_p1;
    end else begin
        syms_V49_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        syms_V49_ce0 = 1'b1;
    end else begin
        syms_V49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        syms_V_address0 = tmp_118_cast_fu_1701_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        syms_V_address0 = tmp_91_fu_1275_p1;
    end else begin
        syms_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        syms_V_ce0 = 1'b1;
    end else begin
        syms_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        table_i_address0 = tmp_409_i_fu_1827_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        table_i_address0 = tmp_386_i_fu_1489_p1;
    end else begin
        table_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        table_i_ce0 = 1'b1;
    end else begin
        table_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        table_i_ce1 = 1'b1;
    end else begin
        table_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_385_i_reg_3022_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        table_i_we0 = 1'b1;
    end else begin
        table_i_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter7 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b1)) & ~((ap_enable_reg_pp1_iter8 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter9 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter7 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b1)) | ((ap_enable_reg_pp1_iter8 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter9 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if ((~((tmp_222_reg_3498 == 1'd0) & (etxOut_ba_m_buf18_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((etxOut_ha_m_buf9_full_n == 1'b0) & (ap_predicate_op273_write_state9 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((etxOut_ha_m_buf9_full_n == 1'b0) & (ap_predicate_op273_write_state9 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((etxOut_ha_m_buf9_full_n == 1'b0) & (ap_predicate_op273_write_state9 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((etxOut_ba_m_buf18_full_n == 1'b0) & (ap_predicate_op519_write_state20 == 1'b1) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((etxOut_ha_m_buf9_full_n == 1'b0) & (ap_predicate_op417_write_state16 == 1'b1) & (ap_enable_reg_pp1_iter5 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((etxOut_ba_m_buf18_full_n == 1'b0) & (ap_predicate_op519_write_state20 == 1'b1) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((etxOut_ha_m_buf9_full_n == 1'b0) & (ap_predicate_op417_write_state16 == 1'b1) & (ap_enable_reg_pp1_iter5 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((etxOut_ba_m_buf18_full_n == 1'b0) & (ap_predicate_op519_write_state20 == 1'b1) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((etxOut_ha_m_buf9_full_n == 1'b0) & (ap_predicate_op417_write_state16 == 1'b1) & (ap_enable_reg_pp1_iter5 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((hist_m_omask_V_offset_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state11_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16_pp1_stage0_iter5 = ((etxOut_ha_m_buf9_full_n == 1'b0) & (ap_predicate_op417_write_state16 == 1'b1));
end

assign ap_block_state17_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp1_stage0_iter9 = ((etxOut_ba_m_buf18_full_n == 1'b0) & (ap_predicate_op519_write_state20 == 1'b1));
end

always @ (*) begin
    ap_block_state23 = ((tmp_222_reg_3498 == 1'd0) & (etxOut_ba_m_buf18_full_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage0_iter5 = ((etxOut_ha_m_buf9_full_n == 1'b0) & (ap_predicate_op273_write_state9 == 1'b1));
end

always @ (*) begin
    ap_condition_2159 = ((tmp_213_reg_3031_pp0_iter4_reg == 1'd1) & (tmp_385_i_reg_3022_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1));
end

always @ (*) begin
    ap_condition_2164 = ((tmp_213_reg_3031_pp0_iter1_reg == 1'd0) & (tmp_214_reg_3035 == 1'd1) & (tmp_385_i_reg_3022_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_894 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_908 = ((tmp_208_reg_2828 == 3'd0) & (tmp_218_reg_3039 == 1'd0) & (tmp_213_reg_3031_pp0_iter1_reg == 1'd0) & (tmp_214_reg_3035 == 1'd1) & (tmp_385_i_reg_3022_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_condition_913 = ((tmp_208_reg_2828 == 3'd0) & (tmp_213_reg_3031_pp0_iter1_reg == 1'd0) & (tmp_218_reg_3039 == 1'd1) & (tmp_214_reg_3035 == 1'd1) & (tmp_385_i_reg_3022_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_condition_919 = ((tmp_208_reg_2828 == 3'd1) & (tmp_218_reg_3039 == 1'd0) & (tmp_213_reg_3031_pp0_iter1_reg == 1'd0) & (tmp_214_reg_3035 == 1'd1) & (tmp_385_i_reg_3022_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_condition_922 = ((tmp_208_reg_2828 == 3'd1) & (tmp_213_reg_3031_pp0_iter1_reg == 1'd0) & (tmp_218_reg_3039 == 1'd1) & (tmp_214_reg_3035 == 1'd1) & (tmp_385_i_reg_3022_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_condition_928 = ((tmp_208_reg_2828 == 3'd2) & (tmp_218_reg_3039 == 1'd0) & (tmp_213_reg_3031_pp0_iter1_reg == 1'd0) & (tmp_214_reg_3035 == 1'd1) & (tmp_385_i_reg_3022_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_condition_931 = ((tmp_208_reg_2828 == 3'd2) & (tmp_213_reg_3031_pp0_iter1_reg == 1'd0) & (tmp_218_reg_3039 == 1'd1) & (tmp_214_reg_3035 == 1'd1) & (tmp_385_i_reg_3022_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_condition_937 = ((tmp_208_reg_2828 == 3'd3) & (tmp_218_reg_3039 == 1'd0) & (tmp_213_reg_3031_pp0_iter1_reg == 1'd0) & (tmp_214_reg_3035 == 1'd1) & (tmp_385_i_reg_3022_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_condition_940 = ((tmp_208_reg_2828 == 3'd3) & (tmp_213_reg_3031_pp0_iter1_reg == 1'd0) & (tmp_218_reg_3039 == 1'd1) & (tmp_214_reg_3035 == 1'd1) & (tmp_385_i_reg_3022_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_condition_946 = ((tmp_208_reg_2828 == 3'd4) & (tmp_218_reg_3039 == 1'd0) & (tmp_213_reg_3031_pp0_iter1_reg == 1'd0) & (tmp_214_reg_3035 == 1'd1) & (tmp_385_i_reg_3022_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_condition_949 = ((tmp_208_reg_2828 == 3'd4) & (tmp_213_reg_3031_pp0_iter1_reg == 1'd0) & (tmp_218_reg_3039 == 1'd1) & (tmp_214_reg_3035 == 1'd1) & (tmp_385_i_reg_3022_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_condition_955 = ((tmp_208_reg_2828 == 3'd5) & (tmp_218_reg_3039 == 1'd0) & (tmp_213_reg_3031_pp0_iter1_reg == 1'd0) & (tmp_214_reg_3035 == 1'd1) & (tmp_385_i_reg_3022_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_condition_958 = ((tmp_208_reg_2828 == 3'd5) & (tmp_213_reg_3031_pp0_iter1_reg == 1'd0) & (tmp_218_reg_3039 == 1'd1) & (tmp_214_reg_3035 == 1'd1) & (tmp_385_i_reg_3022_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_condition_964 = ((tmp_208_reg_2828 == 3'd6) & (tmp_218_reg_3039 == 1'd0) & (tmp_213_reg_3031_pp0_iter1_reg == 1'd0) & (tmp_214_reg_3035 == 1'd1) & (tmp_385_i_reg_3022_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_condition_967 = ((tmp_208_reg_2828 == 3'd6) & (tmp_213_reg_3031_pp0_iter1_reg == 1'd0) & (tmp_218_reg_3039 == 1'd1) & (tmp_214_reg_3035 == 1'd1) & (tmp_385_i_reg_3022_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_condition_973 = ((tmp_208_reg_2828 == 3'd7) & (tmp_218_reg_3039 == 1'd0) & (tmp_213_reg_3031_pp0_iter1_reg == 1'd0) & (tmp_214_reg_3035 == 1'd1) & (tmp_385_i_reg_3022_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_condition_976 = ((tmp_208_reg_2828 == 3'd7) & (tmp_213_reg_3031_pp0_iter1_reg == 1'd0) & (tmp_218_reg_3039 == 1'd1) & (tmp_214_reg_3035 == 1'd1) & (tmp_385_i_reg_3022_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_condition_983 = ((tmp_214_fu_1423_p3 == 1'd0) & (tmp_213_reg_3031 == 1'd0) & (tmp_385_i_reg_3022 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_p_030_0_i1_i_reg_996 = 'bx;

always @ (*) begin
    ap_predicate_op273_write_state9 = ((tmp_212_reg_3149_pp0_iter4_reg == 1'd0) & (tmp_385_i_reg_3022_pp0_iter4_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op417_write_state16 = ((tmp_229_reg_3326_pp1_iter4_reg == 1'd0) & (exitcond_reg_3249_pp1_iter4_reg == 1'd0) & (tmp_415_i_reg_3291_pp1_iter4_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op519_write_state20 = ((tmp_238_reg_3457_pp1_iter8_reg == 1'd0) & (tmp_439_i_reg_3392_pp1_iter8_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_tran9to10_state4 = ((tmp_385_i_fu_1378_p2 == 1'd0) | ((tmp_213_fu_1390_p3 == 1'd1) & (tmp_385_i_fu_1378_p2 == 1'd1)));
end

assign bit_V_fu_2604_p3 = etx_cv_m_lo_V_reg_1126[32'd10];

assign bits_V_1_fu_1660_p1 = p_030_0_i1_i_reg_996_pp0_iter3_reg;

assign bits_V_assign_1_fu_2470_p3 = ((sel_tmp8_fu_2465_p2[0:0] === 1'b1) ? p_Result_s_fu_2421_p4 : r_V_22_reg_3402);

assign bits_V_fu_1372_p2 = (tmp_384_i_fu_1362_p4 | 32'd32505856);

assign buf_1_fu_2650_p2 = (tmp_421_i_fu_2644_p2 | buf_fu_2632_p2);

assign buf_1_i_i_fu_2485_p3 = ((sel_tmp8_fu_2465_p2[0:0] === 1'b1) ? buf_3_fu_2415_p2 : sel_tmp3_fu_2477_p3);

assign buf_1_i_i_i_fu_2682_p3 = ((sel_tmp2_fu_2676_p2[0:0] === 1'b1) ? buf_fu_2632_p2 : sel_tmp_fu_2662_p3);

assign buf_3_fu_2415_p2 = leading_bit_1_fu_2409_p1 << tmp_449_i_fu_2412_p1;

assign buf_4_fu_2453_p2 = (tmp_455_i_fu_2447_p2 | buf_3_fu_2415_p2);

assign buf_6_fu_2545_p3 = {{tmp_220_i_reg_3436}, {tmp_219_i_reg_3431}};

assign buf_7_fu_2743_p3 = {{tmp_13_reg_3477}, {tmp_12_reg_3472}};

assign buf_fu_2632_p2 = leading_bit_fu_2624_p1 << tmp_416_i_fu_2628_p1;

assign cur_bidx_2_cast_i_fu_1870_p1 = cur_bidx_3_fu_1858_p1;

assign cur_bidx_2_fu_2266_p1 = etx_ba_m_idx_2_fu_348[5:0];

assign cur_bidx_3_cast_i_fu_2710_p1 = cur_bidx_2_reg_3386;

assign cur_bidx_3_fu_1858_p1 = BitStream64_m_idx_re_1_fu_340[5:0];

assign cur_bidx_4_cast_i_fu_2513_p1 = cur_bidx_2_reg_3386;

assign cur_bidx_cast_i_fu_1504_p1 = cur_bidx_fu_1500_p1;

assign cur_bidx_fu_1500_p1 = ap_phi_mux_etx_ha_m_idx_i_phi_fu_1058_p4[5:0];

assign cv_m_hi_V_1_cast_fu_2064_p4 = {{r_V_10_reg_3330[20:10]}};

assign cv_m_hi_V_2_fu_1963_p4 = {{grp_fu_2791_p3[21:10]}};

assign cv_m_hi_V_fu_2257_p2 = (p_Result_59_fu_2247_p4 | hi_mask_V_1_fu_2141_p3);

assign cv_m_lo_V_1_cast_fu_2073_p4 = {{r_V_12_reg_3336[20:10]}};

assign cv_m_lo_V_1_fu_1979_p4 = {{grp_fu_2800_p3[21:10]}};

assign diff_fu_1787_p2 = ($signed(14'd16352) + $signed(tmp_407_cast_i_fu_1783_p1));

assign etxOut_ba_m_ccur12 = ap_phi_mux_BitStream64_m_cur_re_2_phi_fu_1152_p4;

assign etxOut_ba_m_cidx15 = (etx_ba_m_idx_2_load_reg_3381 + nbits_assign_2_reg_3466);

assign etxOut_ha_m_ccur3 = BitStream64_m_cur_re_1_fu_336;

assign etxOut_ha_m_cidx6 = BitStream64_m_idx_re_1_fu_340;

assign etx_ba_m_cur_2_fu_2582_p2 = (tmp_461_i_fu_2575_p3 | tmp_458_i_fu_2560_p2);

assign etx_ba_m_cur_fu_2780_p2 = (tmp_434_i_fu_2773_p3 | tmp_430_i_fu_2758_p2);

assign etx_ba_m_idx_fu_2369_p2 = (etx_ba_m_idx_2_fu_348 + nebits_fu_2339_p2);

assign etx_ha_m_cur_1_fu_1590_p1 = p_0100_0_i_i_reg_1078;

assign etx_ha_m_cur_2_fu_2040_p3 = {{tmp_18_fu_2030_p4}, {tmp_17_fu_2024_p2}};

assign etx_ha_m_cur_3_fu_1988_p1 = ovr_V_1_reg_3274_pp1_iter3_reg;

assign etx_ha_m_cur_4_load_1_load_fu_1664_p1 = etx_ha_m_cur_4_fu_320;

assign etx_ha_m_cur_fu_1642_p3 = {{tmp_9_fu_1632_p4}, {tmp_8_fu_1626_p2}};

assign etx_ha_m_idx_1_fu_1903_p2 = (BitStream64_m_idx_re_1_fu_340 + nbits_assign_3_fu_1862_p1);

assign etx_ha_m_idx_fu_1538_p2 = (ap_phi_mux_nbits_assign_phi_fu_1070_p4 + ap_phi_mux_etx_ha_m_idx_i_phi_fu_1058_p4);

assign exitcond_fu_1713_p2 = ((tmp_217_fu_1709_p1 == 32'd1024) ? 1'b1 : 1'b0);

assign grp_fu_2791_p0 = lhs_V_fu_1952_p1;

assign grp_fu_2791_p1 = grp_fu_2791_p10;

assign grp_fu_2791_p10 = table_i_load_1_reg_3300;

assign grp_fu_2791_p2 = grp_fu_2791_p20;

assign grp_fu_2791_p20 = xlo_V_fu_1946_p2;

assign grp_fu_2800_p0 = lhs_V_fu_1952_p1;

assign grp_fu_2800_p1 = grp_fu_2800_p10;

assign grp_fu_2800_p10 = table_i_load_reg_3295;

assign grp_fu_2800_p2 = grp_fu_2800_p20;

assign grp_fu_2800_p20 = xlo_V_1_fu_1934_p3;

assign hi_mask_V_1_fu_2141_p3 = {{tmp_231_fu_2133_p3}, {11'd0}};

assign hist_m_bins_V1_address0 = tmp_117_cast_fu_1471_p1;

assign hist_m_bins_V402_address0 = tmp_117_cast_fu_1471_p1;

assign hist_m_bins_V40_address0 = tmp_116_cast_fu_1454_p1;

assign hist_m_bins_V413_address0 = tmp_117_cast_fu_1471_p1;

assign hist_m_bins_V41_address0 = tmp_116_cast_fu_1454_p1;

assign hist_m_bins_V424_address0 = tmp_117_cast_fu_1471_p1;

assign hist_m_bins_V42_address0 = tmp_116_cast_fu_1454_p1;

assign hist_m_bins_V435_address0 = tmp_117_cast_fu_1471_p1;

assign hist_m_bins_V43_address0 = tmp_116_cast_fu_1454_p1;

assign hist_m_bins_V446_address0 = tmp_117_cast_fu_1471_p1;

assign hist_m_bins_V44_address0 = tmp_116_cast_fu_1454_p1;

assign hist_m_bins_V457_address0 = tmp_117_cast_fu_1471_p1;

assign hist_m_bins_V45_address0 = tmp_116_cast_fu_1454_p1;

assign hist_m_bins_V468_address0 = tmp_117_cast_fu_1471_p1;

assign hist_m_bins_V46_address0 = tmp_116_cast_fu_1454_p1;

assign hist_m_bins_V_address0 = tmp_116_cast_fu_1454_p1;

assign hist_m_maxcnt_V26_address0 = newIndex59_cast_i_fu_1235_p1;

assign hist_m_maxcnt_V27_address0 = newIndex59_cast_i_fu_1235_p1;

assign hist_m_maxcnt_V28_address0 = newIndex59_cast_i_fu_1235_p1;

assign hist_m_maxcnt_V29_address0 = newIndex59_cast_i_fu_1235_p1;

assign hist_m_maxcnt_V30_address0 = newIndex59_cast_i_fu_1235_p1;

assign hist_m_maxcnt_V31_address0 = newIndex59_cast_i_fu_1235_p1;

assign hist_m_maxcnt_V32_address0 = newIndex59_cast_i_fu_1235_p1;

assign hist_m_maxcnt_V_address0 = newIndex59_cast_i_fu_1235_p1;

assign hist_m_nobits_V33_address0 = hist_m_nobits_V33_ad_reg_2886;

assign hist_m_nobits_V34_address0 = hist_m_nobits_V34_ad_reg_2891;

assign hist_m_nobits_V35_address0 = hist_m_nobits_V35_ad_reg_2896;

assign hist_m_nobits_V36_address0 = hist_m_nobits_V36_ad_reg_2901;

assign hist_m_nobits_V37_address0 = hist_m_nobits_V37_ad_reg_2906;

assign hist_m_nobits_V38_address0 = hist_m_nobits_V38_ad_reg_2911;

assign hist_m_nobits_V39_address0 = hist_m_nobits_V39_ad_reg_2916;

assign hist_m_nobits_V_address0 = hist_m_nobits_V_addr_reg_2881;

assign hist_m_omask_V19_address0 = hist_m_omask_V19_add_reg_2926;

assign hist_m_omask_V20_address0 = hist_m_omask_V20_add_reg_2931;

assign hist_m_omask_V21_address0 = hist_m_omask_V21_add_reg_2936;

assign hist_m_omask_V22_address0 = hist_m_omask_V22_add_reg_2941;

assign hist_m_omask_V23_address0 = hist_m_omask_V23_add_reg_2946;

assign hist_m_omask_V24_address0 = hist_m_omask_V24_add_reg_2951;

assign hist_m_omask_V25_address0 = hist_m_omask_V25_add_reg_2956;

assign hist_m_omask_V_address0 = hist_m_omask_V_addr_reg_2921;

assign i_assign_cast24_i_fu_1398_p1 = i_assign_reg_972;

assign ibin_fu_1384_p2 = (ap_phi_mux_i_assign_phi_fu_976_p4 + 6'd1);

assign idx_V_1_fu_1819_p3 = ((tmp_226_fu_1793_p3[0:0] === 1'b1) ? idx_V_fu_1807_p1 : 5'd0);

assign idx_V_fu_1807_p1 = storemerge_i_fu_1776_p3[4:0];

assign leading_bit_1_fu_2409_p1 = tmp_235_reg_3420;

assign leading_bit_fu_2624_p1 = bit_V_fu_2604_p3;

assign left_2_fu_2713_p2 = ($signed(7'd64) - $signed(cur_bidx_3_cast_i_fu_2710_p1));

assign left_3_cast_i_fu_2719_p1 = left_2_fu_2713_p2;

assign left_3_fu_1874_p2 = ($signed(7'd64) - $signed(cur_bidx_2_cast_i_fu_1870_p1));

assign left_4_cast_i_fu_2522_p1 = left_4_fu_2516_p2;

assign left_4_fu_2516_p2 = ($signed(7'd64) - $signed(cur_bidx_4_cast_i_fu_2513_p1));

assign left_V_fu_1483_p2 = (p_070_0_i_i_reg_984 ^ 10'd1023);

assign left_cast_i_fu_1514_p1 = left_fu_1508_p2;

assign left_fu_1508_p2 = ($signed(7'd64) - $signed(cur_bidx_cast_i_fu_1504_p1));

assign lhs_V_5_cast_i_fu_2270_p1 = cv_m_lo_V_1_reg_3341_pp1_iter5_reg;

assign lhs_V_cast_i_fu_1832_p1 = idx_V_1_fu_1819_p3;

assign lhs_V_fu_1952_p1 = range_V_2_fu_1928_p2;

assign mpending_V_fu_2279_p2 = (nreduce_V_reg_3366 - nsame_V_reg_3358);

assign nbits_3_fu_1352_p2 = (32'd10 - tmp_i_fu_1344_p3);

assign nbits_assign_2_fu_2612_p2 = (32'd2 + etx_tofollow_fu_332);

assign nbits_assign_3_cast_s_fu_1866_p1 = grp_fu_1172_p10;

assign nbits_assign_3_fu_1862_p1 = grp_fu_1172_p10;

assign nbits_assign_4_cast2_fu_2276_p1 = nsame_V_reg_3358;

assign nbits_assign_4_cast_s_fu_2123_p1 = nsame_V_fu_2107_p1;

assign nbits_assign_4_fu_2273_p1 = nsame_V_reg_3358;

assign nbits_fu_1569_p2 = (32'd10 - tmp_397_i_fu_1561_p3);

assign nebits_fu_2339_p2 = (etx_tofollow_fu_332 + nbits_assign_4_fu_2273_p1);

assign newIndex59_cast_i_ca_fu_1317_p1 = tmp_92_reg_2835;

assign newIndex59_cast_i_fu_1235_p1 = tmp_92_fu_1225_p4;

assign newIndex60_i_cast_fu_1445_p1 = tmp_219_fu_1435_p4;

assign npending_1_fu_2375_p1 = mpending_V_fu_2279_p2;

assign npending_fu_2393_p2 = (etx_tofollow_fu_332 + tmp_441_i_fu_2389_p1);

assign nreduce_V_fu_2206_p1 = val_assign_1_fu_2198_p3[3:0];

assign nsame_V_fu_2107_p1 = val_assign_s_fu_2099_p3[3:0];

assign overrun_2_fu_2723_p2 = (nbits_assign_2_fu_2612_p2 - left_3_cast_i_fu_2719_p1);

assign overrun_3_fu_1880_p2 = (nbits_assign_3_cast_s_fu_1866_p1 - left_3_fu_1874_p2);

assign overrun_4_fu_2526_p2 = (nebits_reg_3408 - left_4_cast_i_fu_2522_p1);

assign overrun_fu_1518_p2 = (ap_phi_mux_nbits_assign_phi_fu_1070_p4 - left_cast_i_fu_1514_p1);

assign ovr_V_1_fu_1811_p3 = ((tmp_226_fu_1793_p3[0:0] === 1'b1) ? ovr_V_2_fu_328 : ovr_V_fu_1801_p2);

assign ovr_V_fu_1801_p2 = ($signed(13'd8160) + $signed(storemerge_i_fu_1776_p3));

assign p_0_1_0_i_cast_i_fu_2351_p1 = $signed(p_0_1_0_i_i_fu_2345_p2);

assign p_0_1_0_i_i_fu_2345_p2 = ($signed(5'd31) + $signed(nbits_assign_4_cast2_fu_2276_p1));

assign p_1_i_fu_2155_p2 = (tmp_217_i_fu_2149_p2 | cv_m_hi_V_1_cast_fu_2064_p4);

integer ap_tvar_int_0;

always @ (r_V_10_reg_3330) begin
    for (ap_tvar_int_0 = 12 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 21 - 10) begin
            p_Result_58_fu_2224_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_58_fu_2224_p4[ap_tvar_int_0] = r_V_10_reg_3330[21 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (tmp_468_i_fu_2241_p2) begin
    for (ap_tvar_int_1 = 12 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 11 - 0) begin
            p_Result_59_fu_2247_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_59_fu_2247_p4[ap_tvar_int_1] = tmp_468_i_fu_2241_p2[11 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (maxcnt_V_fu_1283_p10) begin
    for (ap_tvar_int_2 = 10 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 9 - 0) begin
            p_Result_60_fu_1304_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_60_fu_1304_p4[ap_tvar_int_2] = maxcnt_V_fu_1283_p10[9 - ap_tvar_int_2];
        end
    end
end

assign p_Result_61_fu_1337_p3 = {{22'd4194303}, {p_Result_60_reg_2986}};

integer ap_tvar_int_3;

always @ (left_V_reg_3123) begin
    for (ap_tvar_int_3 = 10 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 9 - 0) begin
            p_Result_62_fu_1544_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            p_Result_62_fu_1544_p4[ap_tvar_int_3] = left_V_reg_3123[9 - ap_tvar_int_3];
        end
    end
end

assign p_Result_63_fu_1553_p3 = {{22'd4194303}, {p_Result_62_fu_1544_p4}};

integer ap_tvar_int_4;

always @ (r_V_19_reg_3352) begin
    for (ap_tvar_int_4 = 12 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > 11 - 0) begin
            p_Result_64_fu_2082_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            p_Result_64_fu_2082_p4[ap_tvar_int_4] = r_V_19_reg_3352[11 - ap_tvar_int_4];
        end
    end
end

assign p_Result_65_fu_2091_p3 = {{20'd1048575}, {p_Result_64_fu_2082_p4}};

integer ap_tvar_int_5;

always @ (pending_V_fu_2175_p2) begin
    for (ap_tvar_int_5 = 12 - 1; ap_tvar_int_5 >= 0; ap_tvar_int_5 = ap_tvar_int_5 - 1) begin
        if (ap_tvar_int_5 > 11 - 0) begin
            p_Result_66_fu_2180_p4[ap_tvar_int_5] = 1'b0;
        end else begin
            p_Result_66_fu_2180_p4[ap_tvar_int_5] = pending_V_fu_2175_p2[11 - ap_tvar_int_5];
        end
    end
end

assign p_Result_67_fu_2190_p3 = {{20'd1048575}, {p_Result_66_fu_2180_p4}};

always @ (*) begin
    p_Result_s_fu_2421_p4 = r_V_22_reg_3402;
    p_Result_s_fu_2421_p4[p_0_1_0_i_cast_i_reg_3414] = |(32'd0);
end

assign p_mbits_0_i_i_fu_1580_p3 = ((tmp_406_i_fu_1575_p2[0:0] === 1'b1) ? nbits_fu_1569_p2 : nbits_3_reg_3011);

assign p_shl_cast_fu_1327_p1 = tmp_93_fu_1320_p3;

assign pending_V_fu_2175_p2 = (r_V_19_reg_3352 & phitmp_i_fu_2169_p2);

assign phitmp2_i_fu_1719_p2 = (syms_pn_rec_i_reg_1106 + 64'd1);

assign phitmp_i_fu_2169_p2 = (tmp_438_i_fu_2161_p3 | 12'd1);

assign r_V_14_fu_2117_p2 = (rhs_V_5_fu_2111_p2 & cv_m_lo_V_1_cast_fu_2073_p4);

assign r_V_19_fu_2058_p2 = (cv_m_lo_V_1_fu_1979_p4 ^ cv_m_hi_V_2_fu_1963_p4);

assign r_V_20_fu_2127_p2 = r_V_14_fu_2117_p2 << nbits_assign_4_cast_s_fu_2123_p1;

assign r_V_21_fu_2288_p2 = (5'd12 - nbits_assign_4_cast2_fu_2276_p1);

assign r_V_22_fu_2331_p3 = ((tmp_233_fu_2294_p3[0:0] === 1'b1) ? tmp_234_fu_2327_p1 : tmp_445_i_fu_2322_p2);

assign r_V_23_fu_2218_p2 = cv_m_lo_V_1_cast_fu_2073_p4 << tmp_465_cast_i_cast_fu_2214_p1;

assign r_V_3_fu_2233_p3 = {{1'd1}, {p_Result_58_fu_2224_p4}};

assign r_V_8_fu_1836_p2 = (6'd1 + lhs_V_cast_i_fu_1832_p1);

assign r_V_fu_1731_p3 = {{r_V_i_fu_1725_p2}, {1'd0}};

assign r_V_i_fu_1725_p2 = (ap_phi_mux_p_i_phi_fu_1120_p4 - grp_fu_1159_p6);

assign range_V_1_fu_1922_p2 = (range_V_fu_1914_p1 - tmp_411_i_fu_1918_p1);

assign range_V_2_fu_1928_p2 = (13'd1 + range_V_1_fu_1922_p2);

assign range_V_fu_1914_p1 = ap_phi_mux_etx_cv_m_hi_V_phi_fu_1142_p4;

assign rhs_V_5_fu_2111_p2 = (cv_m_hi_V_1_cast_fu_2064_p4 ^ 11'd2047);

assign sel_tmp1_fu_2670_p2 = (tmp_401_i_fu_2618_p2 ^ 1'd1);

assign sel_tmp2_fu_2676_p2 = (sel_tmp1_fu_2670_p2 & bit_V_fu_2604_p3);

assign sel_tmp3_fu_2477_p3 = ((tmp_446_i_fu_2404_p2[0:0] === 1'b1) ? 64'd0 : buf_4_fu_2453_p2);

assign sel_tmp7_fu_2459_p2 = (tmp_446_i_fu_2404_p2 ^ 1'd1);

assign sel_tmp8_fu_2465_p2 = (tmp_235_reg_3420 & sel_tmp7_fu_2459_p2);

assign sel_tmp_fu_2662_p3 = ((tmp_401_i_fu_2618_p2[0:0] === 1'b1) ? 64'd0 : buf_1_fu_2650_p2);

assign shift_2_fu_2749_p3 = ((tmp_428_i_reg_3492[0:0] === 1'b1) ? left_3_cast_i_reg_3482 : nbits_assign_2_reg_3466);

assign shift_3_fu_1991_p3 = ((tmp_417_i_reg_3320[0:0] === 1'b1) ? left_3_reg_3310 : nbits_assign_3_cast_s_reg_3305);

assign shift_4_fu_2551_p3 = ((tmp_456_i_reg_3451[0:0] === 1'b1) ? left_4_cast_i_reg_3441 : nebits_reg_3408_pp1_iter7_reg);

assign shift_fu_1594_p3 = ((tmp_387_i_reg_3143[0:0] === 1'b1) ? left_cast_i_reg_3133 : nbits_assign_reg_1066);

assign storemerge_i_fu_1776_p3 = ((tmp_225_fu_1759_p3[0:0] === 1'b1) ? tmp_404_i_reg_3269 : tmp_405_cast_i_fu_1772_p1);

assign table_i_address1 = tmp_410_i_fu_1842_p1;

assign tmp_110_cast_fu_1314_p1 = tmp_90_reg_2961;

assign tmp_116_cast_fu_1454_p1 = tmp_96_fu_1449_p2;

assign tmp_117_cast_fu_1471_p1 = tmp_97_fu_1466_p2;

assign tmp_118_cast_fu_1701_p1 = tmp_95_fu_1696_p2;

assign tmp_12_fu_2694_p2 = (tmp_427_i_fu_2656_p2 | tmp_221_fu_2690_p1);

assign tmp_17_fu_2024_p2 = (tmp_424_i_fu_2014_p3 | tmp_228_fu_2020_p1);

assign tmp_18_fu_2030_p4 = {{tmp_419_i_fu_2000_p2[63:13]}};

assign tmp_207_fu_1207_p1 = hist_m_omask_V_offset_dout[1:0];

assign tmp_208_fu_1221_p1 = hist_m_omask_V_offset_dout[2:0];

assign tmp_209_fu_1358_p1 = nbits_3_fu_1352_p2[15:0];

assign tmp_211_fu_1622_p1 = tmp_389_i_fu_1604_p2[31:0];

assign tmp_213_fu_1390_p3 = ap_phi_mux_i_assign_phi_fu_976_p4[32'd5];

assign tmp_214_fu_1423_p3 = p_Val2_48_fu_1402_p10[i_assign_cast24_i_fu_1398_p1];

assign tmp_215_fu_1692_p1 = syms_pn_rec_i_reg_1106[14:0];

assign tmp_217_fu_1709_p1 = syms_pn_rec_i_reg_1106[31:0];

assign tmp_217_i_fu_2149_p2 = (cv_m_lo_V_1_cast_fu_2073_p4 ^ 11'd2047);

assign tmp_218_fu_1431_p1 = i_assign_reg_972[0:0];

assign tmp_219_fu_1435_p4 = {{i_assign_reg_972[5:1]}};

assign tmp_219_i_fu_2497_p2 = (tmp_237_fu_2493_p1 | bits_V_assign_1_fu_2470_p3);

assign tmp_221_fu_2690_p1 = buf_1_i_i_i_fu_2682_p3[0:0];

assign tmp_224_fu_1754_p2 = r_V_i_reg_3263 << 12'd1;

assign tmp_225_fu_1759_p3 = r_V_i_reg_3263[32'd11];

assign tmp_226_fu_1793_p3 = diff_fu_1787_p2[32'd13];

assign tmp_228_fu_2020_p1 = tmp_419_i_fu_2000_p2[12:0];

assign tmp_231_fu_2133_p3 = r_V_20_fu_2127_p2[32'd10];

assign tmp_233_fu_2294_p3 = r_V_21_fu_2288_p2[32'd4];

assign tmp_234_fu_2327_p1 = tmp_444_i_fu_2316_p2[11:0];

assign tmp_235_fu_2355_p3 = r_V_22_fu_2331_p3[p_0_1_0_i_cast_i_fu_2351_p1];

assign tmp_237_fu_2493_p1 = buf_1_i_i_fu_2485_p3[11:0];

assign tmp_384_i_fu_1362_p4 = {{{tmp_209_fu_1358_p1}, {grp_fu_1159_p6}}, {grp_fu_1172_p10}};

assign tmp_385_i_fu_1378_p2 = ((ap_phi_mux_i_assign_phi_fu_976_p4 < 6'd33) ? 1'b1 : 1'b0);

assign tmp_386_i_fu_1489_p1 = i_assign_reg_972_pp0_iter1_reg;

assign tmp_387_i_fu_1524_p2 = (($signed(overrun_fu_1518_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_388_i_fu_1600_p1 = shift_fu_1594_p3;

assign tmp_389_i_fu_1604_p2 = etx_ha_m_cur_4_fu_320 << tmp_388_i_fu_1600_p1;

assign tmp_391_i_fu_1610_p2 = p_0100_0_i_i_reg_1078 >> overrun_reg_3138;

assign tmp_392_i_fu_1615_p3 = ((tmp_387_i_reg_3143[0:0] === 1'b1) ? tmp_391_i_fu_1610_p2 : p_0100_0_i_i_reg_1078);


always @ (p_Result_63_fu_1553_p3) begin
    if (p_Result_63_fu_1553_p3[0] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd0;
    end else if (p_Result_63_fu_1553_p3[1] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd1;
    end else if (p_Result_63_fu_1553_p3[2] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd2;
    end else if (p_Result_63_fu_1553_p3[3] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd3;
    end else if (p_Result_63_fu_1553_p3[4] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd4;
    end else if (p_Result_63_fu_1553_p3[5] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd5;
    end else if (p_Result_63_fu_1553_p3[6] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd6;
    end else if (p_Result_63_fu_1553_p3[7] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd7;
    end else if (p_Result_63_fu_1553_p3[8] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd8;
    end else if (p_Result_63_fu_1553_p3[9] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd9;
    end else if (p_Result_63_fu_1553_p3[10] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd10;
    end else if (p_Result_63_fu_1553_p3[11] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd11;
    end else if (p_Result_63_fu_1553_p3[12] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd12;
    end else if (p_Result_63_fu_1553_p3[13] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd13;
    end else if (p_Result_63_fu_1553_p3[14] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd14;
    end else if (p_Result_63_fu_1553_p3[15] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd15;
    end else if (p_Result_63_fu_1553_p3[16] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd16;
    end else if (p_Result_63_fu_1553_p3[17] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd17;
    end else if (p_Result_63_fu_1553_p3[18] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd18;
    end else if (p_Result_63_fu_1553_p3[19] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd19;
    end else if (p_Result_63_fu_1553_p3[20] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd20;
    end else if (p_Result_63_fu_1553_p3[21] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd21;
    end else if (p_Result_63_fu_1553_p3[22] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd22;
    end else if (p_Result_63_fu_1553_p3[23] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd23;
    end else if (p_Result_63_fu_1553_p3[24] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd24;
    end else if (p_Result_63_fu_1553_p3[25] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd25;
    end else if (p_Result_63_fu_1553_p3[26] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd26;
    end else if (p_Result_63_fu_1553_p3[27] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd27;
    end else if (p_Result_63_fu_1553_p3[28] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd28;
    end else if (p_Result_63_fu_1553_p3[29] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd29;
    end else if (p_Result_63_fu_1553_p3[30] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd30;
    end else if (p_Result_63_fu_1553_p3[31] == 1'b1) begin
        tmp_397_i_fu_1561_p3 = 32'd31;
    end else begin
        tmp_397_i_fu_1561_p3 = 32'd32;
    end
end

assign tmp_401_i_fu_2618_p2 = ((tofollow_fu_2598_p2 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_403_i_fu_1739_p2 = (r_V_fu_1731_p3 | 13'd1);

assign tmp_404_i_fu_1745_p2 = (13'd1 - tmp_403_i_fu_1739_p2);

assign tmp_405_cast_i_fu_1772_p1 = tmp_405_i_fu_1766_p2;

assign tmp_405_i_fu_1766_p2 = (tmp_224_fu_1754_p2 | 12'd1);

assign tmp_406_i_fu_1575_p2 = (($signed(nbits_fu_1569_p2) < $signed(nbits_3_reg_3011)) ? 1'b1 : 1'b0);

assign tmp_407_cast_i_fu_1783_p1 = storemerge_i_fu_1776_p3;

assign tmp_409_i_fu_1827_p1 = idx_V_1_fu_1819_p3;

assign tmp_410_i_fu_1842_p1 = r_V_8_fu_1836_p2;

assign tmp_411_i_fu_1918_p1 = ap_phi_mux_etx_cv_m_lo_V_phi_fu_1130_p4;

assign tmp_415_i_fu_1847_p2 = ((idx_V_1_fu_1819_p3 == 5'd0) ? 1'b1 : 1'b0);

assign tmp_416_i_fu_2628_p1 = tofollow_fu_2598_p2;

assign tmp_417_i_fu_1886_p2 = (($signed(overrun_3_fu_1880_p2) > $signed(7'd0)) ? 1'b1 : 1'b0);

assign tmp_418_i_fu_1996_p1 = shift_3_fu_1991_p3;

assign tmp_419_i_fu_2000_p2 = BitStream64_m_cur_re_1_fu_336 << tmp_418_i_fu_1996_p1;

assign tmp_420_i_fu_2638_p2 = 64'd1 << tmp_416_i_fu_2628_p1;

assign tmp_421_i_fu_2644_p2 = ($signed(64'd18446744073709551615) + $signed(tmp_420_i_fu_2638_p2));

assign tmp_422_cast_i_fu_2006_p1 = overrun_3_reg_3315;

assign tmp_423_i_fu_2009_p2 = ovr_V_1_reg_3274_pp1_iter3_reg >> tmp_422_cast_i_fu_2006_p1;

assign tmp_424_i_fu_2014_p3 = ((tmp_417_i_reg_3320[0:0] === 1'b1) ? tmp_423_i_fu_2009_p2 : ovr_V_1_reg_3274_pp1_iter3_reg);

assign tmp_427_i_fu_2656_p2 = (tmp_401_i_fu_2618_p2 & bit_V_fu_2604_p3);

assign tmp_428_i_fu_2729_p2 = (($signed(overrun_2_fu_2723_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_429_i_fu_2754_p1 = shift_2_fu_2749_p3;

assign tmp_430_i_fu_2758_p2 = etx_ba_m_cur_1_fu_344 << tmp_429_i_fu_2754_p1;

assign tmp_432_i_fu_2764_p1 = overrun_2_reg_3487;

assign tmp_433_i_fu_2767_p2 = buf_7_fu_2743_p3 >> tmp_432_i_fu_2764_p1;

assign tmp_434_i_fu_2773_p3 = ((tmp_428_i_reg_3492[0:0] === 1'b1) ? tmp_433_i_fu_2767_p2 : buf_7_fu_2743_p3);

assign tmp_438_i_fu_2161_p3 = {{p_1_i_fu_2155_p2}, {1'd0}};

assign tmp_439_i_fu_2283_p2 = ((nsame_V_reg_3358 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_441_i_fu_2389_p1 = mpending_V_fu_2279_p2;

assign tmp_442_cast21_i_fu_2302_p1 = r_V_21_fu_2288_p2;

assign tmp_443_cast_i_fu_2312_p1 = tmp_443_i_fu_2306_p2;

assign tmp_443_i_fu_2306_p2 = ($signed(5'd0) - $signed(r_V_21_fu_2288_p2));

assign tmp_444_i_fu_2316_p2 = lhs_V_5_cast_i_fu_2270_p1 << tmp_443_cast_i_fu_2312_p1;

assign tmp_445_i_fu_2322_p2 = cv_m_lo_V_1_reg_3341_pp1_iter5_reg >> tmp_442_cast21_i_fu_2302_p1;

assign tmp_446_i_fu_2404_p2 = ((etx_tofollow_load_1_reg_3396 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_448_i_fu_2363_p2 = ($signed(etx_tofollow_fu_332) + $signed(p_0_1_0_i_cast_i_fu_2351_p1));

assign tmp_449_i_fu_2412_p1 = tmp_448_i_reg_3426;

assign tmp_451_i_fu_2429_p1 = etx_tofollow_load_1_reg_3396;

assign tmp_452_i_fu_2432_p2 = 64'd1 << tmp_451_i_fu_2429_p1;

assign tmp_453_i_fu_2438_p2 = ($signed(64'd18446744073709551615) + $signed(tmp_452_i_fu_2432_p2));

assign tmp_454_i_fu_2444_p1 = $unsigned(p_0_1_0_i_cast_i_reg_3414);

assign tmp_455_i_fu_2447_p2 = tmp_453_i_fu_2438_p2 << tmp_454_i_fu_2444_p1;

assign tmp_456_i_fu_2531_p2 = (($signed(overrun_4_fu_2526_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_457_i_fu_2556_p1 = shift_4_fu_2551_p3;

assign tmp_458_i_fu_2560_p2 = etx_ba_m_cur_1_fu_344 << tmp_457_i_fu_2556_p1;

assign tmp_459_i_fu_2566_p1 = overrun_4_reg_3446;

assign tmp_460_i_fu_2569_p2 = buf_6_fu_2545_p3 >> tmp_459_i_fu_2566_p1;

assign tmp_461_i_fu_2575_p3 = ((tmp_456_i_reg_3451[0:0] === 1'b1) ? tmp_460_i_fu_2569_p2 : buf_6_fu_2545_p3);

assign tmp_465_cast19_i_fu_2210_p1 = nreduce_V_fu_2206_p1;

assign tmp_465_cast_i_cast_fu_2214_p1 = nreduce_V_fu_2206_p1;

assign tmp_468_i_fu_2241_p2 = $signed(r_V_3_fu_2233_p3) >>> tmp_465_cast19_i_fu_2210_p1;

assign tmp_8_fu_1626_p2 = (tmp_392_i_fu_1615_p3 | tmp_211_fu_1622_p1);

assign tmp_90_fu_1268_p3 = {{tmp_s_reg_2823}, {10'd0}};

assign tmp_91_fu_1275_p1 = tmp_90_fu_1268_p3;

assign tmp_92_fu_1225_p4 = {{hist_m_omask_V_offset_dout[4:3]}};

assign tmp_93_fu_1320_p3 = {{tmp_92_reg_2835}, {4'd0}};

assign tmp_94_fu_1331_p2 = (p_shl_cast_fu_1327_p1 + newIndex59_cast_i_ca_fu_1317_p1);

assign tmp_95_fu_1696_p2 = (tmp_110_cast_reg_2991 + tmp_215_fu_1692_p1);

assign tmp_96_fu_1449_p2 = (tmp_94_reg_3001 + newIndex60_i_cast_fu_1445_p1);

assign tmp_97_fu_1466_p2 = (p_shl_cast_reg_2996 + newIndex60_i_cast_fu_1445_p1);

assign tmp_9_fu_1632_p4 = {{tmp_389_i_fu_1604_p2[63:32]}};


always @ (p_Result_61_fu_1337_p3) begin
    if (p_Result_61_fu_1337_p3[0] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd0;
    end else if (p_Result_61_fu_1337_p3[1] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd1;
    end else if (p_Result_61_fu_1337_p3[2] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd2;
    end else if (p_Result_61_fu_1337_p3[3] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd3;
    end else if (p_Result_61_fu_1337_p3[4] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd4;
    end else if (p_Result_61_fu_1337_p3[5] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd5;
    end else if (p_Result_61_fu_1337_p3[6] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd6;
    end else if (p_Result_61_fu_1337_p3[7] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd7;
    end else if (p_Result_61_fu_1337_p3[8] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd8;
    end else if (p_Result_61_fu_1337_p3[9] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd9;
    end else if (p_Result_61_fu_1337_p3[10] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd10;
    end else if (p_Result_61_fu_1337_p3[11] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd11;
    end else if (p_Result_61_fu_1337_p3[12] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd12;
    end else if (p_Result_61_fu_1337_p3[13] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd13;
    end else if (p_Result_61_fu_1337_p3[14] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd14;
    end else if (p_Result_61_fu_1337_p3[15] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd15;
    end else if (p_Result_61_fu_1337_p3[16] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd16;
    end else if (p_Result_61_fu_1337_p3[17] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd17;
    end else if (p_Result_61_fu_1337_p3[18] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd18;
    end else if (p_Result_61_fu_1337_p3[19] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd19;
    end else if (p_Result_61_fu_1337_p3[20] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd20;
    end else if (p_Result_61_fu_1337_p3[21] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd21;
    end else if (p_Result_61_fu_1337_p3[22] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd22;
    end else if (p_Result_61_fu_1337_p3[23] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd23;
    end else if (p_Result_61_fu_1337_p3[24] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd24;
    end else if (p_Result_61_fu_1337_p3[25] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd25;
    end else if (p_Result_61_fu_1337_p3[26] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd26;
    end else if (p_Result_61_fu_1337_p3[27] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd27;
    end else if (p_Result_61_fu_1337_p3[28] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd28;
    end else if (p_Result_61_fu_1337_p3[29] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd29;
    end else if (p_Result_61_fu_1337_p3[30] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd30;
    end else if (p_Result_61_fu_1337_p3[31] == 1'b1) begin
        tmp_i_fu_1344_p3 = 32'd31;
    end else begin
        tmp_i_fu_1344_p3 = 32'd32;
    end
end

assign tofollow_fu_2598_p2 = (32'd1 + etx_tofollow_fu_332);

assign total_V_fu_1494_p2 = (ap_phi_mux_p_030_0_i1_i_phi_fu_1000_p34 + p_070_0_i_i_reg_984);


always @ (p_Result_67_fu_2190_p3) begin
    if (p_Result_67_fu_2190_p3[0] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd0;
    end else if (p_Result_67_fu_2190_p3[1] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd1;
    end else if (p_Result_67_fu_2190_p3[2] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd2;
    end else if (p_Result_67_fu_2190_p3[3] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd3;
    end else if (p_Result_67_fu_2190_p3[4] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd4;
    end else if (p_Result_67_fu_2190_p3[5] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd5;
    end else if (p_Result_67_fu_2190_p3[6] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd6;
    end else if (p_Result_67_fu_2190_p3[7] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd7;
    end else if (p_Result_67_fu_2190_p3[8] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd8;
    end else if (p_Result_67_fu_2190_p3[9] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd9;
    end else if (p_Result_67_fu_2190_p3[10] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd10;
    end else if (p_Result_67_fu_2190_p3[11] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd11;
    end else if (p_Result_67_fu_2190_p3[12] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd12;
    end else if (p_Result_67_fu_2190_p3[13] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd13;
    end else if (p_Result_67_fu_2190_p3[14] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd14;
    end else if (p_Result_67_fu_2190_p3[15] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd15;
    end else if (p_Result_67_fu_2190_p3[16] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd16;
    end else if (p_Result_67_fu_2190_p3[17] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd17;
    end else if (p_Result_67_fu_2190_p3[18] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd18;
    end else if (p_Result_67_fu_2190_p3[19] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd19;
    end else if (p_Result_67_fu_2190_p3[20] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd20;
    end else if (p_Result_67_fu_2190_p3[21] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd21;
    end else if (p_Result_67_fu_2190_p3[22] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd22;
    end else if (p_Result_67_fu_2190_p3[23] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd23;
    end else if (p_Result_67_fu_2190_p3[24] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd24;
    end else if (p_Result_67_fu_2190_p3[25] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd25;
    end else if (p_Result_67_fu_2190_p3[26] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd26;
    end else if (p_Result_67_fu_2190_p3[27] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd27;
    end else if (p_Result_67_fu_2190_p3[28] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd28;
    end else if (p_Result_67_fu_2190_p3[29] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd29;
    end else if (p_Result_67_fu_2190_p3[30] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd30;
    end else if (p_Result_67_fu_2190_p3[31] == 1'b1) begin
        val_assign_1_fu_2198_p3 = 32'd31;
    end else begin
        val_assign_1_fu_2198_p3 = 32'd32;
    end
end


always @ (p_Result_65_fu_2091_p3) begin
    if (p_Result_65_fu_2091_p3[0] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd0;
    end else if (p_Result_65_fu_2091_p3[1] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd1;
    end else if (p_Result_65_fu_2091_p3[2] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd2;
    end else if (p_Result_65_fu_2091_p3[3] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd3;
    end else if (p_Result_65_fu_2091_p3[4] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd4;
    end else if (p_Result_65_fu_2091_p3[5] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd5;
    end else if (p_Result_65_fu_2091_p3[6] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd6;
    end else if (p_Result_65_fu_2091_p3[7] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd7;
    end else if (p_Result_65_fu_2091_p3[8] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd8;
    end else if (p_Result_65_fu_2091_p3[9] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd9;
    end else if (p_Result_65_fu_2091_p3[10] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd10;
    end else if (p_Result_65_fu_2091_p3[11] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd11;
    end else if (p_Result_65_fu_2091_p3[12] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd12;
    end else if (p_Result_65_fu_2091_p3[13] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd13;
    end else if (p_Result_65_fu_2091_p3[14] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd14;
    end else if (p_Result_65_fu_2091_p3[15] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd15;
    end else if (p_Result_65_fu_2091_p3[16] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd16;
    end else if (p_Result_65_fu_2091_p3[17] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd17;
    end else if (p_Result_65_fu_2091_p3[18] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd18;
    end else if (p_Result_65_fu_2091_p3[19] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd19;
    end else if (p_Result_65_fu_2091_p3[20] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd20;
    end else if (p_Result_65_fu_2091_p3[21] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd21;
    end else if (p_Result_65_fu_2091_p3[22] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd22;
    end else if (p_Result_65_fu_2091_p3[23] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd23;
    end else if (p_Result_65_fu_2091_p3[24] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd24;
    end else if (p_Result_65_fu_2091_p3[25] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd25;
    end else if (p_Result_65_fu_2091_p3[26] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd26;
    end else if (p_Result_65_fu_2091_p3[27] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd27;
    end else if (p_Result_65_fu_2091_p3[28] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd28;
    end else if (p_Result_65_fu_2091_p3[29] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd29;
    end else if (p_Result_65_fu_2091_p3[30] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd30;
    end else if (p_Result_65_fu_2091_p3[31] == 1'b1) begin
        val_assign_s_fu_2099_p3 = 32'd31;
    end else begin
        val_assign_s_fu_2099_p3 = 32'd32;
    end
end

assign xlo_V_1_fu_1934_p3 = {{ap_phi_mux_etx_cv_m_lo_V_phi_fu_1130_p4}, {10'd0}};

assign xlo_V_2_cast_i_fu_1942_p1 = xlo_V_1_fu_1934_p3;

assign xlo_V_fu_1946_p2 = ($signed(22'd4193280) + $signed(xlo_V_2_cast_i_fu_1942_p1));

always @ (posedge ap_clk) begin
    tmp_90_reg_2961[9:0] <= 10'b0000000000;
    tmp_110_cast_reg_2991[9:0] <= 10'b0000000000;
    tmp_110_cast_reg_2991[14:13] <= 2'b00;
    p_shl_cast_reg_2996[3:0] <= 4'b0000;
    p_shl_cast_reg_2996[6] <= 1'b0;
    left_cast_i_reg_3133[31:7] <= 25'b0000000000000000000000000;
    tmp_404_i_reg_3269[0] <= 1'b0;
    nbits_assign_3_cast_s_reg_3305[6:4] <= 3'b000;
    left_4_cast_i_reg_3441[31:7] <= 25'b0000000000000000000000000;
    left_3_cast_i_reg_3482[31:7] <= 25'b0000000000000000000000000;
end

endmodule //APE_encode144
