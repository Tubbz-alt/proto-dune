// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module APE_encode150 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        etxOut_ha_m_ccur,
        etxOut_ha_m_ccur_ap_vld,
        etxOut_ha_m_cidx,
        etxOut_ha_m_cidx_ap_vld,
        etxOut_ha_m_buf_address0,
        etxOut_ha_m_buf_ce0,
        etxOut_ha_m_buf_we0,
        etxOut_ha_m_buf_d0,
        etxOut_ba_m_ccur,
        etxOut_ba_m_ccur_ap_vld,
        etxOut_ba_m_cidx,
        etxOut_ba_m_cidx_ap_vld,
        etxOut_ba_m_buf_address0,
        etxOut_ba_m_buf_ce0,
        etxOut_ba_m_buf_we0,
        etxOut_ba_m_buf_d0,
        hist_m_omask_V_address0,
        hist_m_omask_V_ce0,
        hist_m_omask_V_q0,
        hist_m_omask_V19_address0,
        hist_m_omask_V19_ce0,
        hist_m_omask_V19_q0,
        hist_m_omask_V20_address0,
        hist_m_omask_V20_ce0,
        hist_m_omask_V20_q0,
        hist_m_omask_V21_address0,
        hist_m_omask_V21_ce0,
        hist_m_omask_V21_q0,
        hist_m_omask_V22_address0,
        hist_m_omask_V22_ce0,
        hist_m_omask_V22_q0,
        hist_m_omask_V23_address0,
        hist_m_omask_V23_ce0,
        hist_m_omask_V23_q0,
        hist_m_omask_V24_address0,
        hist_m_omask_V24_ce0,
        hist_m_omask_V24_q0,
        hist_m_omask_V25_address0,
        hist_m_omask_V25_ce0,
        hist_m_omask_V25_q0,
        hist_m_omask_V_offset_dout,
        hist_m_omask_V_offset_empty_n,
        hist_m_omask_V_offset_read,
        hist_m_maxcnt_V_address0,
        hist_m_maxcnt_V_ce0,
        hist_m_maxcnt_V_q0,
        hist_m_maxcnt_V26_address0,
        hist_m_maxcnt_V26_ce0,
        hist_m_maxcnt_V26_q0,
        hist_m_maxcnt_V27_address0,
        hist_m_maxcnt_V27_ce0,
        hist_m_maxcnt_V27_q0,
        hist_m_maxcnt_V28_address0,
        hist_m_maxcnt_V28_ce0,
        hist_m_maxcnt_V28_q0,
        hist_m_maxcnt_V29_address0,
        hist_m_maxcnt_V29_ce0,
        hist_m_maxcnt_V29_q0,
        hist_m_maxcnt_V30_address0,
        hist_m_maxcnt_V30_ce0,
        hist_m_maxcnt_V30_q0,
        hist_m_maxcnt_V31_address0,
        hist_m_maxcnt_V31_ce0,
        hist_m_maxcnt_V31_q0,
        hist_m_maxcnt_V32_address0,
        hist_m_maxcnt_V32_ce0,
        hist_m_maxcnt_V32_q0,
        hist_m_nobits_V_address0,
        hist_m_nobits_V_ce0,
        hist_m_nobits_V_q0,
        hist_m_nobits_V33_address0,
        hist_m_nobits_V33_ce0,
        hist_m_nobits_V33_q0,
        hist_m_nobits_V34_address0,
        hist_m_nobits_V34_ce0,
        hist_m_nobits_V34_q0,
        hist_m_nobits_V35_address0,
        hist_m_nobits_V35_ce0,
        hist_m_nobits_V35_q0,
        hist_m_nobits_V36_address0,
        hist_m_nobits_V36_ce0,
        hist_m_nobits_V36_q0,
        hist_m_nobits_V37_address0,
        hist_m_nobits_V37_ce0,
        hist_m_nobits_V37_q0,
        hist_m_nobits_V38_address0,
        hist_m_nobits_V38_ce0,
        hist_m_nobits_V38_q0,
        hist_m_nobits_V39_address0,
        hist_m_nobits_V39_ce0,
        hist_m_nobits_V39_q0,
        hist_m_bins_V_address0,
        hist_m_bins_V_ce0,
        hist_m_bins_V_q0,
        hist_m_bins_V1_address0,
        hist_m_bins_V1_ce0,
        hist_m_bins_V1_q0,
        hist_m_bins_V40_address0,
        hist_m_bins_V40_ce0,
        hist_m_bins_V40_q0,
        hist_m_bins_V402_address0,
        hist_m_bins_V402_ce0,
        hist_m_bins_V402_q0,
        hist_m_bins_V41_address0,
        hist_m_bins_V41_ce0,
        hist_m_bins_V41_q0,
        hist_m_bins_V413_address0,
        hist_m_bins_V413_ce0,
        hist_m_bins_V413_q0,
        hist_m_bins_V42_address0,
        hist_m_bins_V42_ce0,
        hist_m_bins_V42_q0,
        hist_m_bins_V424_address0,
        hist_m_bins_V424_ce0,
        hist_m_bins_V424_q0,
        hist_m_bins_V43_address0,
        hist_m_bins_V43_ce0,
        hist_m_bins_V43_q0,
        hist_m_bins_V435_address0,
        hist_m_bins_V435_ce0,
        hist_m_bins_V435_q0,
        hist_m_bins_V44_address0,
        hist_m_bins_V44_ce0,
        hist_m_bins_V44_q0,
        hist_m_bins_V446_address0,
        hist_m_bins_V446_ce0,
        hist_m_bins_V446_q0,
        hist_m_bins_V45_address0,
        hist_m_bins_V45_ce0,
        hist_m_bins_V45_q0,
        hist_m_bins_V457_address0,
        hist_m_bins_V457_ce0,
        hist_m_bins_V457_q0,
        hist_m_bins_V46_address0,
        hist_m_bins_V46_ce0,
        hist_m_bins_V46_q0,
        hist_m_bins_V468_address0,
        hist_m_bins_V468_ce0,
        hist_m_bins_V468_q0,
        syms_V_address0,
        syms_V_ce0,
        syms_V_q0,
        syms_V47_address0,
        syms_V47_ce0,
        syms_V47_q0,
        syms_V48_address0,
        syms_V48_ce0,
        syms_V48_q0,
        syms_V49_address0,
        syms_V49_ce0,
        syms_V49_q0
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_pp0_stage0 = 9'd8;
parameter    ap_ST_fsm_state10 = 9'd16;
parameter    ap_ST_fsm_pp1_stage0 = 9'd32;
parameter    ap_ST_fsm_state21 = 9'd64;
parameter    ap_ST_fsm_state22 = 9'd128;
parameter    ap_ST_fsm_state23 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [63:0] etxOut_ha_m_ccur;
output   etxOut_ha_m_ccur_ap_vld;
output  [31:0] etxOut_ha_m_cidx;
output   etxOut_ha_m_cidx_ap_vld;
output  [7:0] etxOut_ha_m_buf_address0;
output   etxOut_ha_m_buf_ce0;
output   etxOut_ha_m_buf_we0;
output  [63:0] etxOut_ha_m_buf_d0;
output  [63:0] etxOut_ba_m_ccur;
output   etxOut_ba_m_ccur_ap_vld;
output  [31:0] etxOut_ba_m_cidx;
output   etxOut_ba_m_cidx_ap_vld;
output  [7:0] etxOut_ba_m_buf_address0;
output   etxOut_ba_m_buf_ce0;
output   etxOut_ba_m_buf_we0;
output  [63:0] etxOut_ba_m_buf_d0;
output  [1:0] hist_m_omask_V_address0;
output   hist_m_omask_V_ce0;
input  [31:0] hist_m_omask_V_q0;
output  [1:0] hist_m_omask_V19_address0;
output   hist_m_omask_V19_ce0;
input  [31:0] hist_m_omask_V19_q0;
output  [1:0] hist_m_omask_V20_address0;
output   hist_m_omask_V20_ce0;
input  [31:0] hist_m_omask_V20_q0;
output  [1:0] hist_m_omask_V21_address0;
output   hist_m_omask_V21_ce0;
input  [31:0] hist_m_omask_V21_q0;
output  [1:0] hist_m_omask_V22_address0;
output   hist_m_omask_V22_ce0;
input  [31:0] hist_m_omask_V22_q0;
output  [1:0] hist_m_omask_V23_address0;
output   hist_m_omask_V23_ce0;
input  [31:0] hist_m_omask_V23_q0;
output  [1:0] hist_m_omask_V24_address0;
output   hist_m_omask_V24_ce0;
input  [31:0] hist_m_omask_V24_q0;
output  [1:0] hist_m_omask_V25_address0;
output   hist_m_omask_V25_ce0;
input  [31:0] hist_m_omask_V25_q0;
input  [4:0] hist_m_omask_V_offset_dout;
input   hist_m_omask_V_offset_empty_n;
output   hist_m_omask_V_offset_read;
output  [1:0] hist_m_maxcnt_V_address0;
output   hist_m_maxcnt_V_ce0;
input  [9:0] hist_m_maxcnt_V_q0;
output  [1:0] hist_m_maxcnt_V26_address0;
output   hist_m_maxcnt_V26_ce0;
input  [9:0] hist_m_maxcnt_V26_q0;
output  [1:0] hist_m_maxcnt_V27_address0;
output   hist_m_maxcnt_V27_ce0;
input  [9:0] hist_m_maxcnt_V27_q0;
output  [1:0] hist_m_maxcnt_V28_address0;
output   hist_m_maxcnt_V28_ce0;
input  [9:0] hist_m_maxcnt_V28_q0;
output  [1:0] hist_m_maxcnt_V29_address0;
output   hist_m_maxcnt_V29_ce0;
input  [9:0] hist_m_maxcnt_V29_q0;
output  [1:0] hist_m_maxcnt_V30_address0;
output   hist_m_maxcnt_V30_ce0;
input  [9:0] hist_m_maxcnt_V30_q0;
output  [1:0] hist_m_maxcnt_V31_address0;
output   hist_m_maxcnt_V31_ce0;
input  [9:0] hist_m_maxcnt_V31_q0;
output  [1:0] hist_m_maxcnt_V32_address0;
output   hist_m_maxcnt_V32_ce0;
input  [9:0] hist_m_maxcnt_V32_q0;
output  [1:0] hist_m_nobits_V_address0;
output   hist_m_nobits_V_ce0;
input  [3:0] hist_m_nobits_V_q0;
output  [1:0] hist_m_nobits_V33_address0;
output   hist_m_nobits_V33_ce0;
input  [3:0] hist_m_nobits_V33_q0;
output  [1:0] hist_m_nobits_V34_address0;
output   hist_m_nobits_V34_ce0;
input  [3:0] hist_m_nobits_V34_q0;
output  [1:0] hist_m_nobits_V35_address0;
output   hist_m_nobits_V35_ce0;
input  [3:0] hist_m_nobits_V35_q0;
output  [1:0] hist_m_nobits_V36_address0;
output   hist_m_nobits_V36_ce0;
input  [3:0] hist_m_nobits_V36_q0;
output  [1:0] hist_m_nobits_V37_address0;
output   hist_m_nobits_V37_ce0;
input  [3:0] hist_m_nobits_V37_q0;
output  [1:0] hist_m_nobits_V38_address0;
output   hist_m_nobits_V38_ce0;
input  [3:0] hist_m_nobits_V38_q0;
output  [1:0] hist_m_nobits_V39_address0;
output   hist_m_nobits_V39_ce0;
input  [3:0] hist_m_nobits_V39_q0;
output  [6:0] hist_m_bins_V_address0;
output   hist_m_bins_V_ce0;
input  [9:0] hist_m_bins_V_q0;
output  [5:0] hist_m_bins_V1_address0;
output   hist_m_bins_V1_ce0;
input  [9:0] hist_m_bins_V1_q0;
output  [6:0] hist_m_bins_V40_address0;
output   hist_m_bins_V40_ce0;
input  [9:0] hist_m_bins_V40_q0;
output  [5:0] hist_m_bins_V402_address0;
output   hist_m_bins_V402_ce0;
input  [9:0] hist_m_bins_V402_q0;
output  [6:0] hist_m_bins_V41_address0;
output   hist_m_bins_V41_ce0;
input  [9:0] hist_m_bins_V41_q0;
output  [5:0] hist_m_bins_V413_address0;
output   hist_m_bins_V413_ce0;
input  [9:0] hist_m_bins_V413_q0;
output  [6:0] hist_m_bins_V42_address0;
output   hist_m_bins_V42_ce0;
input  [9:0] hist_m_bins_V42_q0;
output  [5:0] hist_m_bins_V424_address0;
output   hist_m_bins_V424_ce0;
input  [9:0] hist_m_bins_V424_q0;
output  [6:0] hist_m_bins_V43_address0;
output   hist_m_bins_V43_ce0;
input  [9:0] hist_m_bins_V43_q0;
output  [5:0] hist_m_bins_V435_address0;
output   hist_m_bins_V435_ce0;
input  [9:0] hist_m_bins_V435_q0;
output  [6:0] hist_m_bins_V44_address0;
output   hist_m_bins_V44_ce0;
input  [9:0] hist_m_bins_V44_q0;
output  [5:0] hist_m_bins_V446_address0;
output   hist_m_bins_V446_ce0;
input  [9:0] hist_m_bins_V446_q0;
output  [6:0] hist_m_bins_V45_address0;
output   hist_m_bins_V45_ce0;
input  [9:0] hist_m_bins_V45_q0;
output  [5:0] hist_m_bins_V457_address0;
output   hist_m_bins_V457_ce0;
input  [9:0] hist_m_bins_V457_q0;
output  [6:0] hist_m_bins_V46_address0;
output   hist_m_bins_V46_ce0;
input  [9:0] hist_m_bins_V46_q0;
output  [5:0] hist_m_bins_V468_address0;
output   hist_m_bins_V468_ce0;
input  [9:0] hist_m_bins_V468_q0;
output  [12:0] syms_V_address0;
output   syms_V_ce0;
input  [11:0] syms_V_q0;
output  [12:0] syms_V47_address0;
output   syms_V47_ce0;
input  [11:0] syms_V47_q0;
output  [12:0] syms_V48_address0;
output   syms_V48_ce0;
input  [11:0] syms_V48_q0;
output  [12:0] syms_V49_address0;
output   syms_V49_ce0;
input  [11:0] syms_V49_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg etxOut_ha_m_ccur_ap_vld;
reg etxOut_ha_m_cidx_ap_vld;
reg[7:0] etxOut_ha_m_buf_address0;
reg etxOut_ha_m_buf_ce0;
reg etxOut_ha_m_buf_we0;
reg[63:0] etxOut_ha_m_buf_d0;
reg etxOut_ba_m_ccur_ap_vld;
reg etxOut_ba_m_cidx_ap_vld;
reg[7:0] etxOut_ba_m_buf_address0;
reg etxOut_ba_m_buf_ce0;
reg etxOut_ba_m_buf_we0;
reg[63:0] etxOut_ba_m_buf_d0;
reg hist_m_omask_V_ce0;
reg hist_m_omask_V19_ce0;
reg hist_m_omask_V20_ce0;
reg hist_m_omask_V21_ce0;
reg hist_m_omask_V22_ce0;
reg hist_m_omask_V23_ce0;
reg hist_m_omask_V24_ce0;
reg hist_m_omask_V25_ce0;
reg hist_m_omask_V_offset_read;
reg hist_m_maxcnt_V_ce0;
reg hist_m_maxcnt_V26_ce0;
reg hist_m_maxcnt_V27_ce0;
reg hist_m_maxcnt_V28_ce0;
reg hist_m_maxcnt_V29_ce0;
reg hist_m_maxcnt_V30_ce0;
reg hist_m_maxcnt_V31_ce0;
reg hist_m_maxcnt_V32_ce0;
reg hist_m_nobits_V_ce0;
reg hist_m_nobits_V33_ce0;
reg hist_m_nobits_V34_ce0;
reg hist_m_nobits_V35_ce0;
reg hist_m_nobits_V36_ce0;
reg hist_m_nobits_V37_ce0;
reg hist_m_nobits_V38_ce0;
reg hist_m_nobits_V39_ce0;
reg hist_m_bins_V_ce0;
reg hist_m_bins_V1_ce0;
reg hist_m_bins_V40_ce0;
reg hist_m_bins_V402_ce0;
reg hist_m_bins_V41_ce0;
reg hist_m_bins_V413_ce0;
reg hist_m_bins_V42_ce0;
reg hist_m_bins_V424_ce0;
reg hist_m_bins_V43_ce0;
reg hist_m_bins_V435_ce0;
reg hist_m_bins_V44_ce0;
reg hist_m_bins_V446_ce0;
reg hist_m_bins_V45_ce0;
reg hist_m_bins_V457_ce0;
reg hist_m_bins_V46_ce0;
reg hist_m_bins_V468_ce0;
reg[12:0] syms_V_address0;
reg syms_V_ce0;
reg[12:0] syms_V47_address0;
reg syms_V47_ce0;
reg[12:0] syms_V48_address0;
reg syms_V48_ce0;
reg[12:0] syms_V49_address0;
reg syms_V49_ce0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    hist_m_omask_V_offset_blk_n;
reg   [5:0] i_assign_reg_1002;
reg   [5:0] i_assign_reg_1002_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state8_pp0_stage0_iter4;
wire    ap_block_state9_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_11001;
reg   [9:0] p_070_0_i_i_reg_1014;
reg   [9:0] p_030_0_i1_i_reg_1026;
reg   [9:0] p_030_0_i1_i_reg_1026_pp0_iter3_reg;
reg   [31:0] etx_ha_m_idx_i_reg_1084;
reg   [31:0] etx_ha_m_idx_i_reg_1084_pp0_iter4_reg;
reg   [31:0] nbits_assign_reg_1096;
reg   [31:0] p_0100_0_i_i_reg_1108;
reg   [63:0] syms_pn_rec_i_reg_1136;
reg   [11:0] p_i_reg_1147;
reg   [10:0] etx_cv_m_lo_V_reg_1156;
reg   [11:0] etx_cv_m_hi_V_reg_1168;
wire   [1:0] tmp_306_fu_1246_p1;
reg   [1:0] tmp_306_reg_2952;
reg    ap_block_state1;
reg   [2:0] tmp_s_reg_2957;
wire   [2:0] tmp_307_fu_1260_p1;
reg   [2:0] tmp_307_reg_2962;
wire   [1:0] tmp_113_fu_1264_p4;
reg   [1:0] tmp_113_reg_2969;
reg   [1:0] hist_m_nobits_V_addr_reg_3015;
reg   [1:0] hist_m_nobits_V33_ad_reg_3020;
reg   [1:0] hist_m_nobits_V34_ad_reg_3025;
reg   [1:0] hist_m_nobits_V35_ad_reg_3030;
reg   [1:0] hist_m_nobits_V36_ad_reg_3035;
reg   [1:0] hist_m_nobits_V37_ad_reg_3040;
reg   [1:0] hist_m_nobits_V38_ad_reg_3045;
reg   [1:0] hist_m_nobits_V39_ad_reg_3050;
reg   [1:0] hist_m_omask_V_addr_reg_3055;
reg   [1:0] hist_m_omask_V19_add_reg_3060;
reg   [1:0] hist_m_omask_V20_add_reg_3065;
reg   [1:0] hist_m_omask_V21_add_reg_3070;
reg   [1:0] hist_m_omask_V22_add_reg_3075;
reg   [1:0] hist_m_omask_V23_add_reg_3080;
reg   [1:0] hist_m_omask_V24_add_reg_3085;
reg   [1:0] hist_m_omask_V25_add_reg_3090;
wire   [12:0] tmp_111_fu_1307_p3;
reg   [12:0] tmp_111_reg_3095;
wire    ap_CS_fsm_state2;
reg   [9:0] p_Result_104_fu_1343_p4;
reg   [9:0] p_Result_104_reg_3120;
wire   [14:0] tmp_146_cast_fu_1353_p1;
reg   [14:0] tmp_146_cast_reg_3125;
wire    ap_CS_fsm_state3;
wire   [6:0] p_shl_cast_fu_1366_p1;
reg   [6:0] p_shl_cast_reg_3130;
wire   [6:0] tmp_115_fu_1370_p2;
reg   [6:0] tmp_115_reg_3135;
wire   [11:0] grp_fu_1189_p6;
reg   [11:0] prv_V_reg_3140;
wire   [31:0] nbits_8_fu_1391_p2;
reg   [31:0] nbits_8_reg_3145;
wire   [31:0] bits_V_fu_1411_p2;
wire   [0:0] tmp_461_i_fu_1417_p2;
reg   [0:0] tmp_461_i_reg_3156;
reg   [0:0] tmp_461_i_reg_3156_pp0_iter1_reg;
reg   [0:0] tmp_461_i_reg_3156_pp0_iter2_reg;
reg   [0:0] tmp_461_i_reg_3156_pp0_iter3_reg;
reg   [0:0] tmp_461_i_reg_3156_pp0_iter4_reg;
wire   [5:0] ibin_fu_1423_p2;
reg   [5:0] ibin_reg_3160;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_312_fu_1429_p3;
reg   [0:0] tmp_312_reg_3165;
reg   [0:0] tmp_312_reg_3165_pp0_iter1_reg;
reg   [0:0] tmp_312_reg_3165_pp0_iter2_reg;
reg   [0:0] tmp_312_reg_3165_pp0_iter3_reg;
reg   [0:0] tmp_312_reg_3165_pp0_iter4_reg;
wire   [0:0] tmp_313_fu_1462_p3;
reg   [0:0] tmp_313_reg_3169;
wire   [0:0] tmp_317_fu_1470_p1;
reg   [0:0] tmp_317_reg_3173;
wire   [9:0] left_V_fu_1522_p2;
reg   [9:0] left_V_reg_3257;
wire   [9:0] total_V_fu_1533_p2;
reg    ap_enable_reg_pp0_iter2;
wire   [31:0] left_cast_i_fu_1553_p1;
reg   [31:0] left_cast_i_reg_3267;
wire   [31:0] overrun_fu_1557_p2;
reg   [31:0] overrun_reg_3272;
wire   [0:0] tmp_463_i_fu_1563_p2;
reg   [0:0] tmp_463_i_reg_3277;
reg   [0:0] tmp_311_reg_3283;
reg   [0:0] tmp_311_reg_3283_pp0_iter4_reg;
wire   [31:0] etx_ha_m_idx_fu_1577_p2;
reg   [31:0] etx_ha_m_idx_reg_3287;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] etx_ha_m_idx_reg_3287_pp0_iter4_reg;
wire   [31:0] p_mbits_0_i_i_fu_1619_p3;
reg   [31:0] p_mbits_0_i_i_reg_3293;
reg    ap_enable_reg_pp0_iter4;
wire   [63:0] etx_ha_m_cur_fu_1681_p3;
reg   [63:0] etx_ha_m_cur_reg_3303;
wire   [31:0] bits_V_7_fu_1699_p1;
wire   [63:0] etx_ha_m_cur_13_load_1_load_fu_1718_p1;
reg    ap_enable_reg_pp0_iter5;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state11_pp1_stage0_iter0;
wire    ap_block_state12_pp1_stage0_iter1;
wire    ap_block_state13_pp1_stage0_iter2;
wire    ap_block_state14_pp1_stage0_iter3;
wire    ap_block_state15_pp1_stage0_iter4;
wire    ap_block_state16_pp1_stage0_iter5;
wire    ap_block_state17_pp1_stage0_iter6;
wire    ap_block_state18_pp1_stage0_iter7;
wire    ap_block_state19_pp1_stage0_iter8;
wire    ap_block_state20_pp1_stage0_iter9;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] exitcond_fu_1767_p2;
reg   [0:0] exitcond_reg_3384;
reg   [0:0] exitcond_reg_3384_pp1_iter1_reg;
reg   [0:0] exitcond_reg_3384_pp1_iter2_reg;
reg   [0:0] exitcond_reg_3384_pp1_iter3_reg;
reg   [0:0] exitcond_reg_3384_pp1_iter4_reg;
reg   [0:0] exitcond_reg_3384_pp1_iter5_reg;
wire   [63:0] phitmp2_i_fu_1773_p2;
reg    ap_enable_reg_pp1_iter0;
reg   [11:0] cur_V_reg_3393;
reg    ap_enable_reg_pp1_iter1;
wire   [11:0] r_V_i_fu_1779_p2;
reg   [11:0] r_V_i_reg_3398;
wire   [12:0] tmp_485_i_fu_1799_p2;
reg   [12:0] tmp_485_i_reg_3404;
wire   [12:0] ovr_V_4_fu_1865_p3;
reg   [12:0] ovr_V_4_reg_3409;
reg   [12:0] ovr_V_4_reg_3409_pp1_iter3_reg;
wire   [0:0] tmp_507_i_fu_1901_p2;
reg   [0:0] tmp_507_i_reg_3426;
reg   [0:0] tmp_507_i_reg_3426_pp1_iter3_reg;
reg   [0:0] tmp_507_i_reg_3426_pp1_iter4_reg;
wire   [9:0] table_i_q0;
reg   [9:0] table_i_load_reg_3430;
reg    ap_enable_reg_pp1_iter3;
wire   [9:0] table_i_q1;
reg   [9:0] table_i_load_4_reg_3435;
wire   [6:0] nbits_assign_3_cast_s_fu_1920_p1;
reg   [6:0] nbits_assign_3_cast_s_reg_3440;
wire   [6:0] left_12_fu_1928_p2;
reg   [6:0] left_12_reg_3445;
wire   [6:0] overrun_12_fu_1934_p2;
reg   [6:0] overrun_12_reg_3450;
wire   [0:0] tmp_513_i_fu_1940_p2;
reg   [0:0] tmp_513_i_reg_3455;
wire   [0:0] tmp_329_fu_1946_p3;
reg   [0:0] tmp_329_reg_3461;
reg   [0:0] tmp_329_reg_3461_pp1_iter4_reg;
reg   [25:0] wrdIdx_1_reg_3465;
reg   [25:0] wrdIdx_1_reg_3465_pp1_iter4_reg;
wire   [23:0] grp_fu_2925_p3;
reg   [23:0] r_V_58_reg_3470;
reg    ap_enable_reg_pp1_iter4;
wire   [23:0] grp_fu_2934_p3;
reg   [23:0] r_V_60_reg_3476;
wire   [11:0] cv_m_lo_V_4_fu_2046_p4;
reg   [11:0] cv_m_lo_V_4_reg_3481;
reg   [11:0] cv_m_lo_V_4_reg_3481_pp1_iter5_reg;
wire   [63:0] etx_ha_m_cur_1_fu_2107_p3;
reg   [63:0] etx_ha_m_cur_1_reg_3487;
wire   [11:0] r_V_68_fu_2125_p2;
reg   [11:0] r_V_68_reg_3492;
wire   [3:0] nsame_V_fu_2178_p1;
reg   [3:0] nsame_V_reg_3498;
wire   [3:0] nreduce_V_fu_2277_p1;
reg   [3:0] nreduce_V_reg_3506;
wire   [10:0] r_V_72_fu_2289_p2;
reg    ap_enable_reg_pp1_iter5;
wire   [11:0] cv_m_hi_V_fu_2328_p2;
reg   [31:0] etx_ba_m_idx_5_load_reg_3521;
reg    ap_enable_reg_pp1_iter6;
reg   [31:0] etx_ba_m_idx_5_load_reg_3521_pp1_iter7_reg;
reg   [31:0] etx_ba_m_idx_5_load_reg_3521_pp1_iter8_reg;
wire   [5:0] cur_bidx_8_fu_2337_p1;
reg   [5:0] cur_bidx_8_reg_3527;
wire   [0:0] tmp_525_i_fu_2354_p2;
reg   [0:0] tmp_525_i_reg_3533;
reg   [0:0] tmp_525_i_reg_3533_pp1_iter7_reg;
reg   [0:0] tmp_525_i_reg_3533_pp1_iter8_reg;
reg   [31:0] etx_tofollow_load_4_reg_3537;
wire   [11:0] r_V_71_fu_2402_p3;
reg   [11:0] r_V_71_reg_3543;
wire   [31:0] nebits_fu_2410_p2;
reg   [31:0] nebits_reg_3549;
reg   [31:0] nebits_reg_3549_pp1_iter7_reg;
wire  signed [31:0] p_0_1_0_i_cast_i_fu_2422_p1;
reg  signed [31:0] p_0_1_0_i_cast_i_reg_3555;
wire   [0:0] tmp_335_fu_2426_p3;
reg   [0:0] tmp_335_reg_3562;
wire   [63:0] tmp_542_i_fu_2444_p2;
reg   [63:0] tmp_542_i_reg_3569;
wire   [11:0] tmp_302_i_fu_2592_p2;
reg   [11:0] tmp_302_i_reg_3574;
reg   [51:0] tmp_303_i_reg_3579;
wire   [31:0] left_7_cast_i_fu_2617_p1;
reg   [31:0] left_7_cast_i_reg_3584;
wire   [31:0] overrun_13_fu_2621_p2;
reg   [31:0] overrun_13_reg_3589;
wire   [0:0] tmp_546_i_fu_2626_p2;
reg   [0:0] tmp_546_i_reg_3594;
reg   [0:0] tmp_339_reg_3600;
reg   [0:0] tmp_339_reg_3600_pp1_iter8_reg;
wire   [63:0] etx_ba_m_cur_14_fu_2677_p2;
reg   [63:0] etx_ba_m_cur_14_reg_3604;
wire   [31:0] tofollow_fu_2698_p2;
reg   [31:0] tofollow_reg_3609;
wire    ap_CS_fsm_state21;
reg   [0:0] bit_V_reg_3616;
wire   [31:0] nbits_assign_s_fu_2712_p2;
reg   [31:0] nbits_assign_s_reg_3624;
wire   [63:0] tmp_493_i_fu_2722_p2;
reg   [63:0] tmp_493_i_reg_3630;
wire   [31:0] tmp_320_fu_2728_p1;
reg   [31:0] tmp_320_reg_3635;
wire   [31:0] left_5_cast_i_fu_2741_p1;
reg   [31:0] left_5_cast_i_reg_3640;
wire   [31:0] overrun_11_fu_2745_p2;
reg   [31:0] overrun_11_reg_3645;
reg   [0:0] tmp_322_reg_3651;
wire   [0:0] tmp_50_fu_2848_p2;
reg   [0:0] tmp_50_reg_3655;
wire    ap_CS_fsm_state22;
reg   [62:0] tmp_51_reg_3660;
wire   [0:0] tmp_498_i_fu_2864_p2;
reg   [0:0] tmp_498_i_reg_3665;
wire   [63:0] tmp_500_i_fu_2879_p2;
reg   [63:0] tmp_500_i_reg_3670;
wire    ap_block_pp0_stage0_subdone;
reg    ap_predicate_tran9to10_state4;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state10;
wire    ap_block_pp1_stage0_subdone;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter7;
reg    ap_condition_pp1_exit_iter6_state17;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg   [5:0] table_i_address0;
reg    table_i_ce0;
reg    table_i_we0;
wire   [5:0] table_i_address1;
reg    table_i_ce1;
reg   [5:0] ap_phi_mux_i_assign_phi_fu_1006_p4;
wire    ap_block_pp0_stage0;
reg   [9:0] ap_phi_mux_p_030_0_i1_i_phi_fu_1030_p34;
reg   [9:0] ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_1026;
wire   [9:0] ap_phi_reg_pp0_iter0_p_030_0_i1_i_reg_1026;
reg   [9:0] ap_phi_reg_pp0_iter1_p_030_0_i1_i_reg_1026;
reg   [31:0] ap_phi_mux_etx_ha_m_idx_i_phi_fu_1088_p4;
reg   [31:0] ap_phi_mux_nbits_assign_phi_fu_1100_p4;
reg   [31:0] BitStream64_m_idx_re_reg_1117;
reg   [63:0] BitStream64_m_cur_re_reg_1127;
reg   [11:0] ap_phi_mux_p_i_phi_fu_1150_p4;
wire    ap_block_pp1_stage0;
reg   [10:0] ap_phi_mux_etx_cv_m_lo_V_phi_fu_1160_p4;
reg   [11:0] ap_phi_mux_etx_cv_m_hi_V_phi_fu_1172_p4;
wire   [63:0] buf_28_fu_2885_p3;
reg   [63:0] ap_phi_mux_BitStream64_m_cur_re_8_phi_fu_1182_p4;
wire    ap_CS_fsm_state23;
wire   [63:0] etx_ba_m_cur_fu_2908_p2;
wire   [63:0] newIndex65_cast_i_fu_1274_p1;
wire   [63:0] tmp_112_fu_1314_p1;
wire   [63:0] tmp_152_cast_fu_1493_p1;
wire   [63:0] tmp_153_cast_fu_1510_p1;
wire   [63:0] tmp_462_i_fu_1528_p1;
wire   [63:0] tmp_i18_i_fu_1713_p1;
wire   [63:0] tmp_154_cast_fu_1755_p1;
wire   [63:0] tmp_501_i_fu_1881_p1;
wire   [63:0] tmp_502_i_fu_1896_p1;
wire   [63:0] tmp_i316_i_fu_2149_p1;
wire   [63:0] tmp_i515_i_fu_2693_p1;
wire   [63:0] tmp_i1017_i_fu_2915_p1;
reg   [63:0] etx_ha_m_cur_13_fu_324;
wire   [63:0] etx_ha_m_cur_14_fu_1629_p1;
reg   [12:0] ovr_V_5_fu_332;
reg   [31:0] etx_tofollow_fu_336;
wire   [31:0] npending_4_fu_2456_p1;
wire   [31:0] npending_fu_2474_p2;
reg   [63:0] BitStream64_m_cur_re_7_fu_340;
wire   [63:0] etx_ha_m_cur_15_fu_2055_p1;
reg   [31:0] BitStream64_m_idx_re_4_fu_344;
wire   [31:0] etx_ha_m_idx_4_fu_1970_p2;
reg   [63:0] etx_ba_m_cur_12_fu_348;
wire   [63:0] buf_27_fu_2640_p3;
reg   [31:0] etx_ba_m_idx_5_fu_352;
wire   [31:0] etx_ba_m_idx_fu_2450_p2;
reg   [31:0] grp_fu_1237_p1;
wire   [9:0] maxcnt_V_fu_1322_p10;
wire   [5:0] tmp_114_fu_1359_p3;
wire   [6:0] newIndex65_cast_i_ca_fu_1356_p1;
wire   [31:0] p_Result_105_fu_1376_p3;
reg   [31:0] tmp_i_fu_1383_p3;
wire   [15:0] tmp_308_fu_1397_p1;
wire   [3:0] grp_fu_1202_p10;
wire   [31:0] tmp_460_i_fu_1401_p4;
wire   [31:0] p_Val2_69_fu_1441_p10;
wire   [31:0] i_assign_cast24_i_fu_1437_p1;
wire   [4:0] tmp_318_fu_1474_p4;
wire   [6:0] newIndex66_i_cast_fu_1484_p1;
wire   [6:0] tmp_117_fu_1488_p2;
wire   [6:0] tmp_118_fu_1505_p2;
wire   [5:0] cur_bidx_fu_1539_p1;
wire   [6:0] cur_bidx_cast_i_fu_1543_p1;
wire   [6:0] left_fu_1547_p2;
reg   [9:0] p_Result_106_fu_1583_p4;
wire   [31:0] p_Result_107_fu_1592_p3;
reg   [31:0] tmp_473_i_fu_1600_p3;
wire   [31:0] nbits_fu_1608_p2;
wire   [0:0] tmp_478_i_fu_1614_p2;
wire   [31:0] shift_fu_1633_p3;
wire   [63:0] tmp_464_i_fu_1639_p1;
wire   [31:0] tmp_467_i_fu_1649_p2;
wire   [63:0] tmp_465_i_fu_1643_p2;
wire   [31:0] tmp_310_fu_1661_p1;
wire   [31:0] tmp_468_i_fu_1654_p3;
wire   [31:0] tmp_48_fu_1671_p4;
wire   [31:0] tmp_47_fu_1665_p2;
wire   [25:0] wrdIdx_fu_1703_p4;
wire   [14:0] tmp_314_fu_1746_p1;
wire   [14:0] tmp_116_fu_1750_p2;
wire   [31:0] tmp_316_fu_1763_p1;
wire   [12:0] r_V_fu_1785_p3;
wire   [12:0] tmp_484_i_fu_1793_p2;
wire   [11:0] tmp_324_fu_1808_p2;
wire   [11:0] tmp_486_i_fu_1820_p2;
wire   [0:0] tmp_325_fu_1813_p3;
wire   [12:0] tmp_486_cast_i_fu_1826_p1;
wire   [12:0] storemerge_i_fu_1830_p3;
wire   [13:0] tmp_490_cast_i_fu_1837_p1;
wire   [13:0] diff_fu_1841_p2;
wire   [0:0] tmp_326_fu_1847_p3;
wire   [12:0] ovr_V_fu_1855_p2;
wire   [4:0] idx_V_fu_1861_p1;
wire   [4:0] idx_V_4_fu_1873_p3;
wire   [5:0] lhs_V_cast_i_fu_1886_p1;
wire   [5:0] r_V_56_fu_1890_p2;
wire   [5:0] cur_bidx_9_fu_1912_p1;
wire   [6:0] cur_bidx_6_cast_i_fu_1924_p1;
wire   [31:0] nbits_assign_3_fu_1916_p1;
wire   [12:0] range_V_fu_1981_p1;
wire   [12:0] tmp_503_i_fu_1985_p1;
wire   [12:0] range_V_7_fu_1989_p2;
wire   [20:0] xlo_V_4_fu_2001_p3;
wire   [21:0] xlo_V_5_cast_i_fu_2009_p1;
wire   [12:0] range_V_8_fu_1995_p2;
wire   [21:0] xlo_V_fu_2013_p2;
wire   [6:0] shift_12_fu_2058_p3;
wire   [63:0] tmp_514_i_fu_2063_p1;
wire   [12:0] tmp_517_cast_i_fu_2073_p1;
wire   [12:0] tmp_518_i_fu_2076_p2;
wire   [63:0] tmp_515_i_fu_2067_p2;
wire   [12:0] tmp_328_fu_2087_p1;
wire   [12:0] tmp_519_i_fu_2081_p3;
wire   [50:0] tmp_55_fu_2097_p4;
wire   [12:0] tmp_54_fu_2091_p2;
wire   [11:0] cv_m_hi_V_7_fu_2030_p4;
reg   [11:0] p_Result_108_fu_2153_p4;
wire   [31:0] p_Result_109_fu_2162_p3;
reg   [31:0] val_assign_s_fu_2170_p3;
wire   [10:0] cv_m_hi_V_4_cast_fu_2131_p4;
wire   [10:0] cv_m_lo_V_4_cast_fu_2140_p4;
wire   [10:0] rhs_V_20_fu_2182_p2;
wire   [10:0] r_V_62_fu_2188_p2;
wire   [10:0] nbits_assign_4_cast_s_fu_2194_p1;
wire   [10:0] r_V_69_fu_2198_p2;
wire   [0:0] tmp_331_fu_2204_p3;
wire   [10:0] tmp_297_i_fu_2220_p2;
wire   [10:0] p_7_i_fu_2226_p2;
wire   [11:0] tmp_524_i_fu_2232_p3;
wire   [11:0] phitmp_i_fu_2240_p2;
wire   [11:0] pending_V_fu_2246_p2;
reg   [11:0] p_Result_110_fu_2251_p4;
wire   [31:0] p_Result_111_fu_2261_p3;
reg   [31:0] val_assign_4_fu_2269_p3;
wire   [10:0] tmp_555_cast_i_cast_fu_2285_p1;
reg   [11:0] p_Result_102_fu_2295_p4;
wire   [12:0] r_V_67_fu_2304_p3;
wire   [12:0] tmp_555_cast19_i_fu_2281_p1;
wire   [12:0] tmp_558_i_fu_2312_p2;
reg   [11:0] p_Result_103_fu_2318_p4;
wire   [11:0] hi_mask_V_4_fu_2212_p3;
wire   [4:0] nbits_assign_4_cast2_fu_2347_p1;
wire  signed [4:0] r_V_70_fu_2359_p2;
wire   [4:0] tmp_531_i_fu_2377_p2;
wire   [14:0] lhs_V_20_cast_i_fu_2341_p1;
wire   [14:0] tmp_531_cast_i_fu_2383_p1;
wire  signed [11:0] tmp_528_cast21_i_fu_2373_p1;
wire   [14:0] tmp_532_i_fu_2387_p2;
wire   [0:0] tmp_333_fu_2365_p3;
wire   [11:0] tmp_334_fu_2398_p1;
wire   [11:0] tmp_529_i_fu_2393_p2;
wire   [31:0] nbits_assign_4_fu_2344_p1;
wire   [4:0] p_0_1_0_i_i_fu_2416_p2;
wire   [63:0] tmp_540_i_fu_2434_p1;
wire   [63:0] tmp_541_i_fu_2438_p2;
wire   [3:0] mpending_V_fu_2350_p2;
wire   [31:0] tmp_526_i_fu_2470_p1;
wire   [31:0] leading_bit_4_fu_2490_p1;
wire   [31:0] tmp_537_i_fu_2493_p2;
wire   [31:0] tmp_538_i_fu_2497_p2;
wire   [63:0] tmp_543_i_fu_2515_p1;
wire   [63:0] tmp_544_i_fu_2518_p2;
wire   [31:0] tmp_337_fu_2523_p1;
wire   [31:0] tmp_300_i_fu_2536_p4;
reg   [31:0] tmp_299_i_fu_2527_p4;
wire   [0:0] tmp_535_i_fu_2485_p2;
wire   [0:0] sel_tmp7_fu_2554_p2;
wire   [0:0] sel_tmp8_fu_2560_p2;
reg   [11:0] p_Result_s_fu_2507_p4;
wire   [63:0] buf_25_fu_2546_p3;
wire   [63:0] buf_24_fu_2503_p1;
wire   [63:0] sel_tmp5_fu_2572_p3;
wire   [63:0] buf_1_i_i_fu_2580_p3;
wire   [11:0] tmp_338_fu_2588_p1;
wire   [11:0] bits_V_assign_4_fu_2565_p3;
wire   [6:0] cur_bidx_7_cast_i_fu_2608_p1;
wire   [6:0] left_13_fu_2611_p2;
wire   [31:0] shift_13_fu_2646_p3;
wire   [63:0] tmp_547_i_fu_2651_p1;
wire   [63:0] tmp_549_i_fu_2661_p1;
wire   [63:0] tmp_550_i_fu_2664_p2;
wire   [63:0] tmp_551_i_fu_2670_p3;
wire   [63:0] tmp_548_i_fu_2655_p2;
wire   [25:0] grp_fu_1237_p4;
wire   [63:0] tmp_492_i_fu_2718_p1;
wire   [6:0] cur_bidx_5_cast_i_fu_2732_p1;
wire   [6:0] left_11_fu_2735_p2;
wire   [31:0] leading_bit_fu_2764_p1;
wire   [31:0] tmp_488_i_fu_2767_p2;
wire   [31:0] tmp_289_i_fu_2781_p2;
wire   [63:0] tmp_494_i_fu_2776_p2;
wire   [31:0] tmp_291_i_fu_2794_p4;
reg   [31:0] tmp_290_i_fu_2786_p4;
wire   [0:0] tmp_483_i_fu_2759_p2;
wire   [63:0] buf_22_fu_2804_p3;
wire   [0:0] sel_tmp3_fu_2825_p2;
wire   [0:0] sel_tmp4_fu_2831_p2;
wire   [63:0] buf_fu_2772_p1;
wire   [63:0] sel_tmp_fu_2817_p3;
wire   [63:0] buf_1_i_i_i_fu_2836_p3;
wire   [0:0] tmp_321_fu_2844_p1;
wire   [0:0] tmp_496_i_fu_2812_p2;
wire   [31:0] shift_11_fu_2869_p3;
wire   [63:0] tmp_499_i_fu_2875_p1;
wire   [63:0] tmp_508_i_fu_2892_p1;
wire   [63:0] tmp_509_i_fu_2895_p2;
wire   [63:0] tmp_510_i_fu_2901_p3;
wire   [12:0] grp_fu_2925_p0;
wire   [22:0] lhs_V_fu_2019_p1;
wire   [9:0] grp_fu_2925_p1;
wire   [21:0] grp_fu_2925_p2;
wire   [12:0] grp_fu_2934_p0;
wire   [9:0] grp_fu_2934_p1;
wire   [20:0] grp_fu_2934_p2;
reg   [8:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [22:0] grp_fu_2925_p10;
wire   [23:0] grp_fu_2925_p20;
wire   [22:0] grp_fu_2934_p10;
wire   [23:0] grp_fu_2934_p20;
reg    ap_condition_2221;
reg    ap_condition_2227;
reg    ap_condition_961;
reg    ap_condition_869;
reg    ap_condition_886;
reg    ap_condition_891;
reg    ap_condition_897;
reg    ap_condition_900;
reg    ap_condition_906;
reg    ap_condition_909;
reg    ap_condition_915;
reg    ap_condition_918;
reg    ap_condition_924;
reg    ap_condition_927;
reg    ap_condition_933;
reg    ap_condition_936;
reg    ap_condition_942;
reg    ap_condition_945;
reg    ap_condition_951;
reg    ap_condition_954;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 9'd1;
#0 i_assign_reg_1002 = 6'd0;
#0 i_assign_reg_1002_pp0_iter1_reg = 6'd0;
#0 p_070_0_i_i_reg_1014 = 10'd0;
#0 p_030_0_i1_i_reg_1026 = 10'd0;
#0 p_030_0_i1_i_reg_1026_pp0_iter3_reg = 10'd0;
#0 etx_ha_m_idx_i_reg_1084 = 32'd0;
#0 etx_ha_m_idx_i_reg_1084_pp0_iter4_reg = 32'd0;
#0 nbits_assign_reg_1096 = 32'd0;
#0 p_0100_0_i_i_reg_1108 = 32'd0;
#0 syms_pn_rec_i_reg_1136 = 64'd0;
#0 p_i_reg_1147 = 12'd0;
#0 etx_cv_m_lo_V_reg_1156 = 11'd0;
#0 etx_cv_m_hi_V_reg_1168 = 12'd0;
#0 tmp_306_reg_2952 = 2'd0;
#0 tmp_s_reg_2957 = 3'd0;
#0 tmp_307_reg_2962 = 3'd0;
#0 tmp_113_reg_2969 = 2'd0;
#0 hist_m_nobits_V_addr_reg_3015 = 2'd0;
#0 hist_m_nobits_V33_ad_reg_3020 = 2'd0;
#0 hist_m_nobits_V34_ad_reg_3025 = 2'd0;
#0 hist_m_nobits_V35_ad_reg_3030 = 2'd0;
#0 hist_m_nobits_V36_ad_reg_3035 = 2'd0;
#0 hist_m_nobits_V37_ad_reg_3040 = 2'd0;
#0 hist_m_nobits_V38_ad_reg_3045 = 2'd0;
#0 hist_m_nobits_V39_ad_reg_3050 = 2'd0;
#0 hist_m_omask_V_addr_reg_3055 = 2'd0;
#0 hist_m_omask_V19_add_reg_3060 = 2'd0;
#0 hist_m_omask_V20_add_reg_3065 = 2'd0;
#0 hist_m_omask_V21_add_reg_3070 = 2'd0;
#0 hist_m_omask_V22_add_reg_3075 = 2'd0;
#0 hist_m_omask_V23_add_reg_3080 = 2'd0;
#0 hist_m_omask_V24_add_reg_3085 = 2'd0;
#0 hist_m_omask_V25_add_reg_3090 = 2'd0;
#0 tmp_111_reg_3095 = 13'd0;
#0 p_Result_104_reg_3120 = 10'd0;
#0 tmp_146_cast_reg_3125 = 15'd0;
#0 p_shl_cast_reg_3130 = 7'd0;
#0 tmp_115_reg_3135 = 7'd0;
#0 prv_V_reg_3140 = 12'd0;
#0 nbits_8_reg_3145 = 32'd0;
#0 tmp_461_i_reg_3156 = 1'd0;
#0 tmp_461_i_reg_3156_pp0_iter1_reg = 1'd0;
#0 tmp_461_i_reg_3156_pp0_iter2_reg = 1'd0;
#0 tmp_461_i_reg_3156_pp0_iter3_reg = 1'd0;
#0 tmp_461_i_reg_3156_pp0_iter4_reg = 1'd0;
#0 ibin_reg_3160 = 6'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 tmp_312_reg_3165 = 1'd0;
#0 tmp_312_reg_3165_pp0_iter1_reg = 1'd0;
#0 tmp_312_reg_3165_pp0_iter2_reg = 1'd0;
#0 tmp_312_reg_3165_pp0_iter3_reg = 1'd0;
#0 tmp_312_reg_3165_pp0_iter4_reg = 1'd0;
#0 tmp_313_reg_3169 = 1'd0;
#0 tmp_317_reg_3173 = 1'd0;
#0 left_V_reg_3257 = 10'd0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 left_cast_i_reg_3267 = 32'd0;
#0 overrun_reg_3272 = 32'd0;
#0 tmp_463_i_reg_3277 = 1'd0;
#0 tmp_311_reg_3283 = 1'd0;
#0 tmp_311_reg_3283_pp0_iter4_reg = 1'd0;
#0 etx_ha_m_idx_reg_3287 = 32'd0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 etx_ha_m_idx_reg_3287_pp0_iter4_reg = 32'd0;
#0 p_mbits_0_i_i_reg_3293 = 32'd0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 etx_ha_m_cur_reg_3303 = 64'd0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 exitcond_reg_3384 = 1'd0;
#0 exitcond_reg_3384_pp1_iter1_reg = 1'd0;
#0 exitcond_reg_3384_pp1_iter2_reg = 1'd0;
#0 exitcond_reg_3384_pp1_iter3_reg = 1'd0;
#0 exitcond_reg_3384_pp1_iter4_reg = 1'd0;
#0 exitcond_reg_3384_pp1_iter5_reg = 1'd0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 cur_V_reg_3393 = 12'd0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 r_V_i_reg_3398 = 12'd0;
#0 tmp_485_i_reg_3404 = 13'd0;
#0 ovr_V_4_reg_3409 = 13'd0;
#0 ovr_V_4_reg_3409_pp1_iter3_reg = 13'd0;
#0 tmp_507_i_reg_3426 = 1'd0;
#0 tmp_507_i_reg_3426_pp1_iter3_reg = 1'd0;
#0 tmp_507_i_reg_3426_pp1_iter4_reg = 1'd0;
#0 table_i_load_reg_3430 = 10'd0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 table_i_load_4_reg_3435 = 10'd0;
#0 nbits_assign_3_cast_s_reg_3440 = 7'd0;
#0 left_12_reg_3445 = 7'd0;
#0 overrun_12_reg_3450 = 7'd0;
#0 tmp_513_i_reg_3455 = 1'd0;
#0 tmp_329_reg_3461 = 1'd0;
#0 tmp_329_reg_3461_pp1_iter4_reg = 1'd0;
#0 wrdIdx_1_reg_3465 = 26'd0;
#0 wrdIdx_1_reg_3465_pp1_iter4_reg = 26'd0;
#0 r_V_58_reg_3470 = 24'd0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 r_V_60_reg_3476 = 24'd0;
#0 cv_m_lo_V_4_reg_3481 = 12'd0;
#0 cv_m_lo_V_4_reg_3481_pp1_iter5_reg = 12'd0;
#0 etx_ha_m_cur_1_reg_3487 = 64'd0;
#0 r_V_68_reg_3492 = 12'd0;
#0 nsame_V_reg_3498 = 4'd0;
#0 nreduce_V_reg_3506 = 4'd0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 etx_ba_m_idx_5_load_reg_3521 = 32'd0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 etx_ba_m_idx_5_load_reg_3521_pp1_iter7_reg = 32'd0;
#0 etx_ba_m_idx_5_load_reg_3521_pp1_iter8_reg = 32'd0;
#0 cur_bidx_8_reg_3527 = 6'd0;
#0 tmp_525_i_reg_3533 = 1'd0;
#0 tmp_525_i_reg_3533_pp1_iter7_reg = 1'd0;
#0 tmp_525_i_reg_3533_pp1_iter8_reg = 1'd0;
#0 etx_tofollow_load_4_reg_3537 = 32'd0;
#0 r_V_71_reg_3543 = 12'd0;
#0 nebits_reg_3549 = 32'd0;
#0 nebits_reg_3549_pp1_iter7_reg = 32'd0;
#0 p_0_1_0_i_cast_i_reg_3555 = 32'd0;
#0 tmp_335_reg_3562 = 1'd0;
#0 tmp_542_i_reg_3569 = 64'd0;
#0 tmp_302_i_reg_3574 = 12'd0;
#0 tmp_303_i_reg_3579 = 52'd0;
#0 left_7_cast_i_reg_3584 = 32'd0;
#0 overrun_13_reg_3589 = 32'd0;
#0 tmp_546_i_reg_3594 = 1'd0;
#0 tmp_339_reg_3600 = 1'd0;
#0 tmp_339_reg_3600_pp1_iter8_reg = 1'd0;
#0 etx_ba_m_cur_14_reg_3604 = 64'd0;
#0 tofollow_reg_3609 = 32'd0;
#0 bit_V_reg_3616 = 1'd0;
#0 nbits_assign_s_reg_3624 = 32'd0;
#0 tmp_493_i_reg_3630 = 64'd0;
#0 tmp_320_reg_3635 = 32'd0;
#0 left_5_cast_i_reg_3640 = 32'd0;
#0 overrun_11_reg_3645 = 32'd0;
#0 tmp_322_reg_3651 = 1'd0;
#0 tmp_50_reg_3655 = 1'd0;
#0 tmp_51_reg_3660 = 63'd0;
#0 tmp_498_i_reg_3665 = 1'd0;
#0 tmp_500_i_reg_3670 = 64'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_1026 = 10'd0;
#0 ap_phi_reg_pp0_iter1_p_030_0_i1_i_reg_1026 = 10'd0;
#0 BitStream64_m_idx_re_reg_1117 = 32'd0;
#0 BitStream64_m_cur_re_reg_1127 = 64'd0;
#0 etx_ha_m_cur_13_fu_324 = 64'd0;
#0 ovr_V_5_fu_332 = 13'd0;
#0 etx_tofollow_fu_336 = 32'd0;
#0 BitStream64_m_cur_re_7_fu_340 = 64'd0;
#0 BitStream64_m_idx_re_4_fu_344 = 32'd0;
#0 etx_ba_m_cur_12_fu_348 = 64'd0;
#0 etx_ba_m_idx_5_fu_352 = 32'd0;
end

APE_encode150_tabbFp #(
    .DataWidth( 10 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
table_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(table_i_address0),
    .ce0(table_i_ce0),
    .we0(table_i_we0),
    .d0(p_070_0_i_i_reg_1014),
    .q0(table_i_q0),
    .address1(table_i_address1),
    .ce1(table_i_ce1),
    .q1(table_i_q1)
);

DuneDataCompressibGp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
DuneDataCompressibGp_U625(
    .din0(syms_V_q0),
    .din1(syms_V47_q0),
    .din2(syms_V48_q0),
    .din3(syms_V49_q0),
    .din4(tmp_306_reg_2952),
    .dout(grp_fu_1189_p6)
);

DuneDataCompressibHp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 4 ),
    .din5_WIDTH( 4 ),
    .din6_WIDTH( 4 ),
    .din7_WIDTH( 4 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
DuneDataCompressibHp_U626(
    .din0(hist_m_nobits_V_q0),
    .din1(hist_m_nobits_V33_q0),
    .din2(hist_m_nobits_V34_q0),
    .din3(hist_m_nobits_V35_q0),
    .din4(hist_m_nobits_V36_q0),
    .din5(hist_m_nobits_V37_q0),
    .din6(hist_m_nobits_V38_q0),
    .din7(hist_m_nobits_V39_q0),
    .din8(tmp_307_reg_2962),
    .dout(grp_fu_1202_p10)
);

DuneDataCompressibIp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .din3_WIDTH( 10 ),
    .din4_WIDTH( 10 ),
    .din5_WIDTH( 10 ),
    .din6_WIDTH( 10 ),
    .din7_WIDTH( 10 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 10 ))
DuneDataCompressibIp_U627(
    .din0(hist_m_maxcnt_V_q0),
    .din1(hist_m_maxcnt_V26_q0),
    .din2(hist_m_maxcnt_V27_q0),
    .din3(hist_m_maxcnt_V28_q0),
    .din4(hist_m_maxcnt_V29_q0),
    .din5(hist_m_maxcnt_V30_q0),
    .din6(hist_m_maxcnt_V31_q0),
    .din7(hist_m_maxcnt_V32_q0),
    .din8(tmp_307_reg_2962),
    .dout(maxcnt_V_fu_1322_p10)
);

DuneDataCompressibJp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
DuneDataCompressibJp_U628(
    .din0(hist_m_omask_V_q0),
    .din1(hist_m_omask_V19_q0),
    .din2(hist_m_omask_V20_q0),
    .din3(hist_m_omask_V21_q0),
    .din4(hist_m_omask_V22_q0),
    .din5(hist_m_omask_V23_q0),
    .din6(hist_m_omask_V24_q0),
    .din7(hist_m_omask_V25_q0),
    .din8(tmp_307_reg_2962),
    .dout(p_Val2_69_fu_1441_p10)
);

DuneDataCompressibKp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 24 ))
DuneDataCompressibKp_U629(
    .din0(grp_fu_2925_p0),
    .din1(grp_fu_2925_p1),
    .din2(grp_fu_2925_p2),
    .dout(grp_fu_2925_p3)
);

DuneDataCompressibLp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 24 ))
DuneDataCompressibLp_U630(
    .din0(grp_fu_2934_p0),
    .din1(grp_fu_2934_p1),
    .din2(grp_fu_2934_p2),
    .dout(grp_fu_2934_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        BitStream64_m_cur_re_7_fu_340 <= 64'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter3_reg == 1'd0) & (tmp_329_reg_3461 == 1'd1) & (tmp_507_i_reg_3426_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
            BitStream64_m_cur_re_7_fu_340 <= etx_ha_m_cur_1_fu_2107_p3;
        end else if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_329_reg_3461 == 1'd0) & (exitcond_reg_3384_pp1_iter3_reg == 1'd0) & (tmp_507_i_reg_3426_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
            BitStream64_m_cur_re_7_fu_340 <= etx_ha_m_cur_15_fu_2055_p1;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            BitStream64_m_cur_re_7_fu_340 <= BitStream64_m_cur_re_reg_1127;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        BitStream64_m_cur_re_reg_1127 <= 64'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            if ((1'b1 == ap_condition_2221)) begin
                BitStream64_m_cur_re_reg_1127 <= etx_ha_m_cur_13_load_1_load_fu_1718_p1;
            end else if (((tmp_461_i_reg_3156_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
                BitStream64_m_cur_re_reg_1127 <= etx_ha_m_cur_13_fu_324;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        BitStream64_m_idx_re_4_fu_344 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter2_reg == 1'd0) & (tmp_507_i_reg_3426 == 1'd1) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
            BitStream64_m_idx_re_4_fu_344 <= etx_ha_m_idx_4_fu_1970_p2;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            BitStream64_m_idx_re_4_fu_344 <= BitStream64_m_idx_re_reg_1117;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        BitStream64_m_idx_re_reg_1117 <= 32'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            if ((1'b1 == ap_condition_2221)) begin
                BitStream64_m_idx_re_reg_1117 <= etx_ha_m_idx_reg_3287_pp0_iter4_reg;
            end else if (((tmp_461_i_reg_3156_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
                BitStream64_m_idx_re_reg_1117 <= etx_ha_m_idx_i_reg_1084;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_predicate_tran9to10_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_fu_1767_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter6_state17)) begin
                ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter5;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp1_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_phi_reg_pp0_iter1_p_030_0_i1_i_reg_1026 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_phi_reg_pp0_iter1_p_030_0_i1_i_reg_1026 <= ap_phi_reg_pp0_iter0_p_030_0_i1_i_reg_1026;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_1026 <= 10'd0;
    end else begin
        if ((1'b1 == ap_condition_869)) begin
            if ((1'b1 == ap_condition_961)) begin
                ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_1026 <= 10'd0;
            end else if ((1'b1 == 1'b1)) begin
                ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_1026 <= ap_phi_reg_pp0_iter1_p_030_0_i1_i_reg_1026;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        bit_V_reg_3616 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            bit_V_reg_3616 <= etx_cv_m_lo_V_reg_1156[32'd10];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        cur_V_reg_3393 <= 12'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            cur_V_reg_3393 <= grp_fu_1189_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        cur_bidx_8_reg_3527 <= 6'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
            cur_bidx_8_reg_3527 <= cur_bidx_8_fu_2337_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        cv_m_lo_V_4_reg_3481 <= 12'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter3_reg == 1'd0))) begin
            cv_m_lo_V_4_reg_3481 <= {{grp_fu_2934_p3[21:10]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        cv_m_lo_V_4_reg_3481_pp1_iter5_reg <= 12'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            cv_m_lo_V_4_reg_3481_pp1_iter5_reg <= cv_m_lo_V_4_reg_3481;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ba_m_cur_12_fu_348 <= 64'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_reg_3533_pp1_iter7_reg == 1'd0) & (tmp_339_reg_3600 == 1'd1) & (ap_enable_reg_pp1_iter8 == 1'b1))) begin
            etx_ba_m_cur_12_fu_348 <= etx_ba_m_cur_14_fu_2677_p2;
        end else if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_339_reg_3600 == 1'd0) & (tmp_525_i_reg_3533_pp1_iter7_reg == 1'd0) & (ap_enable_reg_pp1_iter8 == 1'b1))) begin
            etx_ba_m_cur_12_fu_348 <= buf_27_fu_2640_p3;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            etx_ba_m_cur_12_fu_348 <= 64'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ba_m_cur_14_reg_3604 <= 64'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_reg_3533_pp1_iter7_reg == 1'd0))) begin
            etx_ba_m_cur_14_reg_3604 <= etx_ba_m_cur_14_fu_2677_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ba_m_idx_5_fu_352 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_fu_2354_p2 == 1'd0) & (exitcond_reg_3384_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
            etx_ba_m_idx_5_fu_352 <= etx_ba_m_idx_fu_2450_p2;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            etx_ba_m_idx_5_fu_352 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ba_m_idx_5_load_reg_3521 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
            etx_ba_m_idx_5_load_reg_3521 <= etx_ba_m_idx_5_fu_352;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ba_m_idx_5_load_reg_3521_pp1_iter7_reg <= 32'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            etx_ba_m_idx_5_load_reg_3521_pp1_iter7_reg <= etx_ba_m_idx_5_load_reg_3521;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ba_m_idx_5_load_reg_3521_pp1_iter8_reg <= 32'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            etx_ba_m_idx_5_load_reg_3521_pp1_iter8_reg <= etx_ba_m_idx_5_load_reg_3521_pp1_iter7_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_cv_m_hi_V_reg_1168 <= 12'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            etx_cv_m_hi_V_reg_1168 <= 12'd4095;
        end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
            etx_cv_m_hi_V_reg_1168 <= cv_m_hi_V_fu_2328_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_cv_m_lo_V_reg_1156 <= 11'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            etx_cv_m_lo_V_reg_1156 <= 11'd0;
        end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
            etx_cv_m_lo_V_reg_1156 <= r_V_72_fu_2289_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ha_m_cur_13_fu_324 <= 64'd0;
    end else begin
        if (((tmp_311_reg_3283 == 1'd1) & (tmp_461_i_reg_3156_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            etx_ha_m_cur_13_fu_324 <= etx_ha_m_cur_fu_1681_p3;
        end else if (((tmp_311_reg_3283 == 1'd0) & (tmp_461_i_reg_3156_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            etx_ha_m_cur_13_fu_324 <= etx_ha_m_cur_14_fu_1629_p1;
        end else if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            etx_ha_m_cur_13_fu_324 <= 64'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ha_m_cur_1_reg_3487 <= 64'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter3_reg == 1'd0) & (tmp_507_i_reg_3426_pp1_iter3_reg == 1'd1))) begin
            etx_ha_m_cur_1_reg_3487 <= etx_ha_m_cur_1_fu_2107_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ha_m_cur_reg_3303 <= 64'd0;
    end else begin
        if (((tmp_461_i_reg_3156_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            etx_ha_m_cur_reg_3303 <= etx_ha_m_cur_fu_1681_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ha_m_idx_i_reg_1084 <= 32'd0;
    end else begin
        if (((tmp_312_reg_3165_pp0_iter3_reg == 1'd0) & (tmp_461_i_reg_3156_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            etx_ha_m_idx_i_reg_1084 <= etx_ha_m_idx_reg_3287;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            etx_ha_m_idx_i_reg_1084 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ha_m_idx_i_reg_1084_pp0_iter4_reg <= 32'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            etx_ha_m_idx_i_reg_1084_pp0_iter4_reg <= etx_ha_m_idx_i_reg_1084;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ha_m_idx_reg_3287 <= 32'd0;
    end else begin
        if (((tmp_461_i_reg_3156_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            etx_ha_m_idx_reg_3287 <= etx_ha_m_idx_fu_1577_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ha_m_idx_reg_3287_pp0_iter4_reg <= 32'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            etx_ha_m_idx_reg_3287_pp0_iter4_reg <= etx_ha_m_idx_reg_3287;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_tofollow_fu_336 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter5_reg == 1'd0) & (tmp_525_i_fu_2354_p2 == 1'd1) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
            etx_tofollow_fu_336 <= npending_fu_2474_p2;
        end else if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_fu_2354_p2 == 1'd0) & (exitcond_reg_3384_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
            etx_tofollow_fu_336 <= npending_4_fu_2456_p1;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            etx_tofollow_fu_336 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_tofollow_load_4_reg_3537 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
            etx_tofollow_load_4_reg_3537 <= etx_tofollow_fu_336;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        exitcond_reg_3384 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            exitcond_reg_3384 <= exitcond_fu_1767_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        exitcond_reg_3384_pp1_iter1_reg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            exitcond_reg_3384_pp1_iter1_reg <= exitcond_reg_3384;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        exitcond_reg_3384_pp1_iter2_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            exitcond_reg_3384_pp1_iter2_reg <= exitcond_reg_3384_pp1_iter1_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        exitcond_reg_3384_pp1_iter3_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            exitcond_reg_3384_pp1_iter3_reg <= exitcond_reg_3384_pp1_iter2_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        exitcond_reg_3384_pp1_iter4_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            exitcond_reg_3384_pp1_iter4_reg <= exitcond_reg_3384_pp1_iter3_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        exitcond_reg_3384_pp1_iter5_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            exitcond_reg_3384_pp1_iter5_reg <= exitcond_reg_3384_pp1_iter4_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V33_ad_reg_3020 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V33_ad_reg_3020 <= newIndex65_cast_i_fu_1274_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V34_ad_reg_3025 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V34_ad_reg_3025 <= newIndex65_cast_i_fu_1274_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V35_ad_reg_3030 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V35_ad_reg_3030 <= newIndex65_cast_i_fu_1274_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V36_ad_reg_3035 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V36_ad_reg_3035 <= newIndex65_cast_i_fu_1274_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V37_ad_reg_3040 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V37_ad_reg_3040 <= newIndex65_cast_i_fu_1274_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V38_ad_reg_3045 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V38_ad_reg_3045 <= newIndex65_cast_i_fu_1274_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V39_ad_reg_3050 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V39_ad_reg_3050 <= newIndex65_cast_i_fu_1274_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V_addr_reg_3015 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V_addr_reg_3015 <= newIndex65_cast_i_fu_1274_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V19_add_reg_3060 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V19_add_reg_3060 <= newIndex65_cast_i_fu_1274_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V20_add_reg_3065 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V20_add_reg_3065 <= newIndex65_cast_i_fu_1274_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V21_add_reg_3070 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V21_add_reg_3070 <= newIndex65_cast_i_fu_1274_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V22_add_reg_3075 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V22_add_reg_3075 <= newIndex65_cast_i_fu_1274_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V23_add_reg_3080 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V23_add_reg_3080 <= newIndex65_cast_i_fu_1274_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V24_add_reg_3085 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V24_add_reg_3085 <= newIndex65_cast_i_fu_1274_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V25_add_reg_3090 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V25_add_reg_3090 <= newIndex65_cast_i_fu_1274_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V_addr_reg_3055 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V_addr_reg_3055 <= newIndex65_cast_i_fu_1274_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        i_assign_reg_1002 <= 6'd0;
    end else begin
        if (((tmp_312_reg_3165 == 1'd0) & (tmp_461_i_reg_3156 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            i_assign_reg_1002 <= ibin_reg_3160;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            i_assign_reg_1002 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        i_assign_reg_1002_pp0_iter1_reg <= 6'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            i_assign_reg_1002_pp0_iter1_reg <= i_assign_reg_1002;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ibin_reg_3160 <= 6'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ibin_reg_3160 <= ibin_fu_1423_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        left_12_reg_3445 <= 7'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter2_reg == 1'd0) & (tmp_507_i_reg_3426 == 1'd1))) begin
            left_12_reg_3445 <= left_12_fu_1928_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                left_5_cast_i_reg_3640[0] <= 1'b0;
        left_5_cast_i_reg_3640[1] <= 1'b0;
        left_5_cast_i_reg_3640[2] <= 1'b0;
        left_5_cast_i_reg_3640[3] <= 1'b0;
        left_5_cast_i_reg_3640[4] <= 1'b0;
        left_5_cast_i_reg_3640[5] <= 1'b0;
        left_5_cast_i_reg_3640[6] <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
                        left_5_cast_i_reg_3640[6 : 0] <= left_5_cast_i_fu_2741_p1[6 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                left_7_cast_i_reg_3584[0] <= 1'b0;
        left_7_cast_i_reg_3584[1] <= 1'b0;
        left_7_cast_i_reg_3584[2] <= 1'b0;
        left_7_cast_i_reg_3584[3] <= 1'b0;
        left_7_cast_i_reg_3584[4] <= 1'b0;
        left_7_cast_i_reg_3584[5] <= 1'b0;
        left_7_cast_i_reg_3584[6] <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_reg_3533 == 1'd0))) begin
                        left_7_cast_i_reg_3584[6 : 0] <= left_7_cast_i_fu_2617_p1[6 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        left_V_reg_3257 <= 10'd0;
    end else begin
        if (((tmp_461_i_reg_3156_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            left_V_reg_3257 <= left_V_fu_1522_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                left_cast_i_reg_3267[0] <= 1'b0;
        left_cast_i_reg_3267[1] <= 1'b0;
        left_cast_i_reg_3267[2] <= 1'b0;
        left_cast_i_reg_3267[3] <= 1'b0;
        left_cast_i_reg_3267[4] <= 1'b0;
        left_cast_i_reg_3267[5] <= 1'b0;
        left_cast_i_reg_3267[6] <= 1'b0;
    end else begin
        if (((tmp_461_i_reg_3156_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
                        left_cast_i_reg_3267[6 : 0] <= left_cast_i_fu_1553_p1[6 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        nbits_8_reg_3145 <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            nbits_8_reg_3145 <= nbits_8_fu_1391_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                nbits_assign_3_cast_s_reg_3440[0] <= 1'b0;
        nbits_assign_3_cast_s_reg_3440[1] <= 1'b0;
        nbits_assign_3_cast_s_reg_3440[2] <= 1'b0;
        nbits_assign_3_cast_s_reg_3440[3] <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter2_reg == 1'd0) & (tmp_507_i_reg_3426 == 1'd1))) begin
                        nbits_assign_3_cast_s_reg_3440[3 : 0] <= nbits_assign_3_cast_s_fu_1920_p1[3 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        nbits_assign_reg_1096 <= 32'd0;
    end else begin
        if (((tmp_312_reg_3165_pp0_iter3_reg == 1'd0) & (tmp_461_i_reg_3156_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            nbits_assign_reg_1096 <= p_mbits_0_i_i_reg_3293;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            nbits_assign_reg_1096 <= 32'd32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        nbits_assign_s_reg_3624 <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            nbits_assign_s_reg_3624 <= nbits_assign_s_fu_2712_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        nebits_reg_3549 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_fu_2354_p2 == 1'd0) & (exitcond_reg_3384_pp1_iter5_reg == 1'd0))) begin
            nebits_reg_3549 <= nebits_fu_2410_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        nebits_reg_3549_pp1_iter7_reg <= 32'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            nebits_reg_3549_pp1_iter7_reg <= nebits_reg_3549;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        nreduce_V_reg_3506 <= 4'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter4_reg == 1'd0))) begin
            nreduce_V_reg_3506 <= nreduce_V_fu_2277_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        nsame_V_reg_3498 <= 4'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter4_reg == 1'd0))) begin
            nsame_V_reg_3498 <= nsame_V_fu_2178_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        overrun_11_reg_3645 <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            overrun_11_reg_3645 <= overrun_11_fu_2745_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        overrun_12_reg_3450 <= 7'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter2_reg == 1'd0) & (tmp_507_i_reg_3426 == 1'd1))) begin
            overrun_12_reg_3450 <= overrun_12_fu_1934_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        overrun_13_reg_3589 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_reg_3533 == 1'd0))) begin
            overrun_13_reg_3589 <= overrun_13_fu_2621_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        overrun_reg_3272 <= 32'd0;
    end else begin
        if (((tmp_461_i_reg_3156_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            overrun_reg_3272 <= overrun_fu_1557_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ovr_V_4_reg_3409 <= 13'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter1_reg == 1'd0))) begin
            ovr_V_4_reg_3409 <= ovr_V_4_fu_1865_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ovr_V_4_reg_3409_pp1_iter3_reg <= 13'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            ovr_V_4_reg_3409_pp1_iter3_reg <= ovr_V_4_reg_3409;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ovr_V_5_fu_332 <= 13'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
            ovr_V_5_fu_332 <= ovr_V_4_fu_1865_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_0100_0_i_i_reg_1108 <= 32'd0;
    end else begin
        if (((tmp_312_reg_3165_pp0_iter3_reg == 1'd0) & (tmp_461_i_reg_3156_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            p_0100_0_i_i_reg_1108 <= bits_V_7_fu_1699_p1;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            p_0100_0_i_i_reg_1108 <= bits_V_fu_1411_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_030_0_i1_i_reg_1026 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            if ((1'b1 == ap_condition_954)) begin
                p_030_0_i1_i_reg_1026 <= hist_m_bins_V468_q0;
            end else if ((1'b1 == ap_condition_951)) begin
                p_030_0_i1_i_reg_1026 <= hist_m_bins_V46_q0;
            end else if ((1'b1 == ap_condition_945)) begin
                p_030_0_i1_i_reg_1026 <= hist_m_bins_V457_q0;
            end else if ((1'b1 == ap_condition_942)) begin
                p_030_0_i1_i_reg_1026 <= hist_m_bins_V45_q0;
            end else if ((1'b1 == ap_condition_936)) begin
                p_030_0_i1_i_reg_1026 <= hist_m_bins_V446_q0;
            end else if ((1'b1 == ap_condition_933)) begin
                p_030_0_i1_i_reg_1026 <= hist_m_bins_V44_q0;
            end else if ((1'b1 == ap_condition_927)) begin
                p_030_0_i1_i_reg_1026 <= hist_m_bins_V435_q0;
            end else if ((1'b1 == ap_condition_924)) begin
                p_030_0_i1_i_reg_1026 <= hist_m_bins_V43_q0;
            end else if ((1'b1 == ap_condition_918)) begin
                p_030_0_i1_i_reg_1026 <= hist_m_bins_V424_q0;
            end else if ((1'b1 == ap_condition_915)) begin
                p_030_0_i1_i_reg_1026 <= hist_m_bins_V42_q0;
            end else if ((1'b1 == ap_condition_909)) begin
                p_030_0_i1_i_reg_1026 <= hist_m_bins_V413_q0;
            end else if ((1'b1 == ap_condition_906)) begin
                p_030_0_i1_i_reg_1026 <= hist_m_bins_V41_q0;
            end else if ((1'b1 == ap_condition_900)) begin
                p_030_0_i1_i_reg_1026 <= hist_m_bins_V402_q0;
            end else if ((1'b1 == ap_condition_897)) begin
                p_030_0_i1_i_reg_1026 <= hist_m_bins_V40_q0;
            end else if ((1'b1 == ap_condition_891)) begin
                p_030_0_i1_i_reg_1026 <= hist_m_bins_V1_q0;
            end else if ((1'b1 == ap_condition_886)) begin
                p_030_0_i1_i_reg_1026 <= hist_m_bins_V_q0;
            end else if ((1'b1 == 1'b1)) begin
                p_030_0_i1_i_reg_1026 <= ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_1026;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_030_0_i1_i_reg_1026_pp0_iter3_reg <= 10'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            p_030_0_i1_i_reg_1026_pp0_iter3_reg <= p_030_0_i1_i_reg_1026;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_070_0_i_i_reg_1014 <= 10'd0;
    end else begin
        if (((tmp_312_reg_3165_pp0_iter1_reg == 1'd0) & (tmp_461_i_reg_3156_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            p_070_0_i_i_reg_1014 <= total_V_fu_1533_p2;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            p_070_0_i_i_reg_1014 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_0_1_0_i_cast_i_reg_3555 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_fu_2354_p2 == 1'd0) & (exitcond_reg_3384_pp1_iter5_reg == 1'd0))) begin
            p_0_1_0_i_cast_i_reg_3555 <= p_0_1_0_i_cast_i_fu_2422_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_Result_104_reg_3120 <= 10'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            p_Result_104_reg_3120 <= p_Result_104_fu_1343_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_i_reg_1147 <= 12'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            p_i_reg_1147 <= prv_V_reg_3140;
        end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
            p_i_reg_1147 <= cur_V_reg_3393;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_mbits_0_i_i_reg_3293 <= 32'd0;
    end else begin
        if (((tmp_312_reg_3165_pp0_iter2_reg == 1'd0) & (tmp_461_i_reg_3156_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            p_mbits_0_i_i_reg_3293 <= p_mbits_0_i_i_fu_1619_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                p_shl_cast_reg_3130[4] <= 1'b0;
        p_shl_cast_reg_3130[5] <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
                        p_shl_cast_reg_3130[5 : 4] <= p_shl_cast_fu_1366_p1[5 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        prv_V_reg_3140 <= 12'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            prv_V_reg_3140 <= grp_fu_1189_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        r_V_58_reg_3470 <= 24'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
            r_V_58_reg_3470 <= grp_fu_2925_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        r_V_60_reg_3476 <= 24'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
            r_V_60_reg_3476 <= grp_fu_2934_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        r_V_68_reg_3492 <= 12'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter3_reg == 1'd0))) begin
            r_V_68_reg_3492 <= r_V_68_fu_2125_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        r_V_71_reg_3543 <= 12'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_fu_2354_p2 == 1'd0) & (exitcond_reg_3384_pp1_iter5_reg == 1'd0))) begin
            r_V_71_reg_3543 <= r_V_71_fu_2402_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        r_V_i_reg_3398 <= 12'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            r_V_i_reg_3398 <= r_V_i_fu_1779_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        syms_pn_rec_i_reg_1136 <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            syms_pn_rec_i_reg_1136 <= 64'd1;
        end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_fu_1767_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            syms_pn_rec_i_reg_1136 <= phitmp2_i_fu_1773_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        table_i_load_4_reg_3435 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
            table_i_load_4_reg_3435 <= table_i_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        table_i_load_reg_3430 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
            table_i_load_reg_3430 <= table_i_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                tmp_111_reg_3095[10] <= 1'b0;
        tmp_111_reg_3095[11] <= 1'b0;
        tmp_111_reg_3095[12] <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
                        tmp_111_reg_3095[12 : 10] <= tmp_111_fu_1307_p3[12 : 10];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_113_reg_2969 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            tmp_113_reg_2969 <= {{hist_m_omask_V_offset_dout[4:3]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_115_reg_3135 <= 7'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            tmp_115_reg_3135 <= tmp_115_fu_1370_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                tmp_146_cast_reg_3125[10] <= 1'b0;
        tmp_146_cast_reg_3125[11] <= 1'b0;
        tmp_146_cast_reg_3125[12] <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
                        tmp_146_cast_reg_3125[12 : 10] <= tmp_146_cast_fu_1353_p1[12 : 10];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_302_i_reg_3574 <= 12'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_reg_3533 == 1'd0))) begin
            tmp_302_i_reg_3574 <= tmp_302_i_fu_2592_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_303_i_reg_3579 <= 52'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_reg_3533 == 1'd0))) begin
            tmp_303_i_reg_3579 <= {{buf_1_i_i_fu_2580_p3[63:12]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_306_reg_2952 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            tmp_306_reg_2952 <= tmp_306_fu_1246_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_307_reg_2962 <= 3'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            tmp_307_reg_2962 <= tmp_307_fu_1260_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_311_reg_3283 <= 1'd0;
    end else begin
        if (((tmp_461_i_reg_3156_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp_311_reg_3283 <= overrun_fu_1557_p2[32'd31];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_311_reg_3283_pp0_iter4_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_311_reg_3283_pp0_iter4_reg <= tmp_311_reg_3283;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_312_reg_3165 <= 1'd0;
    end else begin
        if (((tmp_461_i_fu_1417_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_312_reg_3165 <= ap_phi_mux_i_assign_phi_fu_1006_p4[32'd5];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_312_reg_3165_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_312_reg_3165_pp0_iter1_reg <= tmp_312_reg_3165;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_312_reg_3165_pp0_iter2_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_312_reg_3165_pp0_iter2_reg <= tmp_312_reg_3165_pp0_iter1_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_312_reg_3165_pp0_iter3_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_312_reg_3165_pp0_iter3_reg <= tmp_312_reg_3165_pp0_iter2_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_312_reg_3165_pp0_iter4_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_312_reg_3165_pp0_iter4_reg <= tmp_312_reg_3165_pp0_iter3_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_313_reg_3169 <= 1'd0;
    end else begin
        if (((tmp_312_reg_3165 == 1'd0) & (tmp_461_i_reg_3156 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_313_reg_3169 <= tmp_313_fu_1462_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_317_reg_3173 <= 1'd0;
    end else begin
        if (((tmp_313_fu_1462_p3 == 1'd1) & (tmp_312_reg_3165 == 1'd0) & (tmp_461_i_reg_3156 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_317_reg_3173 <= tmp_317_fu_1470_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_320_reg_3635 <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            tmp_320_reg_3635 <= tmp_320_fu_2728_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_322_reg_3651 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            tmp_322_reg_3651 <= overrun_11_fu_2745_p2[32'd31];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_329_reg_3461 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter2_reg == 1'd0) & (tmp_507_i_reg_3426 == 1'd1))) begin
            tmp_329_reg_3461 <= overrun_12_fu_1934_p2[32'd6];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_329_reg_3461_pp1_iter4_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            tmp_329_reg_3461_pp1_iter4_reg <= tmp_329_reg_3461;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_335_reg_3562 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_fu_2354_p2 == 1'd0) & (exitcond_reg_3384_pp1_iter5_reg == 1'd0))) begin
            tmp_335_reg_3562 <= tmp_335_fu_2426_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_339_reg_3600 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_reg_3533 == 1'd0))) begin
            tmp_339_reg_3600 <= overrun_13_fu_2621_p2[32'd31];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_339_reg_3600_pp1_iter8_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            tmp_339_reg_3600_pp1_iter8_reg <= tmp_339_reg_3600;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_461_i_reg_3156 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_461_i_reg_3156 <= tmp_461_i_fu_1417_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_461_i_reg_3156_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_461_i_reg_3156_pp0_iter1_reg <= tmp_461_i_reg_3156;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_461_i_reg_3156_pp0_iter2_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_461_i_reg_3156_pp0_iter2_reg <= tmp_461_i_reg_3156_pp0_iter1_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_461_i_reg_3156_pp0_iter3_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_461_i_reg_3156_pp0_iter3_reg <= tmp_461_i_reg_3156_pp0_iter2_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_461_i_reg_3156_pp0_iter4_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_461_i_reg_3156_pp0_iter4_reg <= tmp_461_i_reg_3156_pp0_iter3_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_463_i_reg_3277 <= 1'd0;
    end else begin
        if (((tmp_461_i_reg_3156_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp_463_i_reg_3277 <= tmp_463_i_fu_1563_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                tmp_485_i_reg_3404[1] <= 1'b0;
        tmp_485_i_reg_3404[2] <= 1'b0;
        tmp_485_i_reg_3404[3] <= 1'b0;
        tmp_485_i_reg_3404[4] <= 1'b0;
        tmp_485_i_reg_3404[5] <= 1'b0;
        tmp_485_i_reg_3404[6] <= 1'b0;
        tmp_485_i_reg_3404[7] <= 1'b0;
        tmp_485_i_reg_3404[8] <= 1'b0;
        tmp_485_i_reg_3404[9] <= 1'b0;
        tmp_485_i_reg_3404[10] <= 1'b0;
        tmp_485_i_reg_3404[11] <= 1'b0;
        tmp_485_i_reg_3404[12] <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
                        tmp_485_i_reg_3404[12 : 1] <= tmp_485_i_fu_1799_p2[12 : 1];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_493_i_reg_3630 <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            tmp_493_i_reg_3630 <= tmp_493_i_fu_2722_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_498_i_reg_3665 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            tmp_498_i_reg_3665 <= tmp_498_i_fu_2864_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_500_i_reg_3670 <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            tmp_500_i_reg_3670 <= tmp_500_i_fu_2879_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_507_i_reg_3426 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter1_reg == 1'd0))) begin
            tmp_507_i_reg_3426 <= tmp_507_i_fu_1901_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_507_i_reg_3426_pp1_iter3_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            tmp_507_i_reg_3426_pp1_iter3_reg <= tmp_507_i_reg_3426;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_507_i_reg_3426_pp1_iter4_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            tmp_507_i_reg_3426_pp1_iter4_reg <= tmp_507_i_reg_3426_pp1_iter3_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_50_reg_3655 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            tmp_50_reg_3655 <= tmp_50_fu_2848_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_513_i_reg_3455 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter2_reg == 1'd0) & (tmp_507_i_reg_3426 == 1'd1))) begin
            tmp_513_i_reg_3455 <= tmp_513_i_fu_1940_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_51_reg_3660 <= 63'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            tmp_51_reg_3660 <= {{buf_1_i_i_i_fu_2836_p3[63:1]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_525_i_reg_3533 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3384_pp1_iter5_reg == 1'd0))) begin
            tmp_525_i_reg_3533 <= tmp_525_i_fu_2354_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_525_i_reg_3533_pp1_iter7_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            tmp_525_i_reg_3533_pp1_iter7_reg <= tmp_525_i_reg_3533;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_525_i_reg_3533_pp1_iter8_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            tmp_525_i_reg_3533_pp1_iter8_reg <= tmp_525_i_reg_3533_pp1_iter7_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_542_i_reg_3569 <= 64'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_fu_2354_p2 == 1'd0) & (exitcond_reg_3384_pp1_iter5_reg == 1'd0))) begin
            tmp_542_i_reg_3569 <= tmp_542_i_fu_2444_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_546_i_reg_3594 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_reg_3533 == 1'd0))) begin
            tmp_546_i_reg_3594 <= tmp_546_i_fu_2626_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_s_reg_2957 <= 3'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            tmp_s_reg_2957 <= {{hist_m_omask_V_offset_dout[4:2]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tofollow_reg_3609 <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            tofollow_reg_3609 <= tofollow_fu_2698_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        wrdIdx_1_reg_3465 <= 26'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_329_fu_1946_p3 == 1'd0) & (exitcond_reg_3384_pp1_iter2_reg == 1'd0) & (tmp_507_i_reg_3426 == 1'd1))) begin
            wrdIdx_1_reg_3465 <= {{BitStream64_m_idx_re_4_fu_344[31:6]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        wrdIdx_1_reg_3465_pp1_iter4_reg <= 26'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            wrdIdx_1_reg_3465_pp1_iter4_reg <= wrdIdx_1_reg_3465;
        end
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter6 == 1'b1) & (ap_enable_reg_pp1_iter5 == 1'b0))) begin
        ap_condition_pp1_exit_iter6_state17 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter6_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((tmp_322_reg_3651 == 1'd1)) begin
            ap_phi_mux_BitStream64_m_cur_re_8_phi_fu_1182_p4 = etx_ba_m_cur_fu_2908_p2;
        end else if ((tmp_322_reg_3651 == 1'd0)) begin
            ap_phi_mux_BitStream64_m_cur_re_8_phi_fu_1182_p4 = buf_28_fu_2885_p3;
        end else begin
            ap_phi_mux_BitStream64_m_cur_re_8_phi_fu_1182_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_BitStream64_m_cur_re_8_phi_fu_1182_p4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_reg_3384_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        ap_phi_mux_etx_cv_m_hi_V_phi_fu_1172_p4 = cv_m_hi_V_fu_2328_p2;
    end else begin
        ap_phi_mux_etx_cv_m_hi_V_phi_fu_1172_p4 = etx_cv_m_hi_V_reg_1168;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_reg_3384_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        ap_phi_mux_etx_cv_m_lo_V_phi_fu_1160_p4 = r_V_72_fu_2289_p2;
    end else begin
        ap_phi_mux_etx_cv_m_lo_V_phi_fu_1160_p4 = etx_cv_m_lo_V_reg_1156;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (tmp_312_reg_3165_pp0_iter3_reg == 1'd0) & (tmp_461_i_reg_3156_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_phi_mux_etx_ha_m_idx_i_phi_fu_1088_p4 = etx_ha_m_idx_reg_3287;
    end else begin
        ap_phi_mux_etx_ha_m_idx_i_phi_fu_1088_p4 = etx_ha_m_idx_i_reg_1084;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (tmp_312_reg_3165 == 1'd0) & (tmp_461_i_reg_3156 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_assign_phi_fu_1006_p4 = ibin_reg_3160;
    end else begin
        ap_phi_mux_i_assign_phi_fu_1006_p4 = i_assign_reg_1002;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (tmp_312_reg_3165_pp0_iter3_reg == 1'd0) & (tmp_461_i_reg_3156_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_phi_mux_nbits_assign_phi_fu_1100_p4 = p_mbits_0_i_i_reg_3293;
    end else begin
        ap_phi_mux_nbits_assign_phi_fu_1100_p4 = nbits_assign_reg_1096;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2227)) begin
        if (((tmp_317_reg_3173 == 1'd1) & (tmp_307_reg_2962 == 3'd7))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1030_p34 = hist_m_bins_V468_q0;
        end else if (((tmp_317_reg_3173 == 1'd0) & (tmp_307_reg_2962 == 3'd7))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1030_p34 = hist_m_bins_V46_q0;
        end else if (((tmp_317_reg_3173 == 1'd1) & (tmp_307_reg_2962 == 3'd6))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1030_p34 = hist_m_bins_V457_q0;
        end else if (((tmp_317_reg_3173 == 1'd0) & (tmp_307_reg_2962 == 3'd6))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1030_p34 = hist_m_bins_V45_q0;
        end else if (((tmp_317_reg_3173 == 1'd1) & (tmp_307_reg_2962 == 3'd5))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1030_p34 = hist_m_bins_V446_q0;
        end else if (((tmp_317_reg_3173 == 1'd0) & (tmp_307_reg_2962 == 3'd5))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1030_p34 = hist_m_bins_V44_q0;
        end else if (((tmp_317_reg_3173 == 1'd1) & (tmp_307_reg_2962 == 3'd4))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1030_p34 = hist_m_bins_V435_q0;
        end else if (((tmp_317_reg_3173 == 1'd0) & (tmp_307_reg_2962 == 3'd4))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1030_p34 = hist_m_bins_V43_q0;
        end else if (((tmp_317_reg_3173 == 1'd1) & (tmp_307_reg_2962 == 3'd3))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1030_p34 = hist_m_bins_V424_q0;
        end else if (((tmp_317_reg_3173 == 1'd0) & (tmp_307_reg_2962 == 3'd3))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1030_p34 = hist_m_bins_V42_q0;
        end else if (((tmp_317_reg_3173 == 1'd1) & (tmp_307_reg_2962 == 3'd2))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1030_p34 = hist_m_bins_V413_q0;
        end else if (((tmp_317_reg_3173 == 1'd0) & (tmp_307_reg_2962 == 3'd2))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1030_p34 = hist_m_bins_V41_q0;
        end else if (((tmp_317_reg_3173 == 1'd1) & (tmp_307_reg_2962 == 3'd1))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1030_p34 = hist_m_bins_V402_q0;
        end else if (((tmp_317_reg_3173 == 1'd0) & (tmp_307_reg_2962 == 3'd1))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1030_p34 = hist_m_bins_V40_q0;
        end else if (((tmp_317_reg_3173 == 1'd1) & (tmp_307_reg_2962 == 3'd0))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1030_p34 = hist_m_bins_V1_q0;
        end else if (((tmp_317_reg_3173 == 1'd0) & (tmp_307_reg_2962 == 3'd0))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1030_p34 = hist_m_bins_V_q0;
        end else begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1030_p34 = ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_1026;
        end
    end else begin
        ap_phi_mux_p_030_0_i1_i_phi_fu_1030_p34 = ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_1026;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_reg_3384_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_mux_p_i_phi_fu_1150_p4 = cur_V_reg_3393;
    end else begin
        ap_phi_mux_p_i_phi_fu_1150_p4 = p_i_reg_1147;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        etxOut_ba_m_buf_address0 = tmp_i1017_i_fu_2915_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter9 == 1'b1))) begin
        etxOut_ba_m_buf_address0 = tmp_i515_i_fu_2693_p1;
    end else begin
        etxOut_ba_m_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter9 == 1'b1)))) begin
        etxOut_ba_m_buf_ce0 = 1'b1;
    end else begin
        etxOut_ba_m_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        etxOut_ba_m_buf_d0 = etx_ba_m_cur_fu_2908_p2;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter9 == 1'b1))) begin
        etxOut_ba_m_buf_d0 = etx_ba_m_cur_14_reg_3604;
    end else begin
        etxOut_ba_m_buf_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (tmp_339_reg_3600_pp1_iter8_reg == 1'd0) & (tmp_525_i_reg_3533_pp1_iter8_reg == 1'd0) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((tmp_322_reg_3651 == 1'd0) & (1'b1 == ap_CS_fsm_state23)))) begin
        etxOut_ba_m_buf_we0 = 1'b1;
    end else begin
        etxOut_ba_m_buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        etxOut_ba_m_ccur_ap_vld = 1'b1;
    end else begin
        etxOut_ba_m_ccur_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        etxOut_ba_m_cidx_ap_vld = 1'b1;
    end else begin
        etxOut_ba_m_cidx_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        etxOut_ha_m_buf_address0 = tmp_i316_i_fu_2149_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        etxOut_ha_m_buf_address0 = tmp_i18_i_fu_1713_p1;
    end else begin
        etxOut_ha_m_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
        etxOut_ha_m_buf_ce0 = 1'b1;
    end else begin
        etxOut_ha_m_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        etxOut_ha_m_buf_d0 = etx_ha_m_cur_1_reg_3487;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        etxOut_ha_m_buf_d0 = etx_ha_m_cur_reg_3303;
    end else begin
        etxOut_ha_m_buf_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (tmp_329_reg_3461_pp1_iter4_reg == 1'd0) & (exitcond_reg_3384_pp1_iter4_reg == 1'd0) & (tmp_507_i_reg_3426_pp1_iter4_reg == 1'd1) & (ap_enable_reg_pp1_iter5 == 1'b1)) | ((tmp_311_reg_3283_pp0_iter4_reg == 1'd0) & (tmp_461_i_reg_3156_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
        etxOut_ha_m_buf_we0 = 1'b1;
    end else begin
        etxOut_ha_m_buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        etxOut_ha_m_ccur_ap_vld = 1'b1;
    end else begin
        etxOut_ha_m_ccur_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        etxOut_ha_m_cidx_ap_vld = 1'b1;
    end else begin
        etxOut_ha_m_cidx_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_1237_p1 = etx_ba_m_idx_5_load_reg_3521;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter9 == 1'b1))) begin
        grp_fu_1237_p1 = etx_ba_m_idx_5_load_reg_3521_pp1_iter8_reg;
    end else begin
        grp_fu_1237_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V1_ce0 = 1'b1;
    end else begin
        hist_m_bins_V1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V402_ce0 = 1'b1;
    end else begin
        hist_m_bins_V402_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V40_ce0 = 1'b1;
    end else begin
        hist_m_bins_V40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V413_ce0 = 1'b1;
    end else begin
        hist_m_bins_V413_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V41_ce0 = 1'b1;
    end else begin
        hist_m_bins_V41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V424_ce0 = 1'b1;
    end else begin
        hist_m_bins_V424_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V42_ce0 = 1'b1;
    end else begin
        hist_m_bins_V42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V435_ce0 = 1'b1;
    end else begin
        hist_m_bins_V435_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V43_ce0 = 1'b1;
    end else begin
        hist_m_bins_V43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V446_ce0 = 1'b1;
    end else begin
        hist_m_bins_V446_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V44_ce0 = 1'b1;
    end else begin
        hist_m_bins_V44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V457_ce0 = 1'b1;
    end else begin
        hist_m_bins_V457_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V45_ce0 = 1'b1;
    end else begin
        hist_m_bins_V45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V468_ce0 = 1'b1;
    end else begin
        hist_m_bins_V468_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V46_ce0 = 1'b1;
    end else begin
        hist_m_bins_V46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V_ce0 = 1'b1;
    end else begin
        hist_m_bins_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V26_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V27_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V28_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V29_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V30_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V31_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V32_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V33_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V34_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V35_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V36_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V37_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V38_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V39_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V19_ce0 = 1'b1;
    end else begin
        hist_m_omask_V19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V20_ce0 = 1'b1;
    end else begin
        hist_m_omask_V20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V21_ce0 = 1'b1;
    end else begin
        hist_m_omask_V21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V22_ce0 = 1'b1;
    end else begin
        hist_m_omask_V22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V23_ce0 = 1'b1;
    end else begin
        hist_m_omask_V23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V24_ce0 = 1'b1;
    end else begin
        hist_m_omask_V24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V25_ce0 = 1'b1;
    end else begin
        hist_m_omask_V25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V_ce0 = 1'b1;
    end else begin
        hist_m_omask_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_omask_V_offset_blk_n = hist_m_omask_V_offset_empty_n;
    end else begin
        hist_m_omask_V_offset_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_omask_V_offset_read = 1'b1;
    end else begin
        hist_m_omask_V_offset_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        syms_V47_address0 = tmp_154_cast_fu_1755_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        syms_V47_address0 = tmp_112_fu_1314_p1;
    end else begin
        syms_V47_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        syms_V47_ce0 = 1'b1;
    end else begin
        syms_V47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        syms_V48_address0 = tmp_154_cast_fu_1755_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        syms_V48_address0 = tmp_112_fu_1314_p1;
    end else begin
        syms_V48_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        syms_V48_ce0 = 1'b1;
    end else begin
        syms_V48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        syms_V49_address0 = tmp_154_cast_fu_1755_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        syms_V49_address0 = tmp_112_fu_1314_p1;
    end else begin
        syms_V49_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        syms_V49_ce0 = 1'b1;
    end else begin
        syms_V49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        syms_V_address0 = tmp_154_cast_fu_1755_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        syms_V_address0 = tmp_112_fu_1314_p1;
    end else begin
        syms_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        syms_V_ce0 = 1'b1;
    end else begin
        syms_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        table_i_address0 = tmp_501_i_fu_1881_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        table_i_address0 = tmp_462_i_fu_1528_p1;
    end else begin
        table_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        table_i_ce0 = 1'b1;
    end else begin
        table_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        table_i_ce1 = 1'b1;
    end else begin
        table_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_461_i_reg_3156_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        table_i_we0 = 1'b1;
    end else begin
        table_i_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter7 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b1)) & ~((ap_enable_reg_pp1_iter8 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter9 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter8 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((ap_enable_reg_pp1_iter7 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state11_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_2221 = ((tmp_312_reg_3165_pp0_iter4_reg == 1'd1) & (tmp_461_i_reg_3156_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1));
end

always @ (*) begin
    ap_condition_2227 = ((1'b0 == ap_block_pp0_stage0) & (tmp_312_reg_3165_pp0_iter1_reg == 1'd0) & (tmp_313_reg_3169 == 1'd1) & (tmp_461_i_reg_3156_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_869 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_886 = ((tmp_317_reg_3173 == 1'd0) & (tmp_312_reg_3165_pp0_iter1_reg == 1'd0) & (tmp_313_reg_3169 == 1'd1) & (tmp_461_i_reg_3156_pp0_iter1_reg == 1'd1) & (tmp_307_reg_2962 == 3'd0));
end

always @ (*) begin
    ap_condition_891 = ((tmp_312_reg_3165_pp0_iter1_reg == 1'd0) & (tmp_317_reg_3173 == 1'd1) & (tmp_313_reg_3169 == 1'd1) & (tmp_461_i_reg_3156_pp0_iter1_reg == 1'd1) & (tmp_307_reg_2962 == 3'd0));
end

always @ (*) begin
    ap_condition_897 = ((tmp_317_reg_3173 == 1'd0) & (tmp_312_reg_3165_pp0_iter1_reg == 1'd0) & (tmp_313_reg_3169 == 1'd1) & (tmp_461_i_reg_3156_pp0_iter1_reg == 1'd1) & (tmp_307_reg_2962 == 3'd1));
end

always @ (*) begin
    ap_condition_900 = ((tmp_312_reg_3165_pp0_iter1_reg == 1'd0) & (tmp_317_reg_3173 == 1'd1) & (tmp_313_reg_3169 == 1'd1) & (tmp_461_i_reg_3156_pp0_iter1_reg == 1'd1) & (tmp_307_reg_2962 == 3'd1));
end

always @ (*) begin
    ap_condition_906 = ((tmp_317_reg_3173 == 1'd0) & (tmp_312_reg_3165_pp0_iter1_reg == 1'd0) & (tmp_313_reg_3169 == 1'd1) & (tmp_461_i_reg_3156_pp0_iter1_reg == 1'd1) & (tmp_307_reg_2962 == 3'd2));
end

always @ (*) begin
    ap_condition_909 = ((tmp_312_reg_3165_pp0_iter1_reg == 1'd0) & (tmp_317_reg_3173 == 1'd1) & (tmp_313_reg_3169 == 1'd1) & (tmp_461_i_reg_3156_pp0_iter1_reg == 1'd1) & (tmp_307_reg_2962 == 3'd2));
end

always @ (*) begin
    ap_condition_915 = ((tmp_317_reg_3173 == 1'd0) & (tmp_312_reg_3165_pp0_iter1_reg == 1'd0) & (tmp_313_reg_3169 == 1'd1) & (tmp_461_i_reg_3156_pp0_iter1_reg == 1'd1) & (tmp_307_reg_2962 == 3'd3));
end

always @ (*) begin
    ap_condition_918 = ((tmp_312_reg_3165_pp0_iter1_reg == 1'd0) & (tmp_317_reg_3173 == 1'd1) & (tmp_313_reg_3169 == 1'd1) & (tmp_461_i_reg_3156_pp0_iter1_reg == 1'd1) & (tmp_307_reg_2962 == 3'd3));
end

always @ (*) begin
    ap_condition_924 = ((tmp_317_reg_3173 == 1'd0) & (tmp_312_reg_3165_pp0_iter1_reg == 1'd0) & (tmp_313_reg_3169 == 1'd1) & (tmp_461_i_reg_3156_pp0_iter1_reg == 1'd1) & (tmp_307_reg_2962 == 3'd4));
end

always @ (*) begin
    ap_condition_927 = ((tmp_312_reg_3165_pp0_iter1_reg == 1'd0) & (tmp_317_reg_3173 == 1'd1) & (tmp_313_reg_3169 == 1'd1) & (tmp_461_i_reg_3156_pp0_iter1_reg == 1'd1) & (tmp_307_reg_2962 == 3'd4));
end

always @ (*) begin
    ap_condition_933 = ((tmp_317_reg_3173 == 1'd0) & (tmp_312_reg_3165_pp0_iter1_reg == 1'd0) & (tmp_313_reg_3169 == 1'd1) & (tmp_461_i_reg_3156_pp0_iter1_reg == 1'd1) & (tmp_307_reg_2962 == 3'd5));
end

always @ (*) begin
    ap_condition_936 = ((tmp_312_reg_3165_pp0_iter1_reg == 1'd0) & (tmp_317_reg_3173 == 1'd1) & (tmp_313_reg_3169 == 1'd1) & (tmp_461_i_reg_3156_pp0_iter1_reg == 1'd1) & (tmp_307_reg_2962 == 3'd5));
end

always @ (*) begin
    ap_condition_942 = ((tmp_317_reg_3173 == 1'd0) & (tmp_312_reg_3165_pp0_iter1_reg == 1'd0) & (tmp_313_reg_3169 == 1'd1) & (tmp_461_i_reg_3156_pp0_iter1_reg == 1'd1) & (tmp_307_reg_2962 == 3'd6));
end

always @ (*) begin
    ap_condition_945 = ((tmp_312_reg_3165_pp0_iter1_reg == 1'd0) & (tmp_317_reg_3173 == 1'd1) & (tmp_313_reg_3169 == 1'd1) & (tmp_461_i_reg_3156_pp0_iter1_reg == 1'd1) & (tmp_307_reg_2962 == 3'd6));
end

always @ (*) begin
    ap_condition_951 = ((tmp_317_reg_3173 == 1'd0) & (tmp_312_reg_3165_pp0_iter1_reg == 1'd0) & (tmp_313_reg_3169 == 1'd1) & (tmp_461_i_reg_3156_pp0_iter1_reg == 1'd1) & (tmp_307_reg_2962 == 3'd7));
end

always @ (*) begin
    ap_condition_954 = ((tmp_312_reg_3165_pp0_iter1_reg == 1'd0) & (tmp_317_reg_3173 == 1'd1) & (tmp_313_reg_3169 == 1'd1) & (tmp_461_i_reg_3156_pp0_iter1_reg == 1'd1) & (tmp_307_reg_2962 == 3'd7));
end

always @ (*) begin
    ap_condition_961 = ((tmp_313_fu_1462_p3 == 1'd0) & (tmp_312_reg_3165 == 1'd0) & (tmp_461_i_reg_3156 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_p_030_0_i1_i_reg_1026 = 'bx;

always @ (*) begin
    ap_predicate_tran9to10_state4 = ((tmp_461_i_fu_1417_p2 == 1'd0) | ((tmp_312_fu_1429_p3 == 1'd1) & (tmp_461_i_fu_1417_p2 == 1'd1)));
end

assign bits_V_7_fu_1699_p1 = p_030_0_i1_i_reg_1026_pp0_iter3_reg;

assign bits_V_assign_4_fu_2565_p3 = ((sel_tmp8_fu_2560_p2[0:0] === 1'b1) ? p_Result_s_fu_2507_p4 : r_V_71_reg_3543);

assign bits_V_fu_1411_p2 = (tmp_460_i_fu_1401_p4 | 32'd32505856);

assign buf_1_i_i_fu_2580_p3 = ((sel_tmp8_fu_2560_p2[0:0] === 1'b1) ? buf_24_fu_2503_p1 : sel_tmp5_fu_2572_p3);

assign buf_1_i_i_i_fu_2836_p3 = ((sel_tmp4_fu_2831_p2[0:0] === 1'b1) ? buf_fu_2772_p1 : sel_tmp_fu_2817_p3);

assign buf_22_fu_2804_p3 = {{tmp_291_i_fu_2794_p4}, {tmp_290_i_fu_2786_p4}};

assign buf_24_fu_2503_p1 = tmp_538_i_fu_2497_p2;

assign buf_25_fu_2546_p3 = {{tmp_300_i_fu_2536_p4}, {tmp_299_i_fu_2527_p4}};

assign buf_27_fu_2640_p3 = {{tmp_303_i_reg_3579}, {tmp_302_i_reg_3574}};

assign buf_28_fu_2885_p3 = {{tmp_51_reg_3660}, {tmp_50_reg_3655}};

assign buf_fu_2772_p1 = tmp_488_i_fu_2767_p2;

assign cur_bidx_5_cast_i_fu_2732_p1 = cur_bidx_8_reg_3527;

assign cur_bidx_6_cast_i_fu_1924_p1 = cur_bidx_9_fu_1912_p1;

assign cur_bidx_7_cast_i_fu_2608_p1 = cur_bidx_8_reg_3527;

assign cur_bidx_8_fu_2337_p1 = etx_ba_m_idx_5_fu_352[5:0];

assign cur_bidx_9_fu_1912_p1 = BitStream64_m_idx_re_4_fu_344[5:0];

assign cur_bidx_cast_i_fu_1543_p1 = cur_bidx_fu_1539_p1;

assign cur_bidx_fu_1539_p1 = ap_phi_mux_etx_ha_m_idx_i_phi_fu_1088_p4[5:0];

assign cv_m_hi_V_4_cast_fu_2131_p4 = {{r_V_58_reg_3470[20:10]}};

assign cv_m_hi_V_7_fu_2030_p4 = {{grp_fu_2925_p3[21:10]}};

assign cv_m_hi_V_fu_2328_p2 = (p_Result_103_fu_2318_p4 | hi_mask_V_4_fu_2212_p3);

assign cv_m_lo_V_4_cast_fu_2140_p4 = {{r_V_60_reg_3476[20:10]}};

assign cv_m_lo_V_4_fu_2046_p4 = {{grp_fu_2934_p3[21:10]}};

assign diff_fu_1841_p2 = ($signed(14'd16352) + $signed(tmp_490_cast_i_fu_1837_p1));

assign etxOut_ba_m_ccur = ap_phi_mux_BitStream64_m_cur_re_8_phi_fu_1182_p4;

assign etxOut_ba_m_cidx = (etx_ba_m_idx_5_load_reg_3521 + nbits_assign_s_reg_3624);

assign etxOut_ha_m_ccur = BitStream64_m_cur_re_7_fu_340;

assign etxOut_ha_m_cidx = BitStream64_m_idx_re_4_fu_344;

assign etx_ba_m_cur_14_fu_2677_p2 = (tmp_551_i_fu_2670_p3 | tmp_548_i_fu_2655_p2);

assign etx_ba_m_cur_fu_2908_p2 = (tmp_510_i_fu_2901_p3 | tmp_500_i_reg_3670);

assign etx_ba_m_idx_fu_2450_p2 = (etx_ba_m_idx_5_fu_352 + nebits_fu_2410_p2);

assign etx_ha_m_cur_13_load_1_load_fu_1718_p1 = etx_ha_m_cur_13_fu_324;

assign etx_ha_m_cur_14_fu_1629_p1 = p_0100_0_i_i_reg_1108;

assign etx_ha_m_cur_15_fu_2055_p1 = ovr_V_4_reg_3409_pp1_iter3_reg;

assign etx_ha_m_cur_1_fu_2107_p3 = {{tmp_55_fu_2097_p4}, {tmp_54_fu_2091_p2}};

assign etx_ha_m_cur_fu_1681_p3 = {{tmp_48_fu_1671_p4}, {tmp_47_fu_1665_p2}};

assign etx_ha_m_idx_4_fu_1970_p2 = (BitStream64_m_idx_re_4_fu_344 + nbits_assign_3_fu_1916_p1);

assign etx_ha_m_idx_fu_1577_p2 = (ap_phi_mux_nbits_assign_phi_fu_1100_p4 + ap_phi_mux_etx_ha_m_idx_i_phi_fu_1088_p4);

assign exitcond_fu_1767_p2 = ((tmp_316_fu_1763_p1 == 32'd1024) ? 1'b1 : 1'b0);

assign grp_fu_1237_p4 = {{grp_fu_1237_p1[31:6]}};

assign grp_fu_2925_p0 = lhs_V_fu_2019_p1;

assign grp_fu_2925_p1 = grp_fu_2925_p10;

assign grp_fu_2925_p10 = table_i_load_4_reg_3435;

assign grp_fu_2925_p2 = grp_fu_2925_p20;

assign grp_fu_2925_p20 = xlo_V_fu_2013_p2;

assign grp_fu_2934_p0 = lhs_V_fu_2019_p1;

assign grp_fu_2934_p1 = grp_fu_2934_p10;

assign grp_fu_2934_p10 = table_i_load_reg_3430;

assign grp_fu_2934_p2 = grp_fu_2934_p20;

assign grp_fu_2934_p20 = xlo_V_4_fu_2001_p3;

assign hi_mask_V_4_fu_2212_p3 = {{tmp_331_fu_2204_p3}, {11'd0}};

assign hist_m_bins_V1_address0 = tmp_153_cast_fu_1510_p1;

assign hist_m_bins_V402_address0 = tmp_153_cast_fu_1510_p1;

assign hist_m_bins_V40_address0 = tmp_152_cast_fu_1493_p1;

assign hist_m_bins_V413_address0 = tmp_153_cast_fu_1510_p1;

assign hist_m_bins_V41_address0 = tmp_152_cast_fu_1493_p1;

assign hist_m_bins_V424_address0 = tmp_153_cast_fu_1510_p1;

assign hist_m_bins_V42_address0 = tmp_152_cast_fu_1493_p1;

assign hist_m_bins_V435_address0 = tmp_153_cast_fu_1510_p1;

assign hist_m_bins_V43_address0 = tmp_152_cast_fu_1493_p1;

assign hist_m_bins_V446_address0 = tmp_153_cast_fu_1510_p1;

assign hist_m_bins_V44_address0 = tmp_152_cast_fu_1493_p1;

assign hist_m_bins_V457_address0 = tmp_153_cast_fu_1510_p1;

assign hist_m_bins_V45_address0 = tmp_152_cast_fu_1493_p1;

assign hist_m_bins_V468_address0 = tmp_153_cast_fu_1510_p1;

assign hist_m_bins_V46_address0 = tmp_152_cast_fu_1493_p1;

assign hist_m_bins_V_address0 = tmp_152_cast_fu_1493_p1;

assign hist_m_maxcnt_V26_address0 = newIndex65_cast_i_fu_1274_p1;

assign hist_m_maxcnt_V27_address0 = newIndex65_cast_i_fu_1274_p1;

assign hist_m_maxcnt_V28_address0 = newIndex65_cast_i_fu_1274_p1;

assign hist_m_maxcnt_V29_address0 = newIndex65_cast_i_fu_1274_p1;

assign hist_m_maxcnt_V30_address0 = newIndex65_cast_i_fu_1274_p1;

assign hist_m_maxcnt_V31_address0 = newIndex65_cast_i_fu_1274_p1;

assign hist_m_maxcnt_V32_address0 = newIndex65_cast_i_fu_1274_p1;

assign hist_m_maxcnt_V_address0 = newIndex65_cast_i_fu_1274_p1;

assign hist_m_nobits_V33_address0 = hist_m_nobits_V33_ad_reg_3020;

assign hist_m_nobits_V34_address0 = hist_m_nobits_V34_ad_reg_3025;

assign hist_m_nobits_V35_address0 = hist_m_nobits_V35_ad_reg_3030;

assign hist_m_nobits_V36_address0 = hist_m_nobits_V36_ad_reg_3035;

assign hist_m_nobits_V37_address0 = hist_m_nobits_V37_ad_reg_3040;

assign hist_m_nobits_V38_address0 = hist_m_nobits_V38_ad_reg_3045;

assign hist_m_nobits_V39_address0 = hist_m_nobits_V39_ad_reg_3050;

assign hist_m_nobits_V_address0 = hist_m_nobits_V_addr_reg_3015;

assign hist_m_omask_V19_address0 = hist_m_omask_V19_add_reg_3060;

assign hist_m_omask_V20_address0 = hist_m_omask_V20_add_reg_3065;

assign hist_m_omask_V21_address0 = hist_m_omask_V21_add_reg_3070;

assign hist_m_omask_V22_address0 = hist_m_omask_V22_add_reg_3075;

assign hist_m_omask_V23_address0 = hist_m_omask_V23_add_reg_3080;

assign hist_m_omask_V24_address0 = hist_m_omask_V24_add_reg_3085;

assign hist_m_omask_V25_address0 = hist_m_omask_V25_add_reg_3090;

assign hist_m_omask_V_address0 = hist_m_omask_V_addr_reg_3055;

assign i_assign_cast24_i_fu_1437_p1 = i_assign_reg_1002;

assign ibin_fu_1423_p2 = (ap_phi_mux_i_assign_phi_fu_1006_p4 + 6'd1);

assign idx_V_4_fu_1873_p3 = ((tmp_326_fu_1847_p3[0:0] === 1'b1) ? idx_V_fu_1861_p1 : 5'd0);

assign idx_V_fu_1861_p1 = storemerge_i_fu_1830_p3[4:0];

assign leading_bit_4_fu_2490_p1 = tmp_335_reg_3562;

assign leading_bit_fu_2764_p1 = bit_V_reg_3616;

assign left_11_fu_2735_p2 = ($signed(7'd64) - $signed(cur_bidx_5_cast_i_fu_2732_p1));

assign left_12_fu_1928_p2 = ($signed(7'd64) - $signed(cur_bidx_6_cast_i_fu_1924_p1));

assign left_13_fu_2611_p2 = ($signed(7'd64) - $signed(cur_bidx_7_cast_i_fu_2608_p1));

assign left_5_cast_i_fu_2741_p1 = left_11_fu_2735_p2;

assign left_7_cast_i_fu_2617_p1 = left_13_fu_2611_p2;

assign left_V_fu_1522_p2 = (p_070_0_i_i_reg_1014 ^ 10'd1023);

assign left_cast_i_fu_1553_p1 = left_fu_1547_p2;

assign left_fu_1547_p2 = ($signed(7'd64) - $signed(cur_bidx_cast_i_fu_1543_p1));

assign lhs_V_20_cast_i_fu_2341_p1 = cv_m_lo_V_4_reg_3481_pp1_iter5_reg;

assign lhs_V_cast_i_fu_1886_p1 = idx_V_4_fu_1873_p3;

assign lhs_V_fu_2019_p1 = range_V_8_fu_1995_p2;

assign mpending_V_fu_2350_p2 = (nreduce_V_reg_3506 - nsame_V_reg_3498);

assign nbits_8_fu_1391_p2 = (32'd10 - tmp_i_fu_1383_p3);

assign nbits_assign_3_cast_s_fu_1920_p1 = grp_fu_1202_p10;

assign nbits_assign_3_fu_1916_p1 = grp_fu_1202_p10;

assign nbits_assign_4_cast2_fu_2347_p1 = nsame_V_reg_3498;

assign nbits_assign_4_cast_s_fu_2194_p1 = nsame_V_fu_2178_p1;

assign nbits_assign_4_fu_2344_p1 = nsame_V_reg_3498;

assign nbits_assign_s_fu_2712_p2 = (32'd2 + etx_tofollow_fu_336);

assign nbits_fu_1608_p2 = (32'd10 - tmp_473_i_fu_1600_p3);

assign nebits_fu_2410_p2 = (etx_tofollow_fu_336 + nbits_assign_4_fu_2344_p1);

assign newIndex65_cast_i_ca_fu_1356_p1 = tmp_113_reg_2969;

assign newIndex65_cast_i_fu_1274_p1 = tmp_113_fu_1264_p4;

assign newIndex66_i_cast_fu_1484_p1 = tmp_318_fu_1474_p4;

assign npending_4_fu_2456_p1 = mpending_V_fu_2350_p2;

assign npending_fu_2474_p2 = (etx_tofollow_fu_336 + tmp_526_i_fu_2470_p1);

assign nreduce_V_fu_2277_p1 = val_assign_4_fu_2269_p3[3:0];

assign nsame_V_fu_2178_p1 = val_assign_s_fu_2170_p3[3:0];

assign overrun_11_fu_2745_p2 = (nbits_assign_s_fu_2712_p2 - left_5_cast_i_fu_2741_p1);

assign overrun_12_fu_1934_p2 = (nbits_assign_3_cast_s_fu_1920_p1 - left_12_fu_1928_p2);

assign overrun_13_fu_2621_p2 = (nebits_reg_3549 - left_7_cast_i_fu_2617_p1);

assign overrun_fu_1557_p2 = (ap_phi_mux_nbits_assign_phi_fu_1100_p4 - left_cast_i_fu_1553_p1);

assign ovr_V_4_fu_1865_p3 = ((tmp_326_fu_1847_p3[0:0] === 1'b1) ? ovr_V_5_fu_332 : ovr_V_fu_1855_p2);

assign ovr_V_fu_1855_p2 = ($signed(13'd8160) + $signed(storemerge_i_fu_1830_p3));

assign p_0_1_0_i_cast_i_fu_2422_p1 = $signed(p_0_1_0_i_i_fu_2416_p2);

assign p_0_1_0_i_i_fu_2416_p2 = ($signed(5'd31) + $signed(nbits_assign_4_cast2_fu_2347_p1));

assign p_7_i_fu_2226_p2 = (tmp_297_i_fu_2220_p2 | cv_m_hi_V_4_cast_fu_2131_p4);

integer ap_tvar_int_0;

always @ (r_V_58_reg_3470) begin
    for (ap_tvar_int_0 = 12 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 21 - 10) begin
            p_Result_102_fu_2295_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_102_fu_2295_p4[ap_tvar_int_0] = r_V_58_reg_3470[21 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (tmp_558_i_fu_2312_p2) begin
    for (ap_tvar_int_1 = 12 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 11 - 0) begin
            p_Result_103_fu_2318_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_103_fu_2318_p4[ap_tvar_int_1] = tmp_558_i_fu_2312_p2[11 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (maxcnt_V_fu_1322_p10) begin
    for (ap_tvar_int_2 = 10 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 9 - 0) begin
            p_Result_104_fu_1343_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_104_fu_1343_p4[ap_tvar_int_2] = maxcnt_V_fu_1322_p10[9 - ap_tvar_int_2];
        end
    end
end

assign p_Result_105_fu_1376_p3 = {{22'd4194303}, {p_Result_104_reg_3120}};

integer ap_tvar_int_3;

always @ (left_V_reg_3257) begin
    for (ap_tvar_int_3 = 10 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 9 - 0) begin
            p_Result_106_fu_1583_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            p_Result_106_fu_1583_p4[ap_tvar_int_3] = left_V_reg_3257[9 - ap_tvar_int_3];
        end
    end
end

assign p_Result_107_fu_1592_p3 = {{22'd4194303}, {p_Result_106_fu_1583_p4}};

integer ap_tvar_int_4;

always @ (r_V_68_reg_3492) begin
    for (ap_tvar_int_4 = 12 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > 11 - 0) begin
            p_Result_108_fu_2153_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            p_Result_108_fu_2153_p4[ap_tvar_int_4] = r_V_68_reg_3492[11 - ap_tvar_int_4];
        end
    end
end

assign p_Result_109_fu_2162_p3 = {{20'd1048575}, {p_Result_108_fu_2153_p4}};

integer ap_tvar_int_5;

always @ (pending_V_fu_2246_p2) begin
    for (ap_tvar_int_5 = 12 - 1; ap_tvar_int_5 >= 0; ap_tvar_int_5 = ap_tvar_int_5 - 1) begin
        if (ap_tvar_int_5 > 11 - 0) begin
            p_Result_110_fu_2251_p4[ap_tvar_int_5] = 1'b0;
        end else begin
            p_Result_110_fu_2251_p4[ap_tvar_int_5] = pending_V_fu_2246_p2[11 - ap_tvar_int_5];
        end
    end
end

assign p_Result_111_fu_2261_p3 = {{20'd1048575}, {p_Result_110_fu_2251_p4}};

always @ (*) begin
    p_Result_s_fu_2507_p4 = r_V_71_reg_3543;
    p_Result_s_fu_2507_p4[p_0_1_0_i_cast_i_reg_3555] = |(32'd0);
end

assign p_mbits_0_i_i_fu_1619_p3 = ((tmp_478_i_fu_1614_p2[0:0] === 1'b1) ? nbits_fu_1608_p2 : nbits_8_reg_3145);

assign p_shl_cast_fu_1366_p1 = tmp_114_fu_1359_p3;

assign pending_V_fu_2246_p2 = (r_V_68_reg_3492 & phitmp_i_fu_2240_p2);

assign phitmp2_i_fu_1773_p2 = (syms_pn_rec_i_reg_1136 + 64'd1);

assign phitmp_i_fu_2240_p2 = (tmp_524_i_fu_2232_p3 | 12'd1);

assign r_V_56_fu_1890_p2 = (6'd1 + lhs_V_cast_i_fu_1886_p1);

assign r_V_62_fu_2188_p2 = (rhs_V_20_fu_2182_p2 & cv_m_lo_V_4_cast_fu_2140_p4);

assign r_V_67_fu_2304_p3 = {{1'd1}, {p_Result_102_fu_2295_p4}};

assign r_V_68_fu_2125_p2 = (cv_m_lo_V_4_fu_2046_p4 ^ cv_m_hi_V_7_fu_2030_p4);

assign r_V_69_fu_2198_p2 = r_V_62_fu_2188_p2 << nbits_assign_4_cast_s_fu_2194_p1;

assign r_V_70_fu_2359_p2 = (5'd12 - nbits_assign_4_cast2_fu_2347_p1);

assign r_V_71_fu_2402_p3 = ((tmp_333_fu_2365_p3[0:0] === 1'b1) ? tmp_334_fu_2398_p1 : tmp_529_i_fu_2393_p2);

assign r_V_72_fu_2289_p2 = cv_m_lo_V_4_cast_fu_2140_p4 << tmp_555_cast_i_cast_fu_2285_p1;

assign r_V_fu_1785_p3 = {{r_V_i_fu_1779_p2}, {1'd0}};

assign r_V_i_fu_1779_p2 = (ap_phi_mux_p_i_phi_fu_1150_p4 - grp_fu_1189_p6);

assign range_V_7_fu_1989_p2 = (range_V_fu_1981_p1 - tmp_503_i_fu_1985_p1);

assign range_V_8_fu_1995_p2 = (13'd1 + range_V_7_fu_1989_p2);

assign range_V_fu_1981_p1 = ap_phi_mux_etx_cv_m_hi_V_phi_fu_1172_p4;

assign rhs_V_20_fu_2182_p2 = (cv_m_hi_V_4_cast_fu_2131_p4 ^ 11'd2047);

assign sel_tmp3_fu_2825_p2 = (tmp_483_i_fu_2759_p2 ^ 1'd1);

assign sel_tmp4_fu_2831_p2 = (sel_tmp3_fu_2825_p2 & bit_V_reg_3616);

assign sel_tmp5_fu_2572_p3 = ((tmp_535_i_fu_2485_p2[0:0] === 1'b1) ? 64'd0 : buf_25_fu_2546_p3);

assign sel_tmp7_fu_2554_p2 = (tmp_535_i_fu_2485_p2 ^ 1'd1);

assign sel_tmp8_fu_2560_p2 = (tmp_335_reg_3562 & sel_tmp7_fu_2554_p2);

assign sel_tmp_fu_2817_p3 = ((tmp_483_i_fu_2759_p2[0:0] === 1'b1) ? 64'd0 : buf_22_fu_2804_p3);

assign shift_11_fu_2869_p3 = ((tmp_498_i_fu_2864_p2[0:0] === 1'b1) ? left_5_cast_i_reg_3640 : nbits_assign_s_reg_3624);

assign shift_12_fu_2058_p3 = ((tmp_513_i_reg_3455[0:0] === 1'b1) ? left_12_reg_3445 : nbits_assign_3_cast_s_reg_3440);

assign shift_13_fu_2646_p3 = ((tmp_546_i_reg_3594[0:0] === 1'b1) ? left_7_cast_i_reg_3584 : nebits_reg_3549_pp1_iter7_reg);

assign shift_fu_1633_p3 = ((tmp_463_i_reg_3277[0:0] === 1'b1) ? left_cast_i_reg_3267 : nbits_assign_reg_1096);

assign storemerge_i_fu_1830_p3 = ((tmp_325_fu_1813_p3[0:0] === 1'b1) ? tmp_485_i_reg_3404 : tmp_486_cast_i_fu_1826_p1);

assign table_i_address1 = tmp_502_i_fu_1896_p1;

assign tmp_111_fu_1307_p3 = {{tmp_s_reg_2957}, {10'd0}};

assign tmp_112_fu_1314_p1 = tmp_111_fu_1307_p3;

assign tmp_113_fu_1264_p4 = {{hist_m_omask_V_offset_dout[4:3]}};

assign tmp_114_fu_1359_p3 = {{tmp_113_reg_2969}, {4'd0}};

assign tmp_115_fu_1370_p2 = (p_shl_cast_fu_1366_p1 + newIndex65_cast_i_ca_fu_1356_p1);

assign tmp_116_fu_1750_p2 = (tmp_146_cast_reg_3125 + tmp_314_fu_1746_p1);

assign tmp_117_fu_1488_p2 = (tmp_115_reg_3135 + newIndex66_i_cast_fu_1484_p1);

assign tmp_118_fu_1505_p2 = (p_shl_cast_reg_3130 + newIndex66_i_cast_fu_1484_p1);

assign tmp_146_cast_fu_1353_p1 = tmp_111_reg_3095;

assign tmp_152_cast_fu_1493_p1 = tmp_117_fu_1488_p2;

assign tmp_153_cast_fu_1510_p1 = tmp_118_fu_1505_p2;

assign tmp_154_cast_fu_1755_p1 = tmp_116_fu_1750_p2;

assign tmp_289_i_fu_2781_p2 = ($signed(32'd4294967295) + $signed(tmp_320_reg_3635));

always @ (*) begin
    tmp_290_i_fu_2786_p4 = tmp_289_i_fu_2781_p2;
    tmp_290_i_fu_2786_p4[tofollow_reg_3609] = |(bit_V_reg_3616);
end

assign tmp_291_i_fu_2794_p4 = {{tmp_494_i_fu_2776_p2[63:32]}};

assign tmp_297_i_fu_2220_p2 = (cv_m_lo_V_4_cast_fu_2140_p4 ^ 11'd2047);

always @ (*) begin
    tmp_299_i_fu_2527_p4 = tmp_337_fu_2523_p1;
    tmp_299_i_fu_2527_p4[tmp_537_i_fu_2493_p2] = |(tmp_335_reg_3562);
end

assign tmp_300_i_fu_2536_p4 = {{tmp_544_i_fu_2518_p2[63:32]}};

assign tmp_302_i_fu_2592_p2 = (tmp_338_fu_2588_p1 | bits_V_assign_4_fu_2565_p3);

assign tmp_306_fu_1246_p1 = hist_m_omask_V_offset_dout[1:0];

assign tmp_307_fu_1260_p1 = hist_m_omask_V_offset_dout[2:0];

assign tmp_308_fu_1397_p1 = nbits_8_fu_1391_p2[15:0];

assign tmp_310_fu_1661_p1 = tmp_465_i_fu_1643_p2[31:0];

assign tmp_312_fu_1429_p3 = ap_phi_mux_i_assign_phi_fu_1006_p4[32'd5];

assign tmp_313_fu_1462_p3 = p_Val2_69_fu_1441_p10[i_assign_cast24_i_fu_1437_p1];

assign tmp_314_fu_1746_p1 = syms_pn_rec_i_reg_1136[14:0];

assign tmp_316_fu_1763_p1 = syms_pn_rec_i_reg_1136[31:0];

assign tmp_317_fu_1470_p1 = i_assign_reg_1002[0:0];

assign tmp_318_fu_1474_p4 = {{i_assign_reg_1002[5:1]}};

assign tmp_320_fu_2728_p1 = tmp_493_i_fu_2722_p2[31:0];

assign tmp_321_fu_2844_p1 = buf_1_i_i_i_fu_2836_p3[0:0];

assign tmp_324_fu_1808_p2 = r_V_i_reg_3398 << 12'd1;

assign tmp_325_fu_1813_p3 = r_V_i_reg_3398[32'd11];

assign tmp_326_fu_1847_p3 = diff_fu_1841_p2[32'd13];

assign tmp_328_fu_2087_p1 = tmp_515_i_fu_2067_p2[12:0];

assign tmp_329_fu_1946_p3 = overrun_12_fu_1934_p2[32'd6];

assign tmp_331_fu_2204_p3 = r_V_69_fu_2198_p2[32'd10];

assign tmp_333_fu_2365_p3 = r_V_70_fu_2359_p2[32'd4];

assign tmp_334_fu_2398_p1 = tmp_532_i_fu_2387_p2[11:0];

assign tmp_335_fu_2426_p3 = r_V_71_fu_2402_p3[p_0_1_0_i_cast_i_fu_2422_p1];

assign tmp_337_fu_2523_p1 = tmp_544_i_fu_2518_p2[31:0];

assign tmp_338_fu_2588_p1 = buf_1_i_i_fu_2580_p3[11:0];

assign tmp_460_i_fu_1401_p4 = {{{tmp_308_fu_1397_p1}, {grp_fu_1189_p6}}, {grp_fu_1202_p10}};

assign tmp_461_i_fu_1417_p2 = ((ap_phi_mux_i_assign_phi_fu_1006_p4 < 6'd33) ? 1'b1 : 1'b0);

assign tmp_462_i_fu_1528_p1 = i_assign_reg_1002_pp0_iter1_reg;

assign tmp_463_i_fu_1563_p2 = (($signed(overrun_fu_1557_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_464_i_fu_1639_p1 = shift_fu_1633_p3;

assign tmp_465_i_fu_1643_p2 = etx_ha_m_cur_13_fu_324 << tmp_464_i_fu_1639_p1;

assign tmp_467_i_fu_1649_p2 = p_0100_0_i_i_reg_1108 >> overrun_reg_3272;

assign tmp_468_i_fu_1654_p3 = ((tmp_463_i_reg_3277[0:0] === 1'b1) ? tmp_467_i_fu_1649_p2 : p_0100_0_i_i_reg_1108);


always @ (p_Result_107_fu_1592_p3) begin
    if (p_Result_107_fu_1592_p3[0] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd0;
    end else if (p_Result_107_fu_1592_p3[1] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd1;
    end else if (p_Result_107_fu_1592_p3[2] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd2;
    end else if (p_Result_107_fu_1592_p3[3] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd3;
    end else if (p_Result_107_fu_1592_p3[4] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd4;
    end else if (p_Result_107_fu_1592_p3[5] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd5;
    end else if (p_Result_107_fu_1592_p3[6] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd6;
    end else if (p_Result_107_fu_1592_p3[7] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd7;
    end else if (p_Result_107_fu_1592_p3[8] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd8;
    end else if (p_Result_107_fu_1592_p3[9] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd9;
    end else if (p_Result_107_fu_1592_p3[10] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd10;
    end else if (p_Result_107_fu_1592_p3[11] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd11;
    end else if (p_Result_107_fu_1592_p3[12] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd12;
    end else if (p_Result_107_fu_1592_p3[13] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd13;
    end else if (p_Result_107_fu_1592_p3[14] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd14;
    end else if (p_Result_107_fu_1592_p3[15] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd15;
    end else if (p_Result_107_fu_1592_p3[16] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd16;
    end else if (p_Result_107_fu_1592_p3[17] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd17;
    end else if (p_Result_107_fu_1592_p3[18] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd18;
    end else if (p_Result_107_fu_1592_p3[19] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd19;
    end else if (p_Result_107_fu_1592_p3[20] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd20;
    end else if (p_Result_107_fu_1592_p3[21] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd21;
    end else if (p_Result_107_fu_1592_p3[22] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd22;
    end else if (p_Result_107_fu_1592_p3[23] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd23;
    end else if (p_Result_107_fu_1592_p3[24] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd24;
    end else if (p_Result_107_fu_1592_p3[25] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd25;
    end else if (p_Result_107_fu_1592_p3[26] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd26;
    end else if (p_Result_107_fu_1592_p3[27] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd27;
    end else if (p_Result_107_fu_1592_p3[28] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd28;
    end else if (p_Result_107_fu_1592_p3[29] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd29;
    end else if (p_Result_107_fu_1592_p3[30] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd30;
    end else if (p_Result_107_fu_1592_p3[31] == 1'b1) begin
        tmp_473_i_fu_1600_p3 = 32'd31;
    end else begin
        tmp_473_i_fu_1600_p3 = 32'd32;
    end
end

assign tmp_478_i_fu_1614_p2 = (($signed(nbits_fu_1608_p2) < $signed(nbits_8_reg_3145)) ? 1'b1 : 1'b0);

assign tmp_47_fu_1665_p2 = (tmp_468_i_fu_1654_p3 | tmp_310_fu_1661_p1);

assign tmp_483_i_fu_2759_p2 = ((tofollow_reg_3609 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_484_i_fu_1793_p2 = (r_V_fu_1785_p3 | 13'd1);

assign tmp_485_i_fu_1799_p2 = (13'd1 - tmp_484_i_fu_1793_p2);

assign tmp_486_cast_i_fu_1826_p1 = tmp_486_i_fu_1820_p2;

assign tmp_486_i_fu_1820_p2 = (tmp_324_fu_1808_p2 | 12'd1);

assign tmp_488_i_fu_2767_p2 = leading_bit_fu_2764_p1 << tofollow_reg_3609;

assign tmp_48_fu_1671_p4 = {{tmp_465_i_fu_1643_p2[63:32]}};

assign tmp_490_cast_i_fu_1837_p1 = storemerge_i_fu_1830_p3;

assign tmp_492_i_fu_2718_p1 = tofollow_fu_2698_p2;

assign tmp_493_i_fu_2722_p2 = 64'd1 << tmp_492_i_fu_2718_p1;

assign tmp_494_i_fu_2776_p2 = ($signed(64'd18446744073709551615) + $signed(tmp_493_i_reg_3630));

assign tmp_496_i_fu_2812_p2 = (tmp_483_i_fu_2759_p2 & bit_V_reg_3616);

assign tmp_498_i_fu_2864_p2 = (($signed(overrun_11_reg_3645) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_499_i_fu_2875_p1 = shift_11_fu_2869_p3;

assign tmp_500_i_fu_2879_p2 = etx_ba_m_cur_12_fu_348 << tmp_499_i_fu_2875_p1;

assign tmp_501_i_fu_1881_p1 = idx_V_4_fu_1873_p3;

assign tmp_502_i_fu_1896_p1 = r_V_56_fu_1890_p2;

assign tmp_503_i_fu_1985_p1 = ap_phi_mux_etx_cv_m_lo_V_phi_fu_1160_p4;

assign tmp_507_i_fu_1901_p2 = ((idx_V_4_fu_1873_p3 == 5'd0) ? 1'b1 : 1'b0);

assign tmp_508_i_fu_2892_p1 = overrun_11_reg_3645;

assign tmp_509_i_fu_2895_p2 = buf_28_fu_2885_p3 >> tmp_508_i_fu_2892_p1;

assign tmp_50_fu_2848_p2 = (tmp_496_i_fu_2812_p2 | tmp_321_fu_2844_p1);

assign tmp_510_i_fu_2901_p3 = ((tmp_498_i_reg_3665[0:0] === 1'b1) ? tmp_509_i_fu_2895_p2 : buf_28_fu_2885_p3);

assign tmp_513_i_fu_1940_p2 = (($signed(overrun_12_fu_1934_p2) > $signed(7'd0)) ? 1'b1 : 1'b0);

assign tmp_514_i_fu_2063_p1 = shift_12_fu_2058_p3;

assign tmp_515_i_fu_2067_p2 = BitStream64_m_cur_re_7_fu_340 << tmp_514_i_fu_2063_p1;

assign tmp_517_cast_i_fu_2073_p1 = overrun_12_reg_3450;

assign tmp_518_i_fu_2076_p2 = ovr_V_4_reg_3409_pp1_iter3_reg >> tmp_517_cast_i_fu_2073_p1;

assign tmp_519_i_fu_2081_p3 = ((tmp_513_i_reg_3455[0:0] === 1'b1) ? tmp_518_i_fu_2076_p2 : ovr_V_4_reg_3409_pp1_iter3_reg);

assign tmp_524_i_fu_2232_p3 = {{p_7_i_fu_2226_p2}, {1'd0}};

assign tmp_525_i_fu_2354_p2 = ((nsame_V_reg_3498 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_526_i_fu_2470_p1 = mpending_V_fu_2350_p2;

assign tmp_528_cast21_i_fu_2373_p1 = r_V_70_fu_2359_p2;

assign tmp_529_i_fu_2393_p2 = cv_m_lo_V_4_reg_3481_pp1_iter5_reg >> tmp_528_cast21_i_fu_2373_p1;

assign tmp_531_cast_i_fu_2383_p1 = tmp_531_i_fu_2377_p2;

assign tmp_531_i_fu_2377_p2 = ($signed(5'd0) - $signed(r_V_70_fu_2359_p2));

assign tmp_532_i_fu_2387_p2 = lhs_V_20_cast_i_fu_2341_p1 << tmp_531_cast_i_fu_2383_p1;

assign tmp_535_i_fu_2485_p2 = ((etx_tofollow_load_4_reg_3537 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_537_i_fu_2493_p2 = ($signed(etx_tofollow_load_4_reg_3537) + $signed(p_0_1_0_i_cast_i_reg_3555));

assign tmp_538_i_fu_2497_p2 = leading_bit_4_fu_2490_p1 << tmp_537_i_fu_2493_p2;

assign tmp_540_i_fu_2434_p1 = etx_tofollow_fu_336;

assign tmp_541_i_fu_2438_p2 = 64'd1 << tmp_540_i_fu_2434_p1;

assign tmp_542_i_fu_2444_p2 = ($signed(64'd18446744073709551615) + $signed(tmp_541_i_fu_2438_p2));

assign tmp_543_i_fu_2515_p1 = $unsigned(p_0_1_0_i_cast_i_reg_3555);

assign tmp_544_i_fu_2518_p2 = tmp_542_i_reg_3569 << tmp_543_i_fu_2515_p1;

assign tmp_546_i_fu_2626_p2 = (($signed(overrun_13_fu_2621_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_547_i_fu_2651_p1 = shift_13_fu_2646_p3;

assign tmp_548_i_fu_2655_p2 = etx_ba_m_cur_12_fu_348 << tmp_547_i_fu_2651_p1;

assign tmp_549_i_fu_2661_p1 = overrun_13_reg_3589;

assign tmp_54_fu_2091_p2 = (tmp_519_i_fu_2081_p3 | tmp_328_fu_2087_p1);

assign tmp_550_i_fu_2664_p2 = buf_27_fu_2640_p3 >> tmp_549_i_fu_2661_p1;

assign tmp_551_i_fu_2670_p3 = ((tmp_546_i_reg_3594[0:0] === 1'b1) ? tmp_550_i_fu_2664_p2 : buf_27_fu_2640_p3);

assign tmp_555_cast19_i_fu_2281_p1 = nreduce_V_fu_2277_p1;

assign tmp_555_cast_i_cast_fu_2285_p1 = nreduce_V_fu_2277_p1;

assign tmp_558_i_fu_2312_p2 = $signed(r_V_67_fu_2304_p3) >>> tmp_555_cast19_i_fu_2281_p1;

assign tmp_55_fu_2097_p4 = {{tmp_515_i_fu_2067_p2[63:13]}};

assign tmp_i1017_i_fu_2915_p1 = grp_fu_1237_p4;

assign tmp_i18_i_fu_1713_p1 = wrdIdx_fu_1703_p4;

assign tmp_i316_i_fu_2149_p1 = wrdIdx_1_reg_3465_pp1_iter4_reg;

assign tmp_i515_i_fu_2693_p1 = grp_fu_1237_p4;


always @ (p_Result_105_fu_1376_p3) begin
    if (p_Result_105_fu_1376_p3[0] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd0;
    end else if (p_Result_105_fu_1376_p3[1] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd1;
    end else if (p_Result_105_fu_1376_p3[2] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd2;
    end else if (p_Result_105_fu_1376_p3[3] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd3;
    end else if (p_Result_105_fu_1376_p3[4] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd4;
    end else if (p_Result_105_fu_1376_p3[5] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd5;
    end else if (p_Result_105_fu_1376_p3[6] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd6;
    end else if (p_Result_105_fu_1376_p3[7] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd7;
    end else if (p_Result_105_fu_1376_p3[8] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd8;
    end else if (p_Result_105_fu_1376_p3[9] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd9;
    end else if (p_Result_105_fu_1376_p3[10] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd10;
    end else if (p_Result_105_fu_1376_p3[11] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd11;
    end else if (p_Result_105_fu_1376_p3[12] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd12;
    end else if (p_Result_105_fu_1376_p3[13] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd13;
    end else if (p_Result_105_fu_1376_p3[14] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd14;
    end else if (p_Result_105_fu_1376_p3[15] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd15;
    end else if (p_Result_105_fu_1376_p3[16] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd16;
    end else if (p_Result_105_fu_1376_p3[17] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd17;
    end else if (p_Result_105_fu_1376_p3[18] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd18;
    end else if (p_Result_105_fu_1376_p3[19] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd19;
    end else if (p_Result_105_fu_1376_p3[20] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd20;
    end else if (p_Result_105_fu_1376_p3[21] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd21;
    end else if (p_Result_105_fu_1376_p3[22] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd22;
    end else if (p_Result_105_fu_1376_p3[23] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd23;
    end else if (p_Result_105_fu_1376_p3[24] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd24;
    end else if (p_Result_105_fu_1376_p3[25] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd25;
    end else if (p_Result_105_fu_1376_p3[26] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd26;
    end else if (p_Result_105_fu_1376_p3[27] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd27;
    end else if (p_Result_105_fu_1376_p3[28] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd28;
    end else if (p_Result_105_fu_1376_p3[29] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd29;
    end else if (p_Result_105_fu_1376_p3[30] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd30;
    end else if (p_Result_105_fu_1376_p3[31] == 1'b1) begin
        tmp_i_fu_1383_p3 = 32'd31;
    end else begin
        tmp_i_fu_1383_p3 = 32'd32;
    end
end

assign tofollow_fu_2698_p2 = (32'd1 + etx_tofollow_fu_336);

assign total_V_fu_1533_p2 = (ap_phi_mux_p_030_0_i1_i_phi_fu_1030_p34 + p_070_0_i_i_reg_1014);


always @ (p_Result_111_fu_2261_p3) begin
    if (p_Result_111_fu_2261_p3[0] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd0;
    end else if (p_Result_111_fu_2261_p3[1] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd1;
    end else if (p_Result_111_fu_2261_p3[2] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd2;
    end else if (p_Result_111_fu_2261_p3[3] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd3;
    end else if (p_Result_111_fu_2261_p3[4] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd4;
    end else if (p_Result_111_fu_2261_p3[5] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd5;
    end else if (p_Result_111_fu_2261_p3[6] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd6;
    end else if (p_Result_111_fu_2261_p3[7] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd7;
    end else if (p_Result_111_fu_2261_p3[8] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd8;
    end else if (p_Result_111_fu_2261_p3[9] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd9;
    end else if (p_Result_111_fu_2261_p3[10] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd10;
    end else if (p_Result_111_fu_2261_p3[11] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd11;
    end else if (p_Result_111_fu_2261_p3[12] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd12;
    end else if (p_Result_111_fu_2261_p3[13] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd13;
    end else if (p_Result_111_fu_2261_p3[14] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd14;
    end else if (p_Result_111_fu_2261_p3[15] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd15;
    end else if (p_Result_111_fu_2261_p3[16] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd16;
    end else if (p_Result_111_fu_2261_p3[17] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd17;
    end else if (p_Result_111_fu_2261_p3[18] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd18;
    end else if (p_Result_111_fu_2261_p3[19] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd19;
    end else if (p_Result_111_fu_2261_p3[20] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd20;
    end else if (p_Result_111_fu_2261_p3[21] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd21;
    end else if (p_Result_111_fu_2261_p3[22] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd22;
    end else if (p_Result_111_fu_2261_p3[23] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd23;
    end else if (p_Result_111_fu_2261_p3[24] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd24;
    end else if (p_Result_111_fu_2261_p3[25] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd25;
    end else if (p_Result_111_fu_2261_p3[26] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd26;
    end else if (p_Result_111_fu_2261_p3[27] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd27;
    end else if (p_Result_111_fu_2261_p3[28] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd28;
    end else if (p_Result_111_fu_2261_p3[29] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd29;
    end else if (p_Result_111_fu_2261_p3[30] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd30;
    end else if (p_Result_111_fu_2261_p3[31] == 1'b1) begin
        val_assign_4_fu_2269_p3 = 32'd31;
    end else begin
        val_assign_4_fu_2269_p3 = 32'd32;
    end
end


always @ (p_Result_109_fu_2162_p3) begin
    if (p_Result_109_fu_2162_p3[0] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd0;
    end else if (p_Result_109_fu_2162_p3[1] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd1;
    end else if (p_Result_109_fu_2162_p3[2] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd2;
    end else if (p_Result_109_fu_2162_p3[3] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd3;
    end else if (p_Result_109_fu_2162_p3[4] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd4;
    end else if (p_Result_109_fu_2162_p3[5] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd5;
    end else if (p_Result_109_fu_2162_p3[6] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd6;
    end else if (p_Result_109_fu_2162_p3[7] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd7;
    end else if (p_Result_109_fu_2162_p3[8] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd8;
    end else if (p_Result_109_fu_2162_p3[9] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd9;
    end else if (p_Result_109_fu_2162_p3[10] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd10;
    end else if (p_Result_109_fu_2162_p3[11] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd11;
    end else if (p_Result_109_fu_2162_p3[12] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd12;
    end else if (p_Result_109_fu_2162_p3[13] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd13;
    end else if (p_Result_109_fu_2162_p3[14] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd14;
    end else if (p_Result_109_fu_2162_p3[15] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd15;
    end else if (p_Result_109_fu_2162_p3[16] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd16;
    end else if (p_Result_109_fu_2162_p3[17] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd17;
    end else if (p_Result_109_fu_2162_p3[18] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd18;
    end else if (p_Result_109_fu_2162_p3[19] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd19;
    end else if (p_Result_109_fu_2162_p3[20] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd20;
    end else if (p_Result_109_fu_2162_p3[21] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd21;
    end else if (p_Result_109_fu_2162_p3[22] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd22;
    end else if (p_Result_109_fu_2162_p3[23] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd23;
    end else if (p_Result_109_fu_2162_p3[24] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd24;
    end else if (p_Result_109_fu_2162_p3[25] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd25;
    end else if (p_Result_109_fu_2162_p3[26] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd26;
    end else if (p_Result_109_fu_2162_p3[27] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd27;
    end else if (p_Result_109_fu_2162_p3[28] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd28;
    end else if (p_Result_109_fu_2162_p3[29] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd29;
    end else if (p_Result_109_fu_2162_p3[30] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd30;
    end else if (p_Result_109_fu_2162_p3[31] == 1'b1) begin
        val_assign_s_fu_2170_p3 = 32'd31;
    end else begin
        val_assign_s_fu_2170_p3 = 32'd32;
    end
end

assign wrdIdx_fu_1703_p4 = {{etx_ha_m_idx_i_reg_1084_pp0_iter4_reg[31:6]}};

assign xlo_V_4_fu_2001_p3 = {{ap_phi_mux_etx_cv_m_lo_V_phi_fu_1160_p4}, {10'd0}};

assign xlo_V_5_cast_i_fu_2009_p1 = xlo_V_4_fu_2001_p3;

assign xlo_V_fu_2013_p2 = ($signed(22'd4193280) + $signed(xlo_V_5_cast_i_fu_2009_p1));

always @ (posedge ap_clk) begin
    tmp_111_reg_3095[9:0] <= 10'b0000000000;
    tmp_146_cast_reg_3125[9:0] <= 10'b0000000000;
    tmp_146_cast_reg_3125[14:13] <= 2'b00;
    p_shl_cast_reg_3130[3:0] <= 4'b0000;
    p_shl_cast_reg_3130[6] <= 1'b0;
    left_cast_i_reg_3267[31:7] <= 25'b0000000000000000000000000;
    tmp_485_i_reg_3404[0] <= 1'b0;
    nbits_assign_3_cast_s_reg_3440[6:4] <= 3'b000;
    left_7_cast_i_reg_3584[31:7] <= 25'b0000000000000000000000000;
    left_5_cast_i_reg_3640[31:7] <= 25'b0000000000000000000000000;
end

endmodule //APE_encode150
