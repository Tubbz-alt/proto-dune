// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module APE_encode151 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        etxOut_ha_m_ccur1,
        etxOut_ha_m_ccur1_ap_vld,
        etxOut_ha_m_cidx4,
        etxOut_ha_m_cidx4_ap_vld,
        etxOut_ha_m_buf7_address0,
        etxOut_ha_m_buf7_ce0,
        etxOut_ha_m_buf7_we0,
        etxOut_ha_m_buf7_d0,
        etxOut_ba_m_ccur10,
        etxOut_ba_m_ccur10_ap_vld,
        etxOut_ba_m_cidx13,
        etxOut_ba_m_cidx13_ap_vld,
        etxOut_ba_m_buf16_address0,
        etxOut_ba_m_buf16_ce0,
        etxOut_ba_m_buf16_we0,
        etxOut_ba_m_buf16_d0,
        hist_m_omask_V_address0,
        hist_m_omask_V_ce0,
        hist_m_omask_V_q0,
        hist_m_omask_V19_address0,
        hist_m_omask_V19_ce0,
        hist_m_omask_V19_q0,
        hist_m_omask_V20_address0,
        hist_m_omask_V20_ce0,
        hist_m_omask_V20_q0,
        hist_m_omask_V21_address0,
        hist_m_omask_V21_ce0,
        hist_m_omask_V21_q0,
        hist_m_omask_V22_address0,
        hist_m_omask_V22_ce0,
        hist_m_omask_V22_q0,
        hist_m_omask_V23_address0,
        hist_m_omask_V23_ce0,
        hist_m_omask_V23_q0,
        hist_m_omask_V24_address0,
        hist_m_omask_V24_ce0,
        hist_m_omask_V24_q0,
        hist_m_omask_V25_address0,
        hist_m_omask_V25_ce0,
        hist_m_omask_V25_q0,
        hist_m_omask_V_offset_dout,
        hist_m_omask_V_offset_empty_n,
        hist_m_omask_V_offset_read,
        hist_m_maxcnt_V_address0,
        hist_m_maxcnt_V_ce0,
        hist_m_maxcnt_V_q0,
        hist_m_maxcnt_V26_address0,
        hist_m_maxcnt_V26_ce0,
        hist_m_maxcnt_V26_q0,
        hist_m_maxcnt_V27_address0,
        hist_m_maxcnt_V27_ce0,
        hist_m_maxcnt_V27_q0,
        hist_m_maxcnt_V28_address0,
        hist_m_maxcnt_V28_ce0,
        hist_m_maxcnt_V28_q0,
        hist_m_maxcnt_V29_address0,
        hist_m_maxcnt_V29_ce0,
        hist_m_maxcnt_V29_q0,
        hist_m_maxcnt_V30_address0,
        hist_m_maxcnt_V30_ce0,
        hist_m_maxcnt_V30_q0,
        hist_m_maxcnt_V31_address0,
        hist_m_maxcnt_V31_ce0,
        hist_m_maxcnt_V31_q0,
        hist_m_maxcnt_V32_address0,
        hist_m_maxcnt_V32_ce0,
        hist_m_maxcnt_V32_q0,
        hist_m_nobits_V_address0,
        hist_m_nobits_V_ce0,
        hist_m_nobits_V_q0,
        hist_m_nobits_V33_address0,
        hist_m_nobits_V33_ce0,
        hist_m_nobits_V33_q0,
        hist_m_nobits_V34_address0,
        hist_m_nobits_V34_ce0,
        hist_m_nobits_V34_q0,
        hist_m_nobits_V35_address0,
        hist_m_nobits_V35_ce0,
        hist_m_nobits_V35_q0,
        hist_m_nobits_V36_address0,
        hist_m_nobits_V36_ce0,
        hist_m_nobits_V36_q0,
        hist_m_nobits_V37_address0,
        hist_m_nobits_V37_ce0,
        hist_m_nobits_V37_q0,
        hist_m_nobits_V38_address0,
        hist_m_nobits_V38_ce0,
        hist_m_nobits_V38_q0,
        hist_m_nobits_V39_address0,
        hist_m_nobits_V39_ce0,
        hist_m_nobits_V39_q0,
        hist_m_bins_V_address0,
        hist_m_bins_V_ce0,
        hist_m_bins_V_q0,
        hist_m_bins_V1_address0,
        hist_m_bins_V1_ce0,
        hist_m_bins_V1_q0,
        hist_m_bins_V40_address0,
        hist_m_bins_V40_ce0,
        hist_m_bins_V40_q0,
        hist_m_bins_V402_address0,
        hist_m_bins_V402_ce0,
        hist_m_bins_V402_q0,
        hist_m_bins_V41_address0,
        hist_m_bins_V41_ce0,
        hist_m_bins_V41_q0,
        hist_m_bins_V413_address0,
        hist_m_bins_V413_ce0,
        hist_m_bins_V413_q0,
        hist_m_bins_V42_address0,
        hist_m_bins_V42_ce0,
        hist_m_bins_V42_q0,
        hist_m_bins_V424_address0,
        hist_m_bins_V424_ce0,
        hist_m_bins_V424_q0,
        hist_m_bins_V43_address0,
        hist_m_bins_V43_ce0,
        hist_m_bins_V43_q0,
        hist_m_bins_V435_address0,
        hist_m_bins_V435_ce0,
        hist_m_bins_V435_q0,
        hist_m_bins_V44_address0,
        hist_m_bins_V44_ce0,
        hist_m_bins_V44_q0,
        hist_m_bins_V446_address0,
        hist_m_bins_V446_ce0,
        hist_m_bins_V446_q0,
        hist_m_bins_V45_address0,
        hist_m_bins_V45_ce0,
        hist_m_bins_V45_q0,
        hist_m_bins_V457_address0,
        hist_m_bins_V457_ce0,
        hist_m_bins_V457_q0,
        hist_m_bins_V46_address0,
        hist_m_bins_V46_ce0,
        hist_m_bins_V46_q0,
        hist_m_bins_V468_address0,
        hist_m_bins_V468_ce0,
        hist_m_bins_V468_q0,
        syms_V_address0,
        syms_V_ce0,
        syms_V_q0,
        syms_V47_address0,
        syms_V47_ce0,
        syms_V47_q0,
        syms_V48_address0,
        syms_V48_ce0,
        syms_V48_q0,
        syms_V49_address0,
        syms_V49_ce0,
        syms_V49_q0
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_pp0_stage0 = 9'd8;
parameter    ap_ST_fsm_state10 = 9'd16;
parameter    ap_ST_fsm_pp1_stage0 = 9'd32;
parameter    ap_ST_fsm_state21 = 9'd64;
parameter    ap_ST_fsm_state22 = 9'd128;
parameter    ap_ST_fsm_state23 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [63:0] etxOut_ha_m_ccur1;
output   etxOut_ha_m_ccur1_ap_vld;
output  [31:0] etxOut_ha_m_cidx4;
output   etxOut_ha_m_cidx4_ap_vld;
output  [7:0] etxOut_ha_m_buf7_address0;
output   etxOut_ha_m_buf7_ce0;
output   etxOut_ha_m_buf7_we0;
output  [63:0] etxOut_ha_m_buf7_d0;
output  [63:0] etxOut_ba_m_ccur10;
output   etxOut_ba_m_ccur10_ap_vld;
output  [31:0] etxOut_ba_m_cidx13;
output   etxOut_ba_m_cidx13_ap_vld;
output  [7:0] etxOut_ba_m_buf16_address0;
output   etxOut_ba_m_buf16_ce0;
output   etxOut_ba_m_buf16_we0;
output  [63:0] etxOut_ba_m_buf16_d0;
output  [1:0] hist_m_omask_V_address0;
output   hist_m_omask_V_ce0;
input  [31:0] hist_m_omask_V_q0;
output  [1:0] hist_m_omask_V19_address0;
output   hist_m_omask_V19_ce0;
input  [31:0] hist_m_omask_V19_q0;
output  [1:0] hist_m_omask_V20_address0;
output   hist_m_omask_V20_ce0;
input  [31:0] hist_m_omask_V20_q0;
output  [1:0] hist_m_omask_V21_address0;
output   hist_m_omask_V21_ce0;
input  [31:0] hist_m_omask_V21_q0;
output  [1:0] hist_m_omask_V22_address0;
output   hist_m_omask_V22_ce0;
input  [31:0] hist_m_omask_V22_q0;
output  [1:0] hist_m_omask_V23_address0;
output   hist_m_omask_V23_ce0;
input  [31:0] hist_m_omask_V23_q0;
output  [1:0] hist_m_omask_V24_address0;
output   hist_m_omask_V24_ce0;
input  [31:0] hist_m_omask_V24_q0;
output  [1:0] hist_m_omask_V25_address0;
output   hist_m_omask_V25_ce0;
input  [31:0] hist_m_omask_V25_q0;
input  [4:0] hist_m_omask_V_offset_dout;
input   hist_m_omask_V_offset_empty_n;
output   hist_m_omask_V_offset_read;
output  [1:0] hist_m_maxcnt_V_address0;
output   hist_m_maxcnt_V_ce0;
input  [9:0] hist_m_maxcnt_V_q0;
output  [1:0] hist_m_maxcnt_V26_address0;
output   hist_m_maxcnt_V26_ce0;
input  [9:0] hist_m_maxcnt_V26_q0;
output  [1:0] hist_m_maxcnt_V27_address0;
output   hist_m_maxcnt_V27_ce0;
input  [9:0] hist_m_maxcnt_V27_q0;
output  [1:0] hist_m_maxcnt_V28_address0;
output   hist_m_maxcnt_V28_ce0;
input  [9:0] hist_m_maxcnt_V28_q0;
output  [1:0] hist_m_maxcnt_V29_address0;
output   hist_m_maxcnt_V29_ce0;
input  [9:0] hist_m_maxcnt_V29_q0;
output  [1:0] hist_m_maxcnt_V30_address0;
output   hist_m_maxcnt_V30_ce0;
input  [9:0] hist_m_maxcnt_V30_q0;
output  [1:0] hist_m_maxcnt_V31_address0;
output   hist_m_maxcnt_V31_ce0;
input  [9:0] hist_m_maxcnt_V31_q0;
output  [1:0] hist_m_maxcnt_V32_address0;
output   hist_m_maxcnt_V32_ce0;
input  [9:0] hist_m_maxcnt_V32_q0;
output  [1:0] hist_m_nobits_V_address0;
output   hist_m_nobits_V_ce0;
input  [3:0] hist_m_nobits_V_q0;
output  [1:0] hist_m_nobits_V33_address0;
output   hist_m_nobits_V33_ce0;
input  [3:0] hist_m_nobits_V33_q0;
output  [1:0] hist_m_nobits_V34_address0;
output   hist_m_nobits_V34_ce0;
input  [3:0] hist_m_nobits_V34_q0;
output  [1:0] hist_m_nobits_V35_address0;
output   hist_m_nobits_V35_ce0;
input  [3:0] hist_m_nobits_V35_q0;
output  [1:0] hist_m_nobits_V36_address0;
output   hist_m_nobits_V36_ce0;
input  [3:0] hist_m_nobits_V36_q0;
output  [1:0] hist_m_nobits_V37_address0;
output   hist_m_nobits_V37_ce0;
input  [3:0] hist_m_nobits_V37_q0;
output  [1:0] hist_m_nobits_V38_address0;
output   hist_m_nobits_V38_ce0;
input  [3:0] hist_m_nobits_V38_q0;
output  [1:0] hist_m_nobits_V39_address0;
output   hist_m_nobits_V39_ce0;
input  [3:0] hist_m_nobits_V39_q0;
output  [6:0] hist_m_bins_V_address0;
output   hist_m_bins_V_ce0;
input  [9:0] hist_m_bins_V_q0;
output  [5:0] hist_m_bins_V1_address0;
output   hist_m_bins_V1_ce0;
input  [9:0] hist_m_bins_V1_q0;
output  [6:0] hist_m_bins_V40_address0;
output   hist_m_bins_V40_ce0;
input  [9:0] hist_m_bins_V40_q0;
output  [5:0] hist_m_bins_V402_address0;
output   hist_m_bins_V402_ce0;
input  [9:0] hist_m_bins_V402_q0;
output  [6:0] hist_m_bins_V41_address0;
output   hist_m_bins_V41_ce0;
input  [9:0] hist_m_bins_V41_q0;
output  [5:0] hist_m_bins_V413_address0;
output   hist_m_bins_V413_ce0;
input  [9:0] hist_m_bins_V413_q0;
output  [6:0] hist_m_bins_V42_address0;
output   hist_m_bins_V42_ce0;
input  [9:0] hist_m_bins_V42_q0;
output  [5:0] hist_m_bins_V424_address0;
output   hist_m_bins_V424_ce0;
input  [9:0] hist_m_bins_V424_q0;
output  [6:0] hist_m_bins_V43_address0;
output   hist_m_bins_V43_ce0;
input  [9:0] hist_m_bins_V43_q0;
output  [5:0] hist_m_bins_V435_address0;
output   hist_m_bins_V435_ce0;
input  [9:0] hist_m_bins_V435_q0;
output  [6:0] hist_m_bins_V44_address0;
output   hist_m_bins_V44_ce0;
input  [9:0] hist_m_bins_V44_q0;
output  [5:0] hist_m_bins_V446_address0;
output   hist_m_bins_V446_ce0;
input  [9:0] hist_m_bins_V446_q0;
output  [6:0] hist_m_bins_V45_address0;
output   hist_m_bins_V45_ce0;
input  [9:0] hist_m_bins_V45_q0;
output  [5:0] hist_m_bins_V457_address0;
output   hist_m_bins_V457_ce0;
input  [9:0] hist_m_bins_V457_q0;
output  [6:0] hist_m_bins_V46_address0;
output   hist_m_bins_V46_ce0;
input  [9:0] hist_m_bins_V46_q0;
output  [5:0] hist_m_bins_V468_address0;
output   hist_m_bins_V468_ce0;
input  [9:0] hist_m_bins_V468_q0;
output  [12:0] syms_V_address0;
output   syms_V_ce0;
input  [11:0] syms_V_q0;
output  [12:0] syms_V47_address0;
output   syms_V47_ce0;
input  [11:0] syms_V47_q0;
output  [12:0] syms_V48_address0;
output   syms_V48_ce0;
input  [11:0] syms_V48_q0;
output  [12:0] syms_V49_address0;
output   syms_V49_ce0;
input  [11:0] syms_V49_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg etxOut_ha_m_ccur1_ap_vld;
reg etxOut_ha_m_cidx4_ap_vld;
reg[7:0] etxOut_ha_m_buf7_address0;
reg etxOut_ha_m_buf7_ce0;
reg etxOut_ha_m_buf7_we0;
reg[63:0] etxOut_ha_m_buf7_d0;
reg etxOut_ba_m_ccur10_ap_vld;
reg etxOut_ba_m_cidx13_ap_vld;
reg[7:0] etxOut_ba_m_buf16_address0;
reg etxOut_ba_m_buf16_ce0;
reg etxOut_ba_m_buf16_we0;
reg[63:0] etxOut_ba_m_buf16_d0;
reg hist_m_omask_V_ce0;
reg hist_m_omask_V19_ce0;
reg hist_m_omask_V20_ce0;
reg hist_m_omask_V21_ce0;
reg hist_m_omask_V22_ce0;
reg hist_m_omask_V23_ce0;
reg hist_m_omask_V24_ce0;
reg hist_m_omask_V25_ce0;
reg hist_m_omask_V_offset_read;
reg hist_m_maxcnt_V_ce0;
reg hist_m_maxcnt_V26_ce0;
reg hist_m_maxcnt_V27_ce0;
reg hist_m_maxcnt_V28_ce0;
reg hist_m_maxcnt_V29_ce0;
reg hist_m_maxcnt_V30_ce0;
reg hist_m_maxcnt_V31_ce0;
reg hist_m_maxcnt_V32_ce0;
reg hist_m_nobits_V_ce0;
reg hist_m_nobits_V33_ce0;
reg hist_m_nobits_V34_ce0;
reg hist_m_nobits_V35_ce0;
reg hist_m_nobits_V36_ce0;
reg hist_m_nobits_V37_ce0;
reg hist_m_nobits_V38_ce0;
reg hist_m_nobits_V39_ce0;
reg hist_m_bins_V_ce0;
reg hist_m_bins_V1_ce0;
reg hist_m_bins_V40_ce0;
reg hist_m_bins_V402_ce0;
reg hist_m_bins_V41_ce0;
reg hist_m_bins_V413_ce0;
reg hist_m_bins_V42_ce0;
reg hist_m_bins_V424_ce0;
reg hist_m_bins_V43_ce0;
reg hist_m_bins_V435_ce0;
reg hist_m_bins_V44_ce0;
reg hist_m_bins_V446_ce0;
reg hist_m_bins_V45_ce0;
reg hist_m_bins_V457_ce0;
reg hist_m_bins_V46_ce0;
reg hist_m_bins_V468_ce0;
reg[12:0] syms_V_address0;
reg syms_V_ce0;
reg[12:0] syms_V47_address0;
reg syms_V47_ce0;
reg[12:0] syms_V48_address0;
reg syms_V48_ce0;
reg[12:0] syms_V49_address0;
reg syms_V49_ce0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    hist_m_omask_V_offset_blk_n;
reg   [5:0] i_assign_reg_998;
reg   [5:0] i_assign_reg_998_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state8_pp0_stage0_iter4;
wire    ap_block_state9_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_11001;
reg   [9:0] p_070_0_i_i_reg_1010;
reg   [9:0] p_030_0_i1_i_reg_1022;
reg   [9:0] p_030_0_i1_i_reg_1022_pp0_iter3_reg;
reg   [31:0] etx_ha_m_idx_i_reg_1080;
reg   [31:0] etx_ha_m_idx_i_reg_1080_pp0_iter4_reg;
reg   [31:0] nbits_assign_reg_1092;
reg   [31:0] p_0100_0_i_i_reg_1104;
reg   [63:0] syms_pn_rec_i_reg_1132;
reg   [11:0] p_i_reg_1143;
reg   [10:0] etx_cv_m_lo_V_reg_1152;
reg   [11:0] etx_cv_m_hi_V_reg_1164;
wire   [1:0] tmp_271_fu_1242_p1;
reg   [1:0] tmp_271_reg_2895;
reg    ap_block_state1;
reg   [2:0] tmp_s_reg_2900;
wire   [2:0] tmp_272_fu_1256_p1;
reg   [2:0] tmp_272_reg_2905;
wire   [1:0] tmp_109_fu_1260_p4;
reg   [1:0] tmp_109_reg_2912;
reg   [1:0] hist_m_nobits_V_addr_reg_2958;
reg   [1:0] hist_m_nobits_V33_ad_reg_2963;
reg   [1:0] hist_m_nobits_V34_ad_reg_2968;
reg   [1:0] hist_m_nobits_V35_ad_reg_2973;
reg   [1:0] hist_m_nobits_V36_ad_reg_2978;
reg   [1:0] hist_m_nobits_V37_ad_reg_2983;
reg   [1:0] hist_m_nobits_V38_ad_reg_2988;
reg   [1:0] hist_m_nobits_V39_ad_reg_2993;
reg   [1:0] hist_m_omask_V_addr_reg_2998;
reg   [1:0] hist_m_omask_V19_add_reg_3003;
reg   [1:0] hist_m_omask_V20_add_reg_3008;
reg   [1:0] hist_m_omask_V21_add_reg_3013;
reg   [1:0] hist_m_omask_V22_add_reg_3018;
reg   [1:0] hist_m_omask_V23_add_reg_3023;
reg   [1:0] hist_m_omask_V24_add_reg_3028;
reg   [1:0] hist_m_omask_V25_add_reg_3033;
wire   [12:0] tmp_107_fu_1303_p3;
reg   [12:0] tmp_107_reg_3038;
wire    ap_CS_fsm_state2;
reg   [9:0] p_Result_94_fu_1339_p4;
reg   [9:0] p_Result_94_reg_3063;
wire   [14:0] tmp_136_cast_fu_1349_p1;
reg   [14:0] tmp_136_cast_reg_3068;
wire    ap_CS_fsm_state3;
wire   [6:0] p_shl_cast_fu_1362_p1;
reg   [6:0] p_shl_cast_reg_3073;
wire   [6:0] tmp_111_fu_1366_p2;
reg   [6:0] tmp_111_reg_3078;
wire   [11:0] grp_fu_1185_p6;
reg   [11:0] prv_V_reg_3083;
wire   [31:0] nbits_7_fu_1387_p2;
reg   [31:0] nbits_7_reg_3088;
wire   [31:0] bits_V_fu_1407_p2;
wire   [0:0] tmp_462_i_fu_1413_p2;
reg   [0:0] tmp_462_i_reg_3099;
reg   [0:0] tmp_462_i_reg_3099_pp0_iter1_reg;
reg   [0:0] tmp_462_i_reg_3099_pp0_iter2_reg;
reg   [0:0] tmp_462_i_reg_3099_pp0_iter3_reg;
reg   [0:0] tmp_462_i_reg_3099_pp0_iter4_reg;
wire   [5:0] ibin_fu_1419_p2;
reg   [5:0] ibin_reg_3103;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_277_fu_1425_p3;
reg   [0:0] tmp_277_reg_3108;
reg   [0:0] tmp_277_reg_3108_pp0_iter1_reg;
reg   [0:0] tmp_277_reg_3108_pp0_iter2_reg;
reg   [0:0] tmp_277_reg_3108_pp0_iter3_reg;
reg   [0:0] tmp_277_reg_3108_pp0_iter4_reg;
wire   [0:0] tmp_278_fu_1458_p3;
reg   [0:0] tmp_278_reg_3112;
wire   [0:0] tmp_282_fu_1466_p1;
reg   [0:0] tmp_282_reg_3116;
wire   [9:0] left_V_fu_1518_p2;
reg   [9:0] left_V_reg_3200;
wire   [9:0] total_V_fu_1529_p2;
reg    ap_enable_reg_pp0_iter2;
wire   [31:0] left_cast_i_fu_1549_p1;
reg   [31:0] left_cast_i_reg_3210;
wire   [31:0] overrun_fu_1553_p2;
reg   [31:0] overrun_reg_3215;
wire   [0:0] tmp_464_i_fu_1559_p2;
reg   [0:0] tmp_464_i_reg_3220;
reg   [0:0] tmp_276_reg_3226;
reg   [0:0] tmp_276_reg_3226_pp0_iter4_reg;
wire   [31:0] etx_ha_m_idx_fu_1573_p2;
reg   [31:0] etx_ha_m_idx_reg_3230;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] etx_ha_m_idx_reg_3230_pp0_iter4_reg;
wire   [31:0] p_mbits_0_i_i_fu_1615_p3;
reg   [31:0] p_mbits_0_i_i_reg_3236;
reg    ap_enable_reg_pp0_iter4;
wire   [63:0] etx_ha_m_cur_fu_1677_p3;
reg   [63:0] etx_ha_m_cur_reg_3246;
wire   [31:0] bits_V_5_fu_1695_p1;
wire   [63:0] etx_ha_m_cur_10_load_1_load_fu_1714_p1;
reg    ap_enable_reg_pp0_iter5;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state11_pp1_stage0_iter0;
wire    ap_block_state12_pp1_stage0_iter1;
wire    ap_block_state13_pp1_stage0_iter2;
wire    ap_block_state14_pp1_stage0_iter3;
wire    ap_block_state15_pp1_stage0_iter4;
wire    ap_block_state16_pp1_stage0_iter5;
wire    ap_block_state17_pp1_stage0_iter6;
wire    ap_block_state18_pp1_stage0_iter7;
wire    ap_block_state19_pp1_stage0_iter8;
wire    ap_block_state20_pp1_stage0_iter9;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] exitcond_fu_1763_p2;
reg   [0:0] exitcond_reg_3327;
reg   [0:0] exitcond_reg_3327_pp1_iter1_reg;
reg   [0:0] exitcond_reg_3327_pp1_iter2_reg;
reg   [0:0] exitcond_reg_3327_pp1_iter3_reg;
reg   [0:0] exitcond_reg_3327_pp1_iter4_reg;
reg   [0:0] exitcond_reg_3327_pp1_iter5_reg;
wire   [63:0] phitmp2_i_fu_1769_p2;
reg    ap_enable_reg_pp1_iter0;
reg   [11:0] cur_V_reg_3336;
reg    ap_enable_reg_pp1_iter1;
wire   [11:0] r_V_i_fu_1775_p2;
reg   [11:0] r_V_i_reg_3341;
wire   [12:0] tmp_486_i_fu_1795_p2;
reg   [12:0] tmp_486_i_reg_3347;
wire   [12:0] ovr_V_3_fu_1861_p3;
reg   [12:0] ovr_V_3_reg_3352;
reg   [12:0] ovr_V_3_reg_3352_pp1_iter3_reg;
wire   [0:0] tmp_507_i_fu_1897_p2;
reg   [0:0] tmp_507_i_reg_3369;
reg   [0:0] tmp_507_i_reg_3369_pp1_iter3_reg;
reg   [0:0] tmp_507_i_reg_3369_pp1_iter4_reg;
wire   [9:0] table_i_q0;
reg   [9:0] table_i_load_reg_3373;
reg    ap_enable_reg_pp1_iter3;
wire   [9:0] table_i_q1;
reg   [9:0] table_i_load_3_reg_3378;
wire   [6:0] nbits_assign_3_cast_s_fu_1916_p1;
reg   [6:0] nbits_assign_3_cast_s_reg_3383;
wire   [6:0] left_9_fu_1924_p2;
reg   [6:0] left_9_reg_3388;
wire   [6:0] overrun_9_fu_1930_p2;
reg   [6:0] overrun_9_reg_3393;
wire   [0:0] tmp_513_i_fu_1936_p2;
reg   [0:0] tmp_513_i_reg_3398;
wire   [0:0] tmp_293_fu_1942_p3;
reg   [0:0] tmp_293_reg_3404;
reg   [0:0] tmp_293_reg_3404_pp1_iter4_reg;
reg   [25:0] wrdIdx_7_reg_3408;
reg   [25:0] wrdIdx_7_reg_3408_pp1_iter4_reg;
wire   [23:0] grp_fu_2868_p3;
reg   [23:0] r_V_42_reg_3413;
reg    ap_enable_reg_pp1_iter4;
wire   [23:0] grp_fu_2877_p3;
reg   [23:0] r_V_44_reg_3419;
wire   [11:0] cv_m_lo_V_3_fu_2042_p4;
reg   [11:0] cv_m_lo_V_3_reg_3424;
reg   [11:0] cv_m_lo_V_3_reg_3424_pp1_iter5_reg;
wire   [63:0] etx_ha_m_cur_8_fu_2103_p3;
reg   [63:0] etx_ha_m_cur_8_reg_3430;
wire   [11:0] r_V_51_fu_2121_p2;
reg   [11:0] r_V_51_reg_3435;
wire   [3:0] nsame_V_fu_2174_p1;
reg   [3:0] nsame_V_reg_3441;
wire   [3:0] nreduce_V_fu_2273_p1;
reg   [3:0] nreduce_V_reg_3449;
wire   [10:0] r_V_55_fu_2285_p2;
reg    ap_enable_reg_pp1_iter5;
wire   [11:0] cv_m_hi_V_fu_2324_p2;
reg   [31:0] etx_ba_m_idx_4_load_reg_3464;
reg    ap_enable_reg_pp1_iter6;
reg   [31:0] etx_ba_m_idx_4_load_reg_3464_pp1_iter7_reg;
reg   [31:0] etx_ba_m_idx_4_load_reg_3464_pp1_iter8_reg;
wire   [5:0] cur_bidx_6_fu_2333_p1;
reg   [5:0] cur_bidx_6_reg_3470;
wire   [0:0] tmp_525_i_fu_2350_p2;
reg   [0:0] tmp_525_i_reg_3476;
reg   [0:0] tmp_525_i_reg_3476_pp1_iter7_reg;
reg   [0:0] tmp_525_i_reg_3476_pp1_iter8_reg;
reg   [31:0] etx_tofollow_load_3_reg_3480;
wire   [11:0] r_V_54_fu_2398_p3;
reg   [11:0] r_V_54_reg_3486;
wire   [31:0] nebits_fu_2406_p2;
reg   [31:0] nebits_reg_3492;
reg   [31:0] nebits_reg_3492_pp1_iter7_reg;
wire  signed [31:0] p_0_1_0_i_cast_i_fu_2418_p1;
reg  signed [31:0] p_0_1_0_i_cast_i_reg_3498;
wire   [0:0] tmp_299_fu_2422_p3;
reg   [0:0] tmp_299_reg_3504;
wire   [31:0] tmp_537_i_fu_2430_p2;
reg   [31:0] tmp_537_i_reg_3510;
wire   [11:0] tmp_256_i_fu_2564_p2;
reg   [11:0] tmp_256_i_reg_3515;
reg   [51:0] tmp_257_i_reg_3520;
wire   [31:0] left_7_cast_i_fu_2589_p1;
reg   [31:0] left_7_cast_i_reg_3525;
wire   [31:0] overrun_10_fu_2593_p2;
reg   [31:0] overrun_10_reg_3530;
wire   [0:0] tmp_546_i_fu_2598_p2;
reg   [0:0] tmp_546_i_reg_3535;
reg   [0:0] tmp_302_reg_3541;
reg   [0:0] tmp_302_reg_3541_pp1_iter8_reg;
wire   [63:0] etx_ba_m_cur_8_fu_2649_p2;
reg   [63:0] etx_ba_m_cur_8_reg_3545;
wire   [31:0] nbits_assign_s_fu_2684_p2;
reg   [31:0] nbits_assign_s_reg_3550;
wire    ap_CS_fsm_state21;
wire   [0:0] tmp_40_fu_2766_p2;
reg   [0:0] tmp_40_reg_3556;
reg   [62:0] tmp_41_reg_3561;
wire   [31:0] left_5_cast_i_fu_2791_p1;
reg   [31:0] left_5_cast_i_reg_3566;
wire   [31:0] overrun_8_fu_2795_p2;
reg   [31:0] overrun_8_reg_3571;
wire   [0:0] tmp_498_i_fu_2801_p2;
reg   [0:0] tmp_498_i_reg_3576;
reg   [0:0] tmp_286_reg_3582;
wire   [63:0] buf_21_fu_2815_p3;
reg   [63:0] buf_21_reg_3586;
wire    ap_CS_fsm_state22;
wire   [63:0] etx_ba_m_cur_fu_2852_p2;
reg   [63:0] etx_ba_m_cur_reg_3591;
wire    ap_block_pp0_stage0_subdone;
reg    ap_predicate_tran9to10_state4;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state10;
wire    ap_block_pp1_stage0_subdone;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter7;
reg    ap_condition_pp1_exit_iter6_state17;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg   [5:0] table_i_address0;
reg    table_i_ce0;
reg    table_i_we0;
wire   [5:0] table_i_address1;
reg    table_i_ce1;
reg   [5:0] ap_phi_mux_i_assign_phi_fu_1002_p4;
wire    ap_block_pp0_stage0;
reg   [9:0] ap_phi_mux_p_030_0_i1_i_phi_fu_1026_p34;
reg   [9:0] ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_1022;
wire   [9:0] ap_phi_reg_pp0_iter0_p_030_0_i1_i_reg_1022;
reg   [9:0] ap_phi_reg_pp0_iter1_p_030_0_i1_i_reg_1022;
reg   [31:0] ap_phi_mux_etx_ha_m_idx_i_phi_fu_1084_p4;
reg   [31:0] ap_phi_mux_nbits_assign_phi_fu_1096_p4;
reg   [31:0] BitStream64_m_idx_re_reg_1113;
reg   [63:0] BitStream64_m_cur_re_reg_1123;
reg   [11:0] ap_phi_mux_p_i_phi_fu_1146_p4;
wire    ap_block_pp1_stage0;
reg   [10:0] ap_phi_mux_etx_cv_m_lo_V_phi_fu_1156_p4;
reg   [11:0] ap_phi_mux_etx_cv_m_hi_V_phi_fu_1168_p4;
reg   [63:0] ap_phi_mux_BitStream64_m_cur_re_6_phi_fu_1178_p4;
wire    ap_CS_fsm_state23;
wire   [63:0] newIndex63_cast_i_fu_1270_p1;
wire   [63:0] tmp_108_fu_1310_p1;
wire   [63:0] tmp_142_cast_fu_1489_p1;
wire   [63:0] tmp_143_cast_fu_1506_p1;
wire   [63:0] tmp_463_i_fu_1524_p1;
wire   [63:0] tmp_i18_i_fu_1709_p1;
wire   [63:0] tmp_144_cast_fu_1751_p1;
wire   [63:0] tmp_501_i_fu_1877_p1;
wire   [63:0] tmp_502_i_fu_1892_p1;
wire   [63:0] tmp_i316_i_fu_2145_p1;
wire   [63:0] tmp_i515_i_fu_2665_p1;
wire   [63:0] tmp_i1017_i_fu_2858_p1;
reg   [63:0] etx_ha_m_cur_10_fu_320;
wire   [63:0] etx_ha_m_cur_7_fu_1625_p1;
reg   [12:0] ovr_V_4_fu_328;
reg   [31:0] etx_tofollow_fu_332;
wire   [31:0] npending_3_fu_2442_p1;
wire   [31:0] npending_fu_2460_p2;
reg   [63:0] BitStream64_m_cur_re_5_fu_336;
wire   [63:0] etx_ha_m_cur_9_fu_2051_p1;
reg   [31:0] BitStream64_m_idx_re_3_fu_340;
wire   [31:0] etx_ha_m_idx_3_fu_1966_p2;
reg   [63:0] etx_ba_m_cur_9_fu_344;
wire   [63:0] buf_20_fu_2612_p3;
reg   [31:0] etx_ba_m_idx_4_fu_348;
wire   [31:0] etx_ba_m_idx_fu_2436_p2;
reg   [31:0] grp_fu_1233_p1;
wire   [9:0] maxcnt_V_fu_1318_p10;
wire   [5:0] tmp_110_fu_1355_p3;
wire   [6:0] newIndex63_cast_i_ca_fu_1352_p1;
wire   [31:0] p_Result_95_fu_1372_p3;
reg   [31:0] tmp_i_fu_1379_p3;
wire   [15:0] tmp_273_fu_1393_p1;
wire   [3:0] grp_fu_1198_p10;
wire   [31:0] tmp_461_i_fu_1397_p4;
wire   [31:0] p_Val2_62_fu_1437_p10;
wire   [31:0] i_assign_cast24_i_fu_1433_p1;
wire   [4:0] tmp_283_fu_1470_p4;
wire   [6:0] newIndex64_i_cast_fu_1480_p1;
wire   [6:0] tmp_113_fu_1484_p2;
wire   [6:0] tmp_114_fu_1501_p2;
wire   [5:0] cur_bidx_fu_1535_p1;
wire   [6:0] cur_bidx_cast_i_fu_1539_p1;
wire   [6:0] left_fu_1543_p2;
reg   [9:0] p_Result_96_fu_1579_p4;
wire   [31:0] p_Result_97_fu_1588_p3;
reg   [31:0] tmp_474_i_fu_1596_p3;
wire   [31:0] nbits_fu_1604_p2;
wire   [0:0] tmp_479_i_fu_1610_p2;
wire   [31:0] shift_fu_1629_p3;
wire   [63:0] tmp_465_i_fu_1635_p1;
wire   [31:0] tmp_468_i_fu_1645_p2;
wire   [63:0] tmp_466_i_fu_1639_p2;
wire   [31:0] tmp_275_fu_1657_p1;
wire   [31:0] tmp_469_i_fu_1650_p3;
wire   [31:0] tmp_38_fu_1667_p4;
wire   [31:0] tmp_37_fu_1661_p2;
wire   [25:0] wrdIdx_fu_1699_p4;
wire   [14:0] tmp_279_fu_1742_p1;
wire   [14:0] tmp_112_fu_1746_p2;
wire   [31:0] tmp_281_fu_1759_p1;
wire   [12:0] r_V_fu_1781_p3;
wire   [12:0] tmp_485_i_fu_1789_p2;
wire   [11:0] tmp_288_fu_1804_p2;
wire   [11:0] tmp_487_i_fu_1816_p2;
wire   [0:0] tmp_289_fu_1809_p3;
wire   [12:0] tmp_487_cast_i_fu_1822_p1;
wire   [12:0] storemerge_i_fu_1826_p3;
wire   [13:0] tmp_491_cast_i_fu_1833_p1;
wire   [13:0] diff_fu_1837_p2;
wire   [0:0] tmp_290_fu_1843_p3;
wire   [12:0] ovr_V_fu_1851_p2;
wire   [4:0] idx_V_fu_1857_p1;
wire   [4:0] idx_V_3_fu_1869_p3;
wire   [5:0] lhs_V_cast_i_fu_1882_p1;
wire   [5:0] r_V_40_fu_1886_p2;
wire   [5:0] cur_bidx_7_fu_1908_p1;
wire   [6:0] cur_bidx_6_cast_i_fu_1920_p1;
wire   [31:0] nbits_assign_1_fu_1912_p1;
wire   [12:0] range_V_fu_1977_p1;
wire   [12:0] tmp_503_i_fu_1981_p1;
wire   [12:0] range_V_5_fu_1985_p2;
wire   [20:0] xlo_V_3_fu_1997_p3;
wire   [21:0] xlo_V_4_cast_i_fu_2005_p1;
wire   [12:0] range_V_6_fu_1991_p2;
wire   [21:0] xlo_V_fu_2009_p2;
wire   [6:0] shift_9_fu_2054_p3;
wire   [63:0] tmp_514_i_fu_2059_p1;
wire   [12:0] tmp_517_cast_i_fu_2069_p1;
wire   [12:0] tmp_518_i_fu_2072_p2;
wire   [63:0] tmp_515_i_fu_2063_p2;
wire   [12:0] tmp_292_fu_2083_p1;
wire   [12:0] tmp_519_i_fu_2077_p3;
wire   [50:0] tmp_45_fu_2093_p4;
wire   [12:0] tmp_44_fu_2087_p2;
wire   [11:0] cv_m_hi_V_6_fu_2026_p4;
reg   [11:0] p_Result_98_fu_2149_p4;
wire   [31:0] p_Result_99_fu_2158_p3;
reg   [31:0] val_assign_s_fu_2166_p3;
wire   [10:0] cv_m_hi_V_3_cast_fu_2127_p4;
wire   [10:0] cv_m_lo_V_3_cast_fu_2136_p4;
wire   [10:0] rhs_V_15_fu_2178_p2;
wire   [10:0] r_V_46_fu_2184_p2;
wire   [10:0] nbits_assign_4_cast_s_fu_2190_p1;
wire   [10:0] r_V_52_fu_2194_p2;
wire   [0:0] tmp_295_fu_2200_p3;
wire   [10:0] tmp_254_i_fu_2216_p2;
wire   [10:0] p_5_i_fu_2222_p2;
wire   [11:0] tmp_524_i_fu_2228_p3;
wire   [11:0] phitmp_i_fu_2236_p2;
wire   [11:0] pending_V_fu_2242_p2;
reg   [11:0] p_Result_100_fu_2247_p4;
wire   [31:0] p_Result_101_fu_2257_p3;
reg   [31:0] val_assign_3_fu_2265_p3;
wire   [10:0] tmp_555_cast_i_cast_fu_2281_p1;
reg   [11:0] p_Result_92_fu_2291_p4;
wire   [12:0] r_V_9_fu_2300_p3;
wire   [12:0] tmp_555_cast19_i_fu_2277_p1;
wire   [12:0] tmp_558_i_fu_2308_p2;
reg   [11:0] p_Result_93_fu_2314_p4;
wire   [11:0] hi_mask_V_3_fu_2208_p3;
wire   [4:0] nbits_assign_4_cast2_fu_2343_p1;
wire  signed [4:0] r_V_53_fu_2355_p2;
wire   [4:0] tmp_531_i_fu_2373_p2;
wire   [14:0] lhs_V_15_cast_i_fu_2337_p1;
wire   [14:0] tmp_531_cast_i_fu_2379_p1;
wire  signed [11:0] tmp_528_cast21_i_fu_2369_p1;
wire   [14:0] tmp_532_i_fu_2383_p2;
wire   [0:0] tmp_297_fu_2361_p3;
wire   [11:0] tmp_298_fu_2394_p1;
wire   [11:0] tmp_529_i_fu_2389_p2;
wire   [31:0] nbits_assign_2_fu_2340_p1;
wire   [4:0] p_0_1_0_i_i_fu_2412_p2;
wire   [3:0] mpending_V_fu_2346_p2;
wire   [31:0] tmp_526_i_fu_2456_p1;
wire   [63:0] leading_bit_3_fu_2476_p1;
wire   [63:0] tmp_538_i_fu_2479_p1;
wire   [63:0] tmp_540_i_fu_2496_p1;
wire   [63:0] tmp_541_i_fu_2499_p2;
wire   [63:0] tmp_542_i_fu_2505_p2;
wire   [63:0] tmp_543_i_fu_2511_p1;
wire   [63:0] buf_17_fu_2482_p2;
wire   [63:0] tmp_544_i_fu_2514_p2;
wire   [0:0] tmp_535_i_fu_2471_p2;
wire   [0:0] sel_tmp7_fu_2526_p2;
wire   [0:0] sel_tmp8_fu_2532_p2;
reg   [11:0] p_Result_s_fu_2488_p4;
wire   [63:0] buf_18_fu_2520_p2;
wire   [63:0] sel_tmp2_fu_2544_p3;
wire   [63:0] buf_1_i_i_fu_2552_p3;
wire   [11:0] tmp_301_fu_2560_p1;
wire   [11:0] bits_V_assign_3_fu_2537_p3;
wire   [6:0] cur_bidx_7_cast_i_fu_2580_p1;
wire   [6:0] left_10_fu_2583_p2;
wire   [31:0] shift_10_fu_2618_p3;
wire   [63:0] tmp_547_i_fu_2623_p1;
wire   [63:0] tmp_549_i_fu_2633_p1;
wire   [63:0] tmp_550_i_fu_2636_p2;
wire   [63:0] tmp_551_i_fu_2642_p3;
wire   [63:0] tmp_548_i_fu_2627_p2;
wire   [25:0] grp_fu_1233_p4;
wire   [31:0] tofollow_fu_2670_p2;
wire   [0:0] bit_V_fu_2676_p3;
wire   [63:0] leading_bit_fu_2696_p1;
wire   [63:0] tmp_489_i_fu_2700_p1;
wire   [63:0] tmp_493_i_fu_2710_p2;
wire   [63:0] buf_fu_2704_p2;
wire   [63:0] tmp_494_i_fu_2716_p2;
wire   [0:0] tmp_484_i_fu_2690_p2;
wire   [63:0] buf_15_fu_2722_p2;
wire   [0:0] sel_tmp9_fu_2742_p2;
wire   [0:0] sel_tmp1_fu_2748_p2;
wire   [63:0] sel_tmp_fu_2734_p3;
wire   [63:0] buf_1_i_i_i_fu_2754_p3;
wire   [0:0] tmp_285_fu_2762_p1;
wire   [0:0] tmp_496_i_fu_2728_p2;
wire   [6:0] cur_bidx_5_cast_i_fu_2782_p1;
wire   [6:0] left_8_fu_2785_p2;
wire   [31:0] shift_8_fu_2821_p3;
wire   [63:0] tmp_499_i_fu_2826_p1;
wire   [63:0] tmp_508_i_fu_2836_p1;
wire   [63:0] tmp_509_i_fu_2839_p2;
wire   [63:0] tmp_510_i_fu_2845_p3;
wire   [63:0] tmp_500_i_fu_2830_p2;
wire   [12:0] grp_fu_2868_p0;
wire   [22:0] lhs_V_fu_2015_p1;
wire   [9:0] grp_fu_2868_p1;
wire   [21:0] grp_fu_2868_p2;
wire   [12:0] grp_fu_2877_p0;
wire   [9:0] grp_fu_2877_p1;
wire   [20:0] grp_fu_2877_p2;
reg   [8:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [22:0] grp_fu_2868_p10;
wire   [23:0] grp_fu_2868_p20;
wire   [22:0] grp_fu_2877_p10;
wire   [23:0] grp_fu_2877_p20;
reg    ap_condition_2184;
reg    ap_condition_2190;
reg    ap_condition_955;
reg    ap_condition_863;
reg    ap_condition_880;
reg    ap_condition_885;
reg    ap_condition_891;
reg    ap_condition_894;
reg    ap_condition_900;
reg    ap_condition_903;
reg    ap_condition_909;
reg    ap_condition_912;
reg    ap_condition_918;
reg    ap_condition_921;
reg    ap_condition_927;
reg    ap_condition_930;
reg    ap_condition_936;
reg    ap_condition_939;
reg    ap_condition_945;
reg    ap_condition_948;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 9'd1;
#0 i_assign_reg_998 = 6'd0;
#0 i_assign_reg_998_pp0_iter1_reg = 6'd0;
#0 p_070_0_i_i_reg_1010 = 10'd0;
#0 p_030_0_i1_i_reg_1022 = 10'd0;
#0 p_030_0_i1_i_reg_1022_pp0_iter3_reg = 10'd0;
#0 etx_ha_m_idx_i_reg_1080 = 32'd0;
#0 etx_ha_m_idx_i_reg_1080_pp0_iter4_reg = 32'd0;
#0 nbits_assign_reg_1092 = 32'd0;
#0 p_0100_0_i_i_reg_1104 = 32'd0;
#0 syms_pn_rec_i_reg_1132 = 64'd0;
#0 p_i_reg_1143 = 12'd0;
#0 etx_cv_m_lo_V_reg_1152 = 11'd0;
#0 etx_cv_m_hi_V_reg_1164 = 12'd0;
#0 tmp_271_reg_2895 = 2'd0;
#0 tmp_s_reg_2900 = 3'd0;
#0 tmp_272_reg_2905 = 3'd0;
#0 tmp_109_reg_2912 = 2'd0;
#0 hist_m_nobits_V_addr_reg_2958 = 2'd0;
#0 hist_m_nobits_V33_ad_reg_2963 = 2'd0;
#0 hist_m_nobits_V34_ad_reg_2968 = 2'd0;
#0 hist_m_nobits_V35_ad_reg_2973 = 2'd0;
#0 hist_m_nobits_V36_ad_reg_2978 = 2'd0;
#0 hist_m_nobits_V37_ad_reg_2983 = 2'd0;
#0 hist_m_nobits_V38_ad_reg_2988 = 2'd0;
#0 hist_m_nobits_V39_ad_reg_2993 = 2'd0;
#0 hist_m_omask_V_addr_reg_2998 = 2'd0;
#0 hist_m_omask_V19_add_reg_3003 = 2'd0;
#0 hist_m_omask_V20_add_reg_3008 = 2'd0;
#0 hist_m_omask_V21_add_reg_3013 = 2'd0;
#0 hist_m_omask_V22_add_reg_3018 = 2'd0;
#0 hist_m_omask_V23_add_reg_3023 = 2'd0;
#0 hist_m_omask_V24_add_reg_3028 = 2'd0;
#0 hist_m_omask_V25_add_reg_3033 = 2'd0;
#0 tmp_107_reg_3038 = 13'd0;
#0 p_Result_94_reg_3063 = 10'd0;
#0 tmp_136_cast_reg_3068 = 15'd0;
#0 p_shl_cast_reg_3073 = 7'd0;
#0 tmp_111_reg_3078 = 7'd0;
#0 prv_V_reg_3083 = 12'd0;
#0 nbits_7_reg_3088 = 32'd0;
#0 tmp_462_i_reg_3099 = 1'd0;
#0 tmp_462_i_reg_3099_pp0_iter1_reg = 1'd0;
#0 tmp_462_i_reg_3099_pp0_iter2_reg = 1'd0;
#0 tmp_462_i_reg_3099_pp0_iter3_reg = 1'd0;
#0 tmp_462_i_reg_3099_pp0_iter4_reg = 1'd0;
#0 ibin_reg_3103 = 6'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 tmp_277_reg_3108 = 1'd0;
#0 tmp_277_reg_3108_pp0_iter1_reg = 1'd0;
#0 tmp_277_reg_3108_pp0_iter2_reg = 1'd0;
#0 tmp_277_reg_3108_pp0_iter3_reg = 1'd0;
#0 tmp_277_reg_3108_pp0_iter4_reg = 1'd0;
#0 tmp_278_reg_3112 = 1'd0;
#0 tmp_282_reg_3116 = 1'd0;
#0 left_V_reg_3200 = 10'd0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 left_cast_i_reg_3210 = 32'd0;
#0 overrun_reg_3215 = 32'd0;
#0 tmp_464_i_reg_3220 = 1'd0;
#0 tmp_276_reg_3226 = 1'd0;
#0 tmp_276_reg_3226_pp0_iter4_reg = 1'd0;
#0 etx_ha_m_idx_reg_3230 = 32'd0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 etx_ha_m_idx_reg_3230_pp0_iter4_reg = 32'd0;
#0 p_mbits_0_i_i_reg_3236 = 32'd0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 etx_ha_m_cur_reg_3246 = 64'd0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 exitcond_reg_3327 = 1'd0;
#0 exitcond_reg_3327_pp1_iter1_reg = 1'd0;
#0 exitcond_reg_3327_pp1_iter2_reg = 1'd0;
#0 exitcond_reg_3327_pp1_iter3_reg = 1'd0;
#0 exitcond_reg_3327_pp1_iter4_reg = 1'd0;
#0 exitcond_reg_3327_pp1_iter5_reg = 1'd0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 cur_V_reg_3336 = 12'd0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 r_V_i_reg_3341 = 12'd0;
#0 tmp_486_i_reg_3347 = 13'd0;
#0 ovr_V_3_reg_3352 = 13'd0;
#0 ovr_V_3_reg_3352_pp1_iter3_reg = 13'd0;
#0 tmp_507_i_reg_3369 = 1'd0;
#0 tmp_507_i_reg_3369_pp1_iter3_reg = 1'd0;
#0 tmp_507_i_reg_3369_pp1_iter4_reg = 1'd0;
#0 table_i_load_reg_3373 = 10'd0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 table_i_load_3_reg_3378 = 10'd0;
#0 nbits_assign_3_cast_s_reg_3383 = 7'd0;
#0 left_9_reg_3388 = 7'd0;
#0 overrun_9_reg_3393 = 7'd0;
#0 tmp_513_i_reg_3398 = 1'd0;
#0 tmp_293_reg_3404 = 1'd0;
#0 tmp_293_reg_3404_pp1_iter4_reg = 1'd0;
#0 wrdIdx_7_reg_3408 = 26'd0;
#0 wrdIdx_7_reg_3408_pp1_iter4_reg = 26'd0;
#0 r_V_42_reg_3413 = 24'd0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 r_V_44_reg_3419 = 24'd0;
#0 cv_m_lo_V_3_reg_3424 = 12'd0;
#0 cv_m_lo_V_3_reg_3424_pp1_iter5_reg = 12'd0;
#0 etx_ha_m_cur_8_reg_3430 = 64'd0;
#0 r_V_51_reg_3435 = 12'd0;
#0 nsame_V_reg_3441 = 4'd0;
#0 nreduce_V_reg_3449 = 4'd0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 etx_ba_m_idx_4_load_reg_3464 = 32'd0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 etx_ba_m_idx_4_load_reg_3464_pp1_iter7_reg = 32'd0;
#0 etx_ba_m_idx_4_load_reg_3464_pp1_iter8_reg = 32'd0;
#0 cur_bidx_6_reg_3470 = 6'd0;
#0 tmp_525_i_reg_3476 = 1'd0;
#0 tmp_525_i_reg_3476_pp1_iter7_reg = 1'd0;
#0 tmp_525_i_reg_3476_pp1_iter8_reg = 1'd0;
#0 etx_tofollow_load_3_reg_3480 = 32'd0;
#0 r_V_54_reg_3486 = 12'd0;
#0 nebits_reg_3492 = 32'd0;
#0 nebits_reg_3492_pp1_iter7_reg = 32'd0;
#0 p_0_1_0_i_cast_i_reg_3498 = 32'd0;
#0 tmp_299_reg_3504 = 1'd0;
#0 tmp_537_i_reg_3510 = 32'd0;
#0 tmp_256_i_reg_3515 = 12'd0;
#0 tmp_257_i_reg_3520 = 52'd0;
#0 left_7_cast_i_reg_3525 = 32'd0;
#0 overrun_10_reg_3530 = 32'd0;
#0 tmp_546_i_reg_3535 = 1'd0;
#0 tmp_302_reg_3541 = 1'd0;
#0 tmp_302_reg_3541_pp1_iter8_reg = 1'd0;
#0 etx_ba_m_cur_8_reg_3545 = 64'd0;
#0 nbits_assign_s_reg_3550 = 32'd0;
#0 tmp_40_reg_3556 = 1'd0;
#0 tmp_41_reg_3561 = 63'd0;
#0 left_5_cast_i_reg_3566 = 32'd0;
#0 overrun_8_reg_3571 = 32'd0;
#0 tmp_498_i_reg_3576 = 1'd0;
#0 tmp_286_reg_3582 = 1'd0;
#0 buf_21_reg_3586 = 64'd0;
#0 etx_ba_m_cur_reg_3591 = 64'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_1022 = 10'd0;
#0 ap_phi_reg_pp0_iter1_p_030_0_i1_i_reg_1022 = 10'd0;
#0 BitStream64_m_idx_re_reg_1113 = 32'd0;
#0 BitStream64_m_cur_re_reg_1123 = 64'd0;
#0 etx_ha_m_cur_10_fu_320 = 64'd0;
#0 ovr_V_4_fu_328 = 13'd0;
#0 etx_tofollow_fu_332 = 32'd0;
#0 BitStream64_m_cur_re_5_fu_336 = 64'd0;
#0 BitStream64_m_idx_re_3_fu_340 = 32'd0;
#0 etx_ba_m_cur_9_fu_344 = 64'd0;
#0 etx_ba_m_idx_4_fu_348 = 32'd0;
end

APE_encode150_tabbFp #(
    .DataWidth( 10 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
table_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(table_i_address0),
    .ce0(table_i_ce0),
    .we0(table_i_we0),
    .d0(p_070_0_i_i_reg_1010),
    .q0(table_i_q0),
    .address1(table_i_address1),
    .ce1(table_i_ce1),
    .q1(table_i_q1)
);

DuneDataCompressibGp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
DuneDataCompressibGp_U686(
    .din0(syms_V_q0),
    .din1(syms_V47_q0),
    .din2(syms_V48_q0),
    .din3(syms_V49_q0),
    .din4(tmp_271_reg_2895),
    .dout(grp_fu_1185_p6)
);

DuneDataCompressibHp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 4 ),
    .din5_WIDTH( 4 ),
    .din6_WIDTH( 4 ),
    .din7_WIDTH( 4 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
DuneDataCompressibHp_U687(
    .din0(hist_m_nobits_V_q0),
    .din1(hist_m_nobits_V33_q0),
    .din2(hist_m_nobits_V34_q0),
    .din3(hist_m_nobits_V35_q0),
    .din4(hist_m_nobits_V36_q0),
    .din5(hist_m_nobits_V37_q0),
    .din6(hist_m_nobits_V38_q0),
    .din7(hist_m_nobits_V39_q0),
    .din8(tmp_272_reg_2905),
    .dout(grp_fu_1198_p10)
);

DuneDataCompressibIp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .din3_WIDTH( 10 ),
    .din4_WIDTH( 10 ),
    .din5_WIDTH( 10 ),
    .din6_WIDTH( 10 ),
    .din7_WIDTH( 10 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 10 ))
DuneDataCompressibIp_U688(
    .din0(hist_m_maxcnt_V_q0),
    .din1(hist_m_maxcnt_V26_q0),
    .din2(hist_m_maxcnt_V27_q0),
    .din3(hist_m_maxcnt_V28_q0),
    .din4(hist_m_maxcnt_V29_q0),
    .din5(hist_m_maxcnt_V30_q0),
    .din6(hist_m_maxcnt_V31_q0),
    .din7(hist_m_maxcnt_V32_q0),
    .din8(tmp_272_reg_2905),
    .dout(maxcnt_V_fu_1318_p10)
);

DuneDataCompressibJp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
DuneDataCompressibJp_U689(
    .din0(hist_m_omask_V_q0),
    .din1(hist_m_omask_V19_q0),
    .din2(hist_m_omask_V20_q0),
    .din3(hist_m_omask_V21_q0),
    .din4(hist_m_omask_V22_q0),
    .din5(hist_m_omask_V23_q0),
    .din6(hist_m_omask_V24_q0),
    .din7(hist_m_omask_V25_q0),
    .din8(tmp_272_reg_2905),
    .dout(p_Val2_62_fu_1437_p10)
);

DuneDataCompressibKp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 24 ))
DuneDataCompressibKp_U690(
    .din0(grp_fu_2868_p0),
    .din1(grp_fu_2868_p1),
    .din2(grp_fu_2868_p2),
    .dout(grp_fu_2868_p3)
);

DuneDataCompressibLp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 24 ))
DuneDataCompressibLp_U691(
    .din0(grp_fu_2877_p0),
    .din1(grp_fu_2877_p1),
    .din2(grp_fu_2877_p2),
    .dout(grp_fu_2877_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        BitStream64_m_cur_re_5_fu_336 <= 64'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter3_reg == 1'd0) & (tmp_293_reg_3404 == 1'd1) & (tmp_507_i_reg_3369_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
            BitStream64_m_cur_re_5_fu_336 <= etx_ha_m_cur_8_fu_2103_p3;
        end else if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_293_reg_3404 == 1'd0) & (exitcond_reg_3327_pp1_iter3_reg == 1'd0) & (tmp_507_i_reg_3369_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
            BitStream64_m_cur_re_5_fu_336 <= etx_ha_m_cur_9_fu_2051_p1;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            BitStream64_m_cur_re_5_fu_336 <= BitStream64_m_cur_re_reg_1123;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        BitStream64_m_cur_re_reg_1123 <= 64'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            if ((1'b1 == ap_condition_2184)) begin
                BitStream64_m_cur_re_reg_1123 <= etx_ha_m_cur_10_load_1_load_fu_1714_p1;
            end else if (((tmp_462_i_reg_3099_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
                BitStream64_m_cur_re_reg_1123 <= etx_ha_m_cur_10_fu_320;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        BitStream64_m_idx_re_3_fu_340 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter2_reg == 1'd0) & (tmp_507_i_reg_3369 == 1'd1) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
            BitStream64_m_idx_re_3_fu_340 <= etx_ha_m_idx_3_fu_1966_p2;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            BitStream64_m_idx_re_3_fu_340 <= BitStream64_m_idx_re_reg_1113;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        BitStream64_m_idx_re_reg_1113 <= 32'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            if ((1'b1 == ap_condition_2184)) begin
                BitStream64_m_idx_re_reg_1113 <= etx_ha_m_idx_reg_3230_pp0_iter4_reg;
            end else if (((tmp_462_i_reg_3099_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
                BitStream64_m_idx_re_reg_1113 <= etx_ha_m_idx_i_reg_1080;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_predicate_tran9to10_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_fu_1763_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter6_state17)) begin
                ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter5;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp1_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_phi_reg_pp0_iter1_p_030_0_i1_i_reg_1022 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_phi_reg_pp0_iter1_p_030_0_i1_i_reg_1022 <= ap_phi_reg_pp0_iter0_p_030_0_i1_i_reg_1022;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_1022 <= 10'd0;
    end else begin
        if ((1'b1 == ap_condition_863)) begin
            if ((1'b1 == ap_condition_955)) begin
                ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_1022 <= 10'd0;
            end else if ((1'b1 == 1'b1)) begin
                ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_1022 <= ap_phi_reg_pp0_iter1_p_030_0_i1_i_reg_1022;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        buf_21_reg_3586 <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            buf_21_reg_3586 <= buf_21_fu_2815_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        cur_V_reg_3336 <= 12'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            cur_V_reg_3336 <= grp_fu_1185_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        cur_bidx_6_reg_3470 <= 6'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
            cur_bidx_6_reg_3470 <= cur_bidx_6_fu_2333_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        cv_m_lo_V_3_reg_3424 <= 12'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter3_reg == 1'd0))) begin
            cv_m_lo_V_3_reg_3424 <= {{grp_fu_2877_p3[21:10]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        cv_m_lo_V_3_reg_3424_pp1_iter5_reg <= 12'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            cv_m_lo_V_3_reg_3424_pp1_iter5_reg <= cv_m_lo_V_3_reg_3424;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ba_m_cur_8_reg_3545 <= 64'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_reg_3476_pp1_iter7_reg == 1'd0))) begin
            etx_ba_m_cur_8_reg_3545 <= etx_ba_m_cur_8_fu_2649_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ba_m_cur_9_fu_344 <= 64'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_reg_3476_pp1_iter7_reg == 1'd0) & (tmp_302_reg_3541 == 1'd1) & (ap_enable_reg_pp1_iter8 == 1'b1))) begin
            etx_ba_m_cur_9_fu_344 <= etx_ba_m_cur_8_fu_2649_p2;
        end else if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_302_reg_3541 == 1'd0) & (tmp_525_i_reg_3476_pp1_iter7_reg == 1'd0) & (ap_enable_reg_pp1_iter8 == 1'b1))) begin
            etx_ba_m_cur_9_fu_344 <= buf_20_fu_2612_p3;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            etx_ba_m_cur_9_fu_344 <= 64'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ba_m_cur_reg_3591 <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            etx_ba_m_cur_reg_3591 <= etx_ba_m_cur_fu_2852_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ba_m_idx_4_fu_348 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_fu_2350_p2 == 1'd0) & (exitcond_reg_3327_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
            etx_ba_m_idx_4_fu_348 <= etx_ba_m_idx_fu_2436_p2;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            etx_ba_m_idx_4_fu_348 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ba_m_idx_4_load_reg_3464 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
            etx_ba_m_idx_4_load_reg_3464 <= etx_ba_m_idx_4_fu_348;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ba_m_idx_4_load_reg_3464_pp1_iter7_reg <= 32'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            etx_ba_m_idx_4_load_reg_3464_pp1_iter7_reg <= etx_ba_m_idx_4_load_reg_3464;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ba_m_idx_4_load_reg_3464_pp1_iter8_reg <= 32'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            etx_ba_m_idx_4_load_reg_3464_pp1_iter8_reg <= etx_ba_m_idx_4_load_reg_3464_pp1_iter7_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_cv_m_hi_V_reg_1164 <= 12'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            etx_cv_m_hi_V_reg_1164 <= 12'd4095;
        end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
            etx_cv_m_hi_V_reg_1164 <= cv_m_hi_V_fu_2324_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_cv_m_lo_V_reg_1152 <= 11'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            etx_cv_m_lo_V_reg_1152 <= 11'd0;
        end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
            etx_cv_m_lo_V_reg_1152 <= r_V_55_fu_2285_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ha_m_cur_10_fu_320 <= 64'd0;
    end else begin
        if (((tmp_276_reg_3226 == 1'd1) & (tmp_462_i_reg_3099_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            etx_ha_m_cur_10_fu_320 <= etx_ha_m_cur_fu_1677_p3;
        end else if (((tmp_276_reg_3226 == 1'd0) & (tmp_462_i_reg_3099_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            etx_ha_m_cur_10_fu_320 <= etx_ha_m_cur_7_fu_1625_p1;
        end else if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            etx_ha_m_cur_10_fu_320 <= 64'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ha_m_cur_8_reg_3430 <= 64'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter3_reg == 1'd0) & (tmp_507_i_reg_3369_pp1_iter3_reg == 1'd1))) begin
            etx_ha_m_cur_8_reg_3430 <= etx_ha_m_cur_8_fu_2103_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ha_m_cur_reg_3246 <= 64'd0;
    end else begin
        if (((tmp_462_i_reg_3099_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            etx_ha_m_cur_reg_3246 <= etx_ha_m_cur_fu_1677_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ha_m_idx_i_reg_1080 <= 32'd0;
    end else begin
        if (((tmp_277_reg_3108_pp0_iter3_reg == 1'd0) & (tmp_462_i_reg_3099_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            etx_ha_m_idx_i_reg_1080 <= etx_ha_m_idx_reg_3230;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            etx_ha_m_idx_i_reg_1080 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ha_m_idx_i_reg_1080_pp0_iter4_reg <= 32'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            etx_ha_m_idx_i_reg_1080_pp0_iter4_reg <= etx_ha_m_idx_i_reg_1080;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ha_m_idx_reg_3230 <= 32'd0;
    end else begin
        if (((tmp_462_i_reg_3099_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            etx_ha_m_idx_reg_3230 <= etx_ha_m_idx_fu_1573_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_ha_m_idx_reg_3230_pp0_iter4_reg <= 32'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            etx_ha_m_idx_reg_3230_pp0_iter4_reg <= etx_ha_m_idx_reg_3230;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_tofollow_fu_332 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter5_reg == 1'd0) & (tmp_525_i_fu_2350_p2 == 1'd1) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
            etx_tofollow_fu_332 <= npending_fu_2460_p2;
        end else if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_fu_2350_p2 == 1'd0) & (exitcond_reg_3327_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
            etx_tofollow_fu_332 <= npending_3_fu_2442_p1;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            etx_tofollow_fu_332 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        etx_tofollow_load_3_reg_3480 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
            etx_tofollow_load_3_reg_3480 <= etx_tofollow_fu_332;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        exitcond_reg_3327 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            exitcond_reg_3327 <= exitcond_fu_1763_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        exitcond_reg_3327_pp1_iter1_reg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            exitcond_reg_3327_pp1_iter1_reg <= exitcond_reg_3327;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        exitcond_reg_3327_pp1_iter2_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            exitcond_reg_3327_pp1_iter2_reg <= exitcond_reg_3327_pp1_iter1_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        exitcond_reg_3327_pp1_iter3_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            exitcond_reg_3327_pp1_iter3_reg <= exitcond_reg_3327_pp1_iter2_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        exitcond_reg_3327_pp1_iter4_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            exitcond_reg_3327_pp1_iter4_reg <= exitcond_reg_3327_pp1_iter3_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        exitcond_reg_3327_pp1_iter5_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            exitcond_reg_3327_pp1_iter5_reg <= exitcond_reg_3327_pp1_iter4_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V33_ad_reg_2963 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V33_ad_reg_2963 <= newIndex63_cast_i_fu_1270_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V34_ad_reg_2968 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V34_ad_reg_2968 <= newIndex63_cast_i_fu_1270_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V35_ad_reg_2973 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V35_ad_reg_2973 <= newIndex63_cast_i_fu_1270_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V36_ad_reg_2978 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V36_ad_reg_2978 <= newIndex63_cast_i_fu_1270_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V37_ad_reg_2983 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V37_ad_reg_2983 <= newIndex63_cast_i_fu_1270_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V38_ad_reg_2988 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V38_ad_reg_2988 <= newIndex63_cast_i_fu_1270_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V39_ad_reg_2993 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V39_ad_reg_2993 <= newIndex63_cast_i_fu_1270_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_nobits_V_addr_reg_2958 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_nobits_V_addr_reg_2958 <= newIndex63_cast_i_fu_1270_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V19_add_reg_3003 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V19_add_reg_3003 <= newIndex63_cast_i_fu_1270_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V20_add_reg_3008 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V20_add_reg_3008 <= newIndex63_cast_i_fu_1270_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V21_add_reg_3013 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V21_add_reg_3013 <= newIndex63_cast_i_fu_1270_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V22_add_reg_3018 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V22_add_reg_3018 <= newIndex63_cast_i_fu_1270_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V23_add_reg_3023 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V23_add_reg_3023 <= newIndex63_cast_i_fu_1270_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V24_add_reg_3028 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V24_add_reg_3028 <= newIndex63_cast_i_fu_1270_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V25_add_reg_3033 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V25_add_reg_3033 <= newIndex63_cast_i_fu_1270_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        hist_m_omask_V_addr_reg_2998 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            hist_m_omask_V_addr_reg_2998 <= newIndex63_cast_i_fu_1270_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        i_assign_reg_998 <= 6'd0;
    end else begin
        if (((tmp_277_reg_3108 == 1'd0) & (tmp_462_i_reg_3099 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            i_assign_reg_998 <= ibin_reg_3103;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            i_assign_reg_998 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        i_assign_reg_998_pp0_iter1_reg <= 6'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            i_assign_reg_998_pp0_iter1_reg <= i_assign_reg_998;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ibin_reg_3103 <= 6'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ibin_reg_3103 <= ibin_fu_1419_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                left_5_cast_i_reg_3566[0] <= 1'b0;
        left_5_cast_i_reg_3566[1] <= 1'b0;
        left_5_cast_i_reg_3566[2] <= 1'b0;
        left_5_cast_i_reg_3566[3] <= 1'b0;
        left_5_cast_i_reg_3566[4] <= 1'b0;
        left_5_cast_i_reg_3566[5] <= 1'b0;
        left_5_cast_i_reg_3566[6] <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
                        left_5_cast_i_reg_3566[6 : 0] <= left_5_cast_i_fu_2791_p1[6 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                left_7_cast_i_reg_3525[0] <= 1'b0;
        left_7_cast_i_reg_3525[1] <= 1'b0;
        left_7_cast_i_reg_3525[2] <= 1'b0;
        left_7_cast_i_reg_3525[3] <= 1'b0;
        left_7_cast_i_reg_3525[4] <= 1'b0;
        left_7_cast_i_reg_3525[5] <= 1'b0;
        left_7_cast_i_reg_3525[6] <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_reg_3476 == 1'd0))) begin
                        left_7_cast_i_reg_3525[6 : 0] <= left_7_cast_i_fu_2589_p1[6 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        left_9_reg_3388 <= 7'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter2_reg == 1'd0) & (tmp_507_i_reg_3369 == 1'd1))) begin
            left_9_reg_3388 <= left_9_fu_1924_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        left_V_reg_3200 <= 10'd0;
    end else begin
        if (((tmp_462_i_reg_3099_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            left_V_reg_3200 <= left_V_fu_1518_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                left_cast_i_reg_3210[0] <= 1'b0;
        left_cast_i_reg_3210[1] <= 1'b0;
        left_cast_i_reg_3210[2] <= 1'b0;
        left_cast_i_reg_3210[3] <= 1'b0;
        left_cast_i_reg_3210[4] <= 1'b0;
        left_cast_i_reg_3210[5] <= 1'b0;
        left_cast_i_reg_3210[6] <= 1'b0;
    end else begin
        if (((tmp_462_i_reg_3099_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
                        left_cast_i_reg_3210[6 : 0] <= left_cast_i_fu_1549_p1[6 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        nbits_7_reg_3088 <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            nbits_7_reg_3088 <= nbits_7_fu_1387_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                nbits_assign_3_cast_s_reg_3383[0] <= 1'b0;
        nbits_assign_3_cast_s_reg_3383[1] <= 1'b0;
        nbits_assign_3_cast_s_reg_3383[2] <= 1'b0;
        nbits_assign_3_cast_s_reg_3383[3] <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter2_reg == 1'd0) & (tmp_507_i_reg_3369 == 1'd1))) begin
                        nbits_assign_3_cast_s_reg_3383[3 : 0] <= nbits_assign_3_cast_s_fu_1916_p1[3 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        nbits_assign_reg_1092 <= 32'd0;
    end else begin
        if (((tmp_277_reg_3108_pp0_iter3_reg == 1'd0) & (tmp_462_i_reg_3099_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            nbits_assign_reg_1092 <= p_mbits_0_i_i_reg_3236;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            nbits_assign_reg_1092 <= 32'd32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        nbits_assign_s_reg_3550 <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            nbits_assign_s_reg_3550 <= nbits_assign_s_fu_2684_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        nebits_reg_3492 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_fu_2350_p2 == 1'd0) & (exitcond_reg_3327_pp1_iter5_reg == 1'd0))) begin
            nebits_reg_3492 <= nebits_fu_2406_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        nebits_reg_3492_pp1_iter7_reg <= 32'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            nebits_reg_3492_pp1_iter7_reg <= nebits_reg_3492;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        nreduce_V_reg_3449 <= 4'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter4_reg == 1'd0))) begin
            nreduce_V_reg_3449 <= nreduce_V_fu_2273_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        nsame_V_reg_3441 <= 4'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter4_reg == 1'd0))) begin
            nsame_V_reg_3441 <= nsame_V_fu_2174_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        overrun_10_reg_3530 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_reg_3476 == 1'd0))) begin
            overrun_10_reg_3530 <= overrun_10_fu_2593_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        overrun_8_reg_3571 <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            overrun_8_reg_3571 <= overrun_8_fu_2795_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        overrun_9_reg_3393 <= 7'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter2_reg == 1'd0) & (tmp_507_i_reg_3369 == 1'd1))) begin
            overrun_9_reg_3393 <= overrun_9_fu_1930_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        overrun_reg_3215 <= 32'd0;
    end else begin
        if (((tmp_462_i_reg_3099_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            overrun_reg_3215 <= overrun_fu_1553_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ovr_V_3_reg_3352 <= 13'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter1_reg == 1'd0))) begin
            ovr_V_3_reg_3352 <= ovr_V_3_fu_1861_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ovr_V_3_reg_3352_pp1_iter3_reg <= 13'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            ovr_V_3_reg_3352_pp1_iter3_reg <= ovr_V_3_reg_3352;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ovr_V_4_fu_328 <= 13'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
            ovr_V_4_fu_328 <= ovr_V_3_fu_1861_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_0100_0_i_i_reg_1104 <= 32'd0;
    end else begin
        if (((tmp_277_reg_3108_pp0_iter3_reg == 1'd0) & (tmp_462_i_reg_3099_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            p_0100_0_i_i_reg_1104 <= bits_V_5_fu_1695_p1;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            p_0100_0_i_i_reg_1104 <= bits_V_fu_1407_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_030_0_i1_i_reg_1022 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            if ((1'b1 == ap_condition_948)) begin
                p_030_0_i1_i_reg_1022 <= hist_m_bins_V468_q0;
            end else if ((1'b1 == ap_condition_945)) begin
                p_030_0_i1_i_reg_1022 <= hist_m_bins_V46_q0;
            end else if ((1'b1 == ap_condition_939)) begin
                p_030_0_i1_i_reg_1022 <= hist_m_bins_V457_q0;
            end else if ((1'b1 == ap_condition_936)) begin
                p_030_0_i1_i_reg_1022 <= hist_m_bins_V45_q0;
            end else if ((1'b1 == ap_condition_930)) begin
                p_030_0_i1_i_reg_1022 <= hist_m_bins_V446_q0;
            end else if ((1'b1 == ap_condition_927)) begin
                p_030_0_i1_i_reg_1022 <= hist_m_bins_V44_q0;
            end else if ((1'b1 == ap_condition_921)) begin
                p_030_0_i1_i_reg_1022 <= hist_m_bins_V435_q0;
            end else if ((1'b1 == ap_condition_918)) begin
                p_030_0_i1_i_reg_1022 <= hist_m_bins_V43_q0;
            end else if ((1'b1 == ap_condition_912)) begin
                p_030_0_i1_i_reg_1022 <= hist_m_bins_V424_q0;
            end else if ((1'b1 == ap_condition_909)) begin
                p_030_0_i1_i_reg_1022 <= hist_m_bins_V42_q0;
            end else if ((1'b1 == ap_condition_903)) begin
                p_030_0_i1_i_reg_1022 <= hist_m_bins_V413_q0;
            end else if ((1'b1 == ap_condition_900)) begin
                p_030_0_i1_i_reg_1022 <= hist_m_bins_V41_q0;
            end else if ((1'b1 == ap_condition_894)) begin
                p_030_0_i1_i_reg_1022 <= hist_m_bins_V402_q0;
            end else if ((1'b1 == ap_condition_891)) begin
                p_030_0_i1_i_reg_1022 <= hist_m_bins_V40_q0;
            end else if ((1'b1 == ap_condition_885)) begin
                p_030_0_i1_i_reg_1022 <= hist_m_bins_V1_q0;
            end else if ((1'b1 == ap_condition_880)) begin
                p_030_0_i1_i_reg_1022 <= hist_m_bins_V_q0;
            end else if ((1'b1 == 1'b1)) begin
                p_030_0_i1_i_reg_1022 <= ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_1022;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_030_0_i1_i_reg_1022_pp0_iter3_reg <= 10'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            p_030_0_i1_i_reg_1022_pp0_iter3_reg <= p_030_0_i1_i_reg_1022;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_070_0_i_i_reg_1010 <= 10'd0;
    end else begin
        if (((tmp_277_reg_3108_pp0_iter1_reg == 1'd0) & (tmp_462_i_reg_3099_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            p_070_0_i_i_reg_1010 <= total_V_fu_1529_p2;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            p_070_0_i_i_reg_1010 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_0_1_0_i_cast_i_reg_3498 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_fu_2350_p2 == 1'd0) & (exitcond_reg_3327_pp1_iter5_reg == 1'd0))) begin
            p_0_1_0_i_cast_i_reg_3498 <= p_0_1_0_i_cast_i_fu_2418_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_Result_94_reg_3063 <= 10'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            p_Result_94_reg_3063 <= p_Result_94_fu_1339_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_i_reg_1143 <= 12'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            p_i_reg_1143 <= prv_V_reg_3083;
        end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
            p_i_reg_1143 <= cur_V_reg_3336;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_mbits_0_i_i_reg_3236 <= 32'd0;
    end else begin
        if (((tmp_277_reg_3108_pp0_iter2_reg == 1'd0) & (tmp_462_i_reg_3099_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            p_mbits_0_i_i_reg_3236 <= p_mbits_0_i_i_fu_1615_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                p_shl_cast_reg_3073[4] <= 1'b0;
        p_shl_cast_reg_3073[5] <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
                        p_shl_cast_reg_3073[5 : 4] <= p_shl_cast_fu_1362_p1[5 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        prv_V_reg_3083 <= 12'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            prv_V_reg_3083 <= grp_fu_1185_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        r_V_42_reg_3413 <= 24'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
            r_V_42_reg_3413 <= grp_fu_2868_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        r_V_44_reg_3419 <= 24'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
            r_V_44_reg_3419 <= grp_fu_2877_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        r_V_51_reg_3435 <= 12'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter3_reg == 1'd0))) begin
            r_V_51_reg_3435 <= r_V_51_fu_2121_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        r_V_54_reg_3486 <= 12'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_fu_2350_p2 == 1'd0) & (exitcond_reg_3327_pp1_iter5_reg == 1'd0))) begin
            r_V_54_reg_3486 <= r_V_54_fu_2398_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        r_V_i_reg_3341 <= 12'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            r_V_i_reg_3341 <= r_V_i_fu_1775_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        syms_pn_rec_i_reg_1132 <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            syms_pn_rec_i_reg_1132 <= 64'd1;
        end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_fu_1763_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            syms_pn_rec_i_reg_1132 <= phitmp2_i_fu_1769_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        table_i_load_3_reg_3378 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
            table_i_load_3_reg_3378 <= table_i_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        table_i_load_reg_3373 <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
            table_i_load_reg_3373 <= table_i_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                tmp_107_reg_3038[10] <= 1'b0;
        tmp_107_reg_3038[11] <= 1'b0;
        tmp_107_reg_3038[12] <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
                        tmp_107_reg_3038[12 : 10] <= tmp_107_fu_1303_p3[12 : 10];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_109_reg_2912 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            tmp_109_reg_2912 <= {{hist_m_omask_V_offset_dout[4:3]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_111_reg_3078 <= 7'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            tmp_111_reg_3078 <= tmp_111_fu_1366_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                tmp_136_cast_reg_3068[10] <= 1'b0;
        tmp_136_cast_reg_3068[11] <= 1'b0;
        tmp_136_cast_reg_3068[12] <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
                        tmp_136_cast_reg_3068[12 : 10] <= tmp_136_cast_fu_1349_p1[12 : 10];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_256_i_reg_3515 <= 12'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_reg_3476 == 1'd0))) begin
            tmp_256_i_reg_3515 <= tmp_256_i_fu_2564_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_257_i_reg_3520 <= 52'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_reg_3476 == 1'd0))) begin
            tmp_257_i_reg_3520 <= {{buf_1_i_i_fu_2552_p3[63:12]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_271_reg_2895 <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            tmp_271_reg_2895 <= tmp_271_fu_1242_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_272_reg_2905 <= 3'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            tmp_272_reg_2905 <= tmp_272_fu_1256_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_276_reg_3226 <= 1'd0;
    end else begin
        if (((tmp_462_i_reg_3099_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp_276_reg_3226 <= overrun_fu_1553_p2[32'd31];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_276_reg_3226_pp0_iter4_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_276_reg_3226_pp0_iter4_reg <= tmp_276_reg_3226;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_277_reg_3108 <= 1'd0;
    end else begin
        if (((tmp_462_i_fu_1413_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_277_reg_3108 <= ap_phi_mux_i_assign_phi_fu_1002_p4[32'd5];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_277_reg_3108_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_277_reg_3108_pp0_iter1_reg <= tmp_277_reg_3108;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_277_reg_3108_pp0_iter2_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_277_reg_3108_pp0_iter2_reg <= tmp_277_reg_3108_pp0_iter1_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_277_reg_3108_pp0_iter3_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_277_reg_3108_pp0_iter3_reg <= tmp_277_reg_3108_pp0_iter2_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_277_reg_3108_pp0_iter4_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_277_reg_3108_pp0_iter4_reg <= tmp_277_reg_3108_pp0_iter3_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_278_reg_3112 <= 1'd0;
    end else begin
        if (((tmp_277_reg_3108 == 1'd0) & (tmp_462_i_reg_3099 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_278_reg_3112 <= tmp_278_fu_1458_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_282_reg_3116 <= 1'd0;
    end else begin
        if (((tmp_278_fu_1458_p3 == 1'd1) & (tmp_277_reg_3108 == 1'd0) & (tmp_462_i_reg_3099 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_282_reg_3116 <= tmp_282_fu_1466_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_286_reg_3582 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            tmp_286_reg_3582 <= overrun_8_fu_2795_p2[32'd31];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_293_reg_3404 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter2_reg == 1'd0) & (tmp_507_i_reg_3369 == 1'd1))) begin
            tmp_293_reg_3404 <= overrun_9_fu_1930_p2[32'd6];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_293_reg_3404_pp1_iter4_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            tmp_293_reg_3404_pp1_iter4_reg <= tmp_293_reg_3404;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_299_reg_3504 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_fu_2350_p2 == 1'd0) & (exitcond_reg_3327_pp1_iter5_reg == 1'd0))) begin
            tmp_299_reg_3504 <= tmp_299_fu_2422_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_302_reg_3541 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_reg_3476 == 1'd0))) begin
            tmp_302_reg_3541 <= overrun_10_fu_2593_p2[32'd31];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_302_reg_3541_pp1_iter8_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            tmp_302_reg_3541_pp1_iter8_reg <= tmp_302_reg_3541;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_40_reg_3556 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            tmp_40_reg_3556 <= tmp_40_fu_2766_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_41_reg_3561 <= 63'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            tmp_41_reg_3561 <= {{buf_1_i_i_i_fu_2754_p3[63:1]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_462_i_reg_3099 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_462_i_reg_3099 <= tmp_462_i_fu_1413_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_462_i_reg_3099_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_462_i_reg_3099_pp0_iter1_reg <= tmp_462_i_reg_3099;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_462_i_reg_3099_pp0_iter2_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_462_i_reg_3099_pp0_iter2_reg <= tmp_462_i_reg_3099_pp0_iter1_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_462_i_reg_3099_pp0_iter3_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_462_i_reg_3099_pp0_iter3_reg <= tmp_462_i_reg_3099_pp0_iter2_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_462_i_reg_3099_pp0_iter4_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            tmp_462_i_reg_3099_pp0_iter4_reg <= tmp_462_i_reg_3099_pp0_iter3_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_464_i_reg_3220 <= 1'd0;
    end else begin
        if (((tmp_462_i_reg_3099_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp_464_i_reg_3220 <= tmp_464_i_fu_1559_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                tmp_486_i_reg_3347[1] <= 1'b0;
        tmp_486_i_reg_3347[2] <= 1'b0;
        tmp_486_i_reg_3347[3] <= 1'b0;
        tmp_486_i_reg_3347[4] <= 1'b0;
        tmp_486_i_reg_3347[5] <= 1'b0;
        tmp_486_i_reg_3347[6] <= 1'b0;
        tmp_486_i_reg_3347[7] <= 1'b0;
        tmp_486_i_reg_3347[8] <= 1'b0;
        tmp_486_i_reg_3347[9] <= 1'b0;
        tmp_486_i_reg_3347[10] <= 1'b0;
        tmp_486_i_reg_3347[11] <= 1'b0;
        tmp_486_i_reg_3347[12] <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
                        tmp_486_i_reg_3347[12 : 1] <= tmp_486_i_fu_1795_p2[12 : 1];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_498_i_reg_3576 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            tmp_498_i_reg_3576 <= tmp_498_i_fu_2801_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_507_i_reg_3369 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter1_reg == 1'd0))) begin
            tmp_507_i_reg_3369 <= tmp_507_i_fu_1897_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_507_i_reg_3369_pp1_iter3_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            tmp_507_i_reg_3369_pp1_iter3_reg <= tmp_507_i_reg_3369;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_507_i_reg_3369_pp1_iter4_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            tmp_507_i_reg_3369_pp1_iter4_reg <= tmp_507_i_reg_3369_pp1_iter3_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_513_i_reg_3398 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter2_reg == 1'd0) & (tmp_507_i_reg_3369 == 1'd1))) begin
            tmp_513_i_reg_3398 <= tmp_513_i_fu_1936_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_525_i_reg_3476 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_3327_pp1_iter5_reg == 1'd0))) begin
            tmp_525_i_reg_3476 <= tmp_525_i_fu_2350_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_525_i_reg_3476_pp1_iter7_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            tmp_525_i_reg_3476_pp1_iter7_reg <= tmp_525_i_reg_3476;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_525_i_reg_3476_pp1_iter8_reg <= 1'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            tmp_525_i_reg_3476_pp1_iter8_reg <= tmp_525_i_reg_3476_pp1_iter7_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_537_i_reg_3510 <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_fu_2350_p2 == 1'd0) & (exitcond_reg_3327_pp1_iter5_reg == 1'd0))) begin
            tmp_537_i_reg_3510 <= tmp_537_i_fu_2430_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_546_i_reg_3535 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_525_i_reg_3476 == 1'd0))) begin
            tmp_546_i_reg_3535 <= tmp_546_i_fu_2598_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_s_reg_2900 <= 3'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            tmp_s_reg_2900 <= {{hist_m_omask_V_offset_dout[4:2]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        wrdIdx_7_reg_3408 <= 26'd0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_293_fu_1942_p3 == 1'd0) & (exitcond_reg_3327_pp1_iter2_reg == 1'd0) & (tmp_507_i_reg_3369 == 1'd1))) begin
            wrdIdx_7_reg_3408 <= {{BitStream64_m_idx_re_3_fu_340[31:6]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        wrdIdx_7_reg_3408_pp1_iter4_reg <= 26'd0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_11001)) begin
            wrdIdx_7_reg_3408_pp1_iter4_reg <= wrdIdx_7_reg_3408;
        end
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter6 == 1'b1) & (ap_enable_reg_pp1_iter5 == 1'b0))) begin
        ap_condition_pp1_exit_iter6_state17 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter6_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((tmp_286_reg_3582 == 1'd1)) begin
            ap_phi_mux_BitStream64_m_cur_re_6_phi_fu_1178_p4 = etx_ba_m_cur_reg_3591;
        end else if ((tmp_286_reg_3582 == 1'd0)) begin
            ap_phi_mux_BitStream64_m_cur_re_6_phi_fu_1178_p4 = buf_21_reg_3586;
        end else begin
            ap_phi_mux_BitStream64_m_cur_re_6_phi_fu_1178_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_BitStream64_m_cur_re_6_phi_fu_1178_p4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_reg_3327_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        ap_phi_mux_etx_cv_m_hi_V_phi_fu_1168_p4 = cv_m_hi_V_fu_2324_p2;
    end else begin
        ap_phi_mux_etx_cv_m_hi_V_phi_fu_1168_p4 = etx_cv_m_hi_V_reg_1164;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_reg_3327_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        ap_phi_mux_etx_cv_m_lo_V_phi_fu_1156_p4 = r_V_55_fu_2285_p2;
    end else begin
        ap_phi_mux_etx_cv_m_lo_V_phi_fu_1156_p4 = etx_cv_m_lo_V_reg_1152;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (tmp_277_reg_3108_pp0_iter3_reg == 1'd0) & (tmp_462_i_reg_3099_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_phi_mux_etx_ha_m_idx_i_phi_fu_1084_p4 = etx_ha_m_idx_reg_3230;
    end else begin
        ap_phi_mux_etx_ha_m_idx_i_phi_fu_1084_p4 = etx_ha_m_idx_i_reg_1080;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (tmp_277_reg_3108 == 1'd0) & (tmp_462_i_reg_3099 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_assign_phi_fu_1002_p4 = ibin_reg_3103;
    end else begin
        ap_phi_mux_i_assign_phi_fu_1002_p4 = i_assign_reg_998;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (tmp_277_reg_3108_pp0_iter3_reg == 1'd0) & (tmp_462_i_reg_3099_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_phi_mux_nbits_assign_phi_fu_1096_p4 = p_mbits_0_i_i_reg_3236;
    end else begin
        ap_phi_mux_nbits_assign_phi_fu_1096_p4 = nbits_assign_reg_1092;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2190)) begin
        if (((tmp_282_reg_3116 == 1'd1) & (tmp_272_reg_2905 == 3'd7))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1026_p34 = hist_m_bins_V468_q0;
        end else if (((tmp_282_reg_3116 == 1'd0) & (tmp_272_reg_2905 == 3'd7))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1026_p34 = hist_m_bins_V46_q0;
        end else if (((tmp_282_reg_3116 == 1'd1) & (tmp_272_reg_2905 == 3'd6))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1026_p34 = hist_m_bins_V457_q0;
        end else if (((tmp_282_reg_3116 == 1'd0) & (tmp_272_reg_2905 == 3'd6))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1026_p34 = hist_m_bins_V45_q0;
        end else if (((tmp_282_reg_3116 == 1'd1) & (tmp_272_reg_2905 == 3'd5))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1026_p34 = hist_m_bins_V446_q0;
        end else if (((tmp_282_reg_3116 == 1'd0) & (tmp_272_reg_2905 == 3'd5))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1026_p34 = hist_m_bins_V44_q0;
        end else if (((tmp_282_reg_3116 == 1'd1) & (tmp_272_reg_2905 == 3'd4))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1026_p34 = hist_m_bins_V435_q0;
        end else if (((tmp_282_reg_3116 == 1'd0) & (tmp_272_reg_2905 == 3'd4))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1026_p34 = hist_m_bins_V43_q0;
        end else if (((tmp_282_reg_3116 == 1'd1) & (tmp_272_reg_2905 == 3'd3))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1026_p34 = hist_m_bins_V424_q0;
        end else if (((tmp_282_reg_3116 == 1'd0) & (tmp_272_reg_2905 == 3'd3))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1026_p34 = hist_m_bins_V42_q0;
        end else if (((tmp_282_reg_3116 == 1'd1) & (tmp_272_reg_2905 == 3'd2))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1026_p34 = hist_m_bins_V413_q0;
        end else if (((tmp_282_reg_3116 == 1'd0) & (tmp_272_reg_2905 == 3'd2))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1026_p34 = hist_m_bins_V41_q0;
        end else if (((tmp_282_reg_3116 == 1'd1) & (tmp_272_reg_2905 == 3'd1))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1026_p34 = hist_m_bins_V402_q0;
        end else if (((tmp_282_reg_3116 == 1'd0) & (tmp_272_reg_2905 == 3'd1))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1026_p34 = hist_m_bins_V40_q0;
        end else if (((tmp_282_reg_3116 == 1'd1) & (tmp_272_reg_2905 == 3'd0))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1026_p34 = hist_m_bins_V1_q0;
        end else if (((tmp_282_reg_3116 == 1'd0) & (tmp_272_reg_2905 == 3'd0))) begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1026_p34 = hist_m_bins_V_q0;
        end else begin
            ap_phi_mux_p_030_0_i1_i_phi_fu_1026_p34 = ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_1022;
        end
    end else begin
        ap_phi_mux_p_030_0_i1_i_phi_fu_1026_p34 = ap_phi_reg_pp0_iter2_p_030_0_i1_i_reg_1022;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_reg_3327_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_mux_p_i_phi_fu_1146_p4 = cur_V_reg_3336;
    end else begin
        ap_phi_mux_p_i_phi_fu_1146_p4 = p_i_reg_1143;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        etxOut_ba_m_buf16_address0 = tmp_i1017_i_fu_2858_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter9 == 1'b1))) begin
        etxOut_ba_m_buf16_address0 = tmp_i515_i_fu_2665_p1;
    end else begin
        etxOut_ba_m_buf16_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter9 == 1'b1)))) begin
        etxOut_ba_m_buf16_ce0 = 1'b1;
    end else begin
        etxOut_ba_m_buf16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        etxOut_ba_m_buf16_d0 = etx_ba_m_cur_reg_3591;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter9 == 1'b1))) begin
        etxOut_ba_m_buf16_d0 = etx_ba_m_cur_8_reg_3545;
    end else begin
        etxOut_ba_m_buf16_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_286_reg_3582 == 1'd0) & (1'b1 == ap_CS_fsm_state23)) | ((1'b0 == ap_block_pp1_stage0_11001) & (tmp_302_reg_3541_pp1_iter8_reg == 1'd0) & (tmp_525_i_reg_3476_pp1_iter8_reg == 1'd0) & (ap_enable_reg_pp1_iter9 == 1'b1)))) begin
        etxOut_ba_m_buf16_we0 = 1'b1;
    end else begin
        etxOut_ba_m_buf16_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        etxOut_ba_m_ccur10_ap_vld = 1'b1;
    end else begin
        etxOut_ba_m_ccur10_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        etxOut_ba_m_cidx13_ap_vld = 1'b1;
    end else begin
        etxOut_ba_m_cidx13_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        etxOut_ha_m_buf7_address0 = tmp_i316_i_fu_2145_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        etxOut_ha_m_buf7_address0 = tmp_i18_i_fu_1709_p1;
    end else begin
        etxOut_ha_m_buf7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
        etxOut_ha_m_buf7_ce0 = 1'b1;
    end else begin
        etxOut_ha_m_buf7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        etxOut_ha_m_buf7_d0 = etx_ha_m_cur_8_reg_3430;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        etxOut_ha_m_buf7_d0 = etx_ha_m_cur_reg_3246;
    end else begin
        etxOut_ha_m_buf7_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (tmp_293_reg_3404_pp1_iter4_reg == 1'd0) & (exitcond_reg_3327_pp1_iter4_reg == 1'd0) & (tmp_507_i_reg_3369_pp1_iter4_reg == 1'd1) & (ap_enable_reg_pp1_iter5 == 1'b1)) | ((tmp_276_reg_3226_pp0_iter4_reg == 1'd0) & (tmp_462_i_reg_3099_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
        etxOut_ha_m_buf7_we0 = 1'b1;
    end else begin
        etxOut_ha_m_buf7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        etxOut_ha_m_ccur1_ap_vld = 1'b1;
    end else begin
        etxOut_ha_m_ccur1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        etxOut_ha_m_cidx4_ap_vld = 1'b1;
    end else begin
        etxOut_ha_m_cidx4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_1233_p1 = etx_ba_m_idx_4_load_reg_3464;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter9 == 1'b1))) begin
        grp_fu_1233_p1 = etx_ba_m_idx_4_load_reg_3464_pp1_iter8_reg;
    end else begin
        grp_fu_1233_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V1_ce0 = 1'b1;
    end else begin
        hist_m_bins_V1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V402_ce0 = 1'b1;
    end else begin
        hist_m_bins_V402_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V40_ce0 = 1'b1;
    end else begin
        hist_m_bins_V40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V413_ce0 = 1'b1;
    end else begin
        hist_m_bins_V413_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V41_ce0 = 1'b1;
    end else begin
        hist_m_bins_V41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V424_ce0 = 1'b1;
    end else begin
        hist_m_bins_V424_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V42_ce0 = 1'b1;
    end else begin
        hist_m_bins_V42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V435_ce0 = 1'b1;
    end else begin
        hist_m_bins_V435_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V43_ce0 = 1'b1;
    end else begin
        hist_m_bins_V43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V446_ce0 = 1'b1;
    end else begin
        hist_m_bins_V446_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V44_ce0 = 1'b1;
    end else begin
        hist_m_bins_V44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V457_ce0 = 1'b1;
    end else begin
        hist_m_bins_V457_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V45_ce0 = 1'b1;
    end else begin
        hist_m_bins_V45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V468_ce0 = 1'b1;
    end else begin
        hist_m_bins_V468_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V46_ce0 = 1'b1;
    end else begin
        hist_m_bins_V46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_bins_V_ce0 = 1'b1;
    end else begin
        hist_m_bins_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V26_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V27_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V28_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V29_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V30_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V31_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V32_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_maxcnt_V_ce0 = 1'b1;
    end else begin
        hist_m_maxcnt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V33_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V34_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V35_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V36_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V37_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V38_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V39_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        hist_m_nobits_V_ce0 = 1'b1;
    end else begin
        hist_m_nobits_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V19_ce0 = 1'b1;
    end else begin
        hist_m_omask_V19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V20_ce0 = 1'b1;
    end else begin
        hist_m_omask_V20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V21_ce0 = 1'b1;
    end else begin
        hist_m_omask_V21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V22_ce0 = 1'b1;
    end else begin
        hist_m_omask_V22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V23_ce0 = 1'b1;
    end else begin
        hist_m_omask_V23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V24_ce0 = 1'b1;
    end else begin
        hist_m_omask_V24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V25_ce0 = 1'b1;
    end else begin
        hist_m_omask_V25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_m_omask_V_ce0 = 1'b1;
    end else begin
        hist_m_omask_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_omask_V_offset_blk_n = hist_m_omask_V_offset_empty_n;
    end else begin
        hist_m_omask_V_offset_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        hist_m_omask_V_offset_read = 1'b1;
    end else begin
        hist_m_omask_V_offset_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        syms_V47_address0 = tmp_144_cast_fu_1751_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        syms_V47_address0 = tmp_108_fu_1310_p1;
    end else begin
        syms_V47_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        syms_V47_ce0 = 1'b1;
    end else begin
        syms_V47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        syms_V48_address0 = tmp_144_cast_fu_1751_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        syms_V48_address0 = tmp_108_fu_1310_p1;
    end else begin
        syms_V48_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        syms_V48_ce0 = 1'b1;
    end else begin
        syms_V48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        syms_V49_address0 = tmp_144_cast_fu_1751_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        syms_V49_address0 = tmp_108_fu_1310_p1;
    end else begin
        syms_V49_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        syms_V49_ce0 = 1'b1;
    end else begin
        syms_V49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        syms_V_address0 = tmp_144_cast_fu_1751_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        syms_V_address0 = tmp_108_fu_1310_p1;
    end else begin
        syms_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        syms_V_ce0 = 1'b1;
    end else begin
        syms_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        table_i_address0 = tmp_501_i_fu_1877_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        table_i_address0 = tmp_463_i_fu_1524_p1;
    end else begin
        table_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        table_i_ce0 = 1'b1;
    end else begin
        table_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        table_i_ce1 = 1'b1;
    end else begin
        table_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_462_i_reg_3099_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        table_i_we0 = 1'b1;
    end else begin
        table_i_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter7 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b1)) & ~((ap_enable_reg_pp1_iter8 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter9 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter8 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((ap_enable_reg_pp1_iter7 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (hist_m_omask_V_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state11_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_2184 = ((tmp_277_reg_3108_pp0_iter4_reg == 1'd1) & (tmp_462_i_reg_3099_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1));
end

always @ (*) begin
    ap_condition_2190 = ((1'b0 == ap_block_pp0_stage0) & (tmp_277_reg_3108_pp0_iter1_reg == 1'd0) & (tmp_278_reg_3112 == 1'd1) & (tmp_462_i_reg_3099_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_863 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_880 = ((tmp_282_reg_3116 == 1'd0) & (tmp_277_reg_3108_pp0_iter1_reg == 1'd0) & (tmp_278_reg_3112 == 1'd1) & (tmp_462_i_reg_3099_pp0_iter1_reg == 1'd1) & (tmp_272_reg_2905 == 3'd0));
end

always @ (*) begin
    ap_condition_885 = ((tmp_277_reg_3108_pp0_iter1_reg == 1'd0) & (tmp_282_reg_3116 == 1'd1) & (tmp_278_reg_3112 == 1'd1) & (tmp_462_i_reg_3099_pp0_iter1_reg == 1'd1) & (tmp_272_reg_2905 == 3'd0));
end

always @ (*) begin
    ap_condition_891 = ((tmp_282_reg_3116 == 1'd0) & (tmp_277_reg_3108_pp0_iter1_reg == 1'd0) & (tmp_278_reg_3112 == 1'd1) & (tmp_462_i_reg_3099_pp0_iter1_reg == 1'd1) & (tmp_272_reg_2905 == 3'd1));
end

always @ (*) begin
    ap_condition_894 = ((tmp_277_reg_3108_pp0_iter1_reg == 1'd0) & (tmp_282_reg_3116 == 1'd1) & (tmp_278_reg_3112 == 1'd1) & (tmp_462_i_reg_3099_pp0_iter1_reg == 1'd1) & (tmp_272_reg_2905 == 3'd1));
end

always @ (*) begin
    ap_condition_900 = ((tmp_282_reg_3116 == 1'd0) & (tmp_277_reg_3108_pp0_iter1_reg == 1'd0) & (tmp_278_reg_3112 == 1'd1) & (tmp_462_i_reg_3099_pp0_iter1_reg == 1'd1) & (tmp_272_reg_2905 == 3'd2));
end

always @ (*) begin
    ap_condition_903 = ((tmp_277_reg_3108_pp0_iter1_reg == 1'd0) & (tmp_282_reg_3116 == 1'd1) & (tmp_278_reg_3112 == 1'd1) & (tmp_462_i_reg_3099_pp0_iter1_reg == 1'd1) & (tmp_272_reg_2905 == 3'd2));
end

always @ (*) begin
    ap_condition_909 = ((tmp_282_reg_3116 == 1'd0) & (tmp_277_reg_3108_pp0_iter1_reg == 1'd0) & (tmp_278_reg_3112 == 1'd1) & (tmp_462_i_reg_3099_pp0_iter1_reg == 1'd1) & (tmp_272_reg_2905 == 3'd3));
end

always @ (*) begin
    ap_condition_912 = ((tmp_277_reg_3108_pp0_iter1_reg == 1'd0) & (tmp_282_reg_3116 == 1'd1) & (tmp_278_reg_3112 == 1'd1) & (tmp_462_i_reg_3099_pp0_iter1_reg == 1'd1) & (tmp_272_reg_2905 == 3'd3));
end

always @ (*) begin
    ap_condition_918 = ((tmp_282_reg_3116 == 1'd0) & (tmp_277_reg_3108_pp0_iter1_reg == 1'd0) & (tmp_278_reg_3112 == 1'd1) & (tmp_462_i_reg_3099_pp0_iter1_reg == 1'd1) & (tmp_272_reg_2905 == 3'd4));
end

always @ (*) begin
    ap_condition_921 = ((tmp_277_reg_3108_pp0_iter1_reg == 1'd0) & (tmp_282_reg_3116 == 1'd1) & (tmp_278_reg_3112 == 1'd1) & (tmp_462_i_reg_3099_pp0_iter1_reg == 1'd1) & (tmp_272_reg_2905 == 3'd4));
end

always @ (*) begin
    ap_condition_927 = ((tmp_282_reg_3116 == 1'd0) & (tmp_277_reg_3108_pp0_iter1_reg == 1'd0) & (tmp_278_reg_3112 == 1'd1) & (tmp_462_i_reg_3099_pp0_iter1_reg == 1'd1) & (tmp_272_reg_2905 == 3'd5));
end

always @ (*) begin
    ap_condition_930 = ((tmp_277_reg_3108_pp0_iter1_reg == 1'd0) & (tmp_282_reg_3116 == 1'd1) & (tmp_278_reg_3112 == 1'd1) & (tmp_462_i_reg_3099_pp0_iter1_reg == 1'd1) & (tmp_272_reg_2905 == 3'd5));
end

always @ (*) begin
    ap_condition_936 = ((tmp_282_reg_3116 == 1'd0) & (tmp_277_reg_3108_pp0_iter1_reg == 1'd0) & (tmp_278_reg_3112 == 1'd1) & (tmp_462_i_reg_3099_pp0_iter1_reg == 1'd1) & (tmp_272_reg_2905 == 3'd6));
end

always @ (*) begin
    ap_condition_939 = ((tmp_277_reg_3108_pp0_iter1_reg == 1'd0) & (tmp_282_reg_3116 == 1'd1) & (tmp_278_reg_3112 == 1'd1) & (tmp_462_i_reg_3099_pp0_iter1_reg == 1'd1) & (tmp_272_reg_2905 == 3'd6));
end

always @ (*) begin
    ap_condition_945 = ((tmp_282_reg_3116 == 1'd0) & (tmp_277_reg_3108_pp0_iter1_reg == 1'd0) & (tmp_278_reg_3112 == 1'd1) & (tmp_462_i_reg_3099_pp0_iter1_reg == 1'd1) & (tmp_272_reg_2905 == 3'd7));
end

always @ (*) begin
    ap_condition_948 = ((tmp_277_reg_3108_pp0_iter1_reg == 1'd0) & (tmp_282_reg_3116 == 1'd1) & (tmp_278_reg_3112 == 1'd1) & (tmp_462_i_reg_3099_pp0_iter1_reg == 1'd1) & (tmp_272_reg_2905 == 3'd7));
end

always @ (*) begin
    ap_condition_955 = ((tmp_278_fu_1458_p3 == 1'd0) & (tmp_277_reg_3108 == 1'd0) & (tmp_462_i_reg_3099 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_p_030_0_i1_i_reg_1022 = 'bx;

always @ (*) begin
    ap_predicate_tran9to10_state4 = ((tmp_462_i_fu_1413_p2 == 1'd0) | ((tmp_277_fu_1425_p3 == 1'd1) & (tmp_462_i_fu_1413_p2 == 1'd1)));
end

assign bit_V_fu_2676_p3 = etx_cv_m_lo_V_reg_1152[32'd10];

assign bits_V_5_fu_1695_p1 = p_030_0_i1_i_reg_1022_pp0_iter3_reg;

assign bits_V_assign_3_fu_2537_p3 = ((sel_tmp8_fu_2532_p2[0:0] === 1'b1) ? p_Result_s_fu_2488_p4 : r_V_54_reg_3486);

assign bits_V_fu_1407_p2 = (tmp_461_i_fu_1397_p4 | 32'd32505856);

assign buf_15_fu_2722_p2 = (tmp_494_i_fu_2716_p2 | buf_fu_2704_p2);

assign buf_17_fu_2482_p2 = leading_bit_3_fu_2476_p1 << tmp_538_i_fu_2479_p1;

assign buf_18_fu_2520_p2 = (tmp_544_i_fu_2514_p2 | buf_17_fu_2482_p2);

assign buf_1_i_i_fu_2552_p3 = ((sel_tmp8_fu_2532_p2[0:0] === 1'b1) ? buf_17_fu_2482_p2 : sel_tmp2_fu_2544_p3);

assign buf_1_i_i_i_fu_2754_p3 = ((sel_tmp1_fu_2748_p2[0:0] === 1'b1) ? buf_fu_2704_p2 : sel_tmp_fu_2734_p3);

assign buf_20_fu_2612_p3 = {{tmp_257_i_reg_3520}, {tmp_256_i_reg_3515}};

assign buf_21_fu_2815_p3 = {{tmp_41_reg_3561}, {tmp_40_reg_3556}};

assign buf_fu_2704_p2 = leading_bit_fu_2696_p1 << tmp_489_i_fu_2700_p1;

assign cur_bidx_5_cast_i_fu_2782_p1 = cur_bidx_6_reg_3470;

assign cur_bidx_6_cast_i_fu_1920_p1 = cur_bidx_7_fu_1908_p1;

assign cur_bidx_6_fu_2333_p1 = etx_ba_m_idx_4_fu_348[5:0];

assign cur_bidx_7_cast_i_fu_2580_p1 = cur_bidx_6_reg_3470;

assign cur_bidx_7_fu_1908_p1 = BitStream64_m_idx_re_3_fu_340[5:0];

assign cur_bidx_cast_i_fu_1539_p1 = cur_bidx_fu_1535_p1;

assign cur_bidx_fu_1535_p1 = ap_phi_mux_etx_ha_m_idx_i_phi_fu_1084_p4[5:0];

assign cv_m_hi_V_3_cast_fu_2127_p4 = {{r_V_42_reg_3413[20:10]}};

assign cv_m_hi_V_6_fu_2026_p4 = {{grp_fu_2868_p3[21:10]}};

assign cv_m_hi_V_fu_2324_p2 = (p_Result_93_fu_2314_p4 | hi_mask_V_3_fu_2208_p3);

assign cv_m_lo_V_3_cast_fu_2136_p4 = {{r_V_44_reg_3419[20:10]}};

assign cv_m_lo_V_3_fu_2042_p4 = {{grp_fu_2877_p3[21:10]}};

assign diff_fu_1837_p2 = ($signed(14'd16352) + $signed(tmp_491_cast_i_fu_1833_p1));

assign etxOut_ba_m_ccur10 = ap_phi_mux_BitStream64_m_cur_re_6_phi_fu_1178_p4;

assign etxOut_ba_m_cidx13 = (etx_ba_m_idx_4_load_reg_3464 + nbits_assign_s_reg_3550);

assign etxOut_ha_m_ccur1 = BitStream64_m_cur_re_5_fu_336;

assign etxOut_ha_m_cidx4 = BitStream64_m_idx_re_3_fu_340;

assign etx_ba_m_cur_8_fu_2649_p2 = (tmp_551_i_fu_2642_p3 | tmp_548_i_fu_2627_p2);

assign etx_ba_m_cur_fu_2852_p2 = (tmp_510_i_fu_2845_p3 | tmp_500_i_fu_2830_p2);

assign etx_ba_m_idx_fu_2436_p2 = (etx_ba_m_idx_4_fu_348 + nebits_fu_2406_p2);

assign etx_ha_m_cur_10_load_1_load_fu_1714_p1 = etx_ha_m_cur_10_fu_320;

assign etx_ha_m_cur_7_fu_1625_p1 = p_0100_0_i_i_reg_1104;

assign etx_ha_m_cur_8_fu_2103_p3 = {{tmp_45_fu_2093_p4}, {tmp_44_fu_2087_p2}};

assign etx_ha_m_cur_9_fu_2051_p1 = ovr_V_3_reg_3352_pp1_iter3_reg;

assign etx_ha_m_cur_fu_1677_p3 = {{tmp_38_fu_1667_p4}, {tmp_37_fu_1661_p2}};

assign etx_ha_m_idx_3_fu_1966_p2 = (BitStream64_m_idx_re_3_fu_340 + nbits_assign_1_fu_1912_p1);

assign etx_ha_m_idx_fu_1573_p2 = (ap_phi_mux_nbits_assign_phi_fu_1096_p4 + ap_phi_mux_etx_ha_m_idx_i_phi_fu_1084_p4);

assign exitcond_fu_1763_p2 = ((tmp_281_fu_1759_p1 == 32'd1024) ? 1'b1 : 1'b0);

assign grp_fu_1233_p4 = {{grp_fu_1233_p1[31:6]}};

assign grp_fu_2868_p0 = lhs_V_fu_2015_p1;

assign grp_fu_2868_p1 = grp_fu_2868_p10;

assign grp_fu_2868_p10 = table_i_load_3_reg_3378;

assign grp_fu_2868_p2 = grp_fu_2868_p20;

assign grp_fu_2868_p20 = xlo_V_fu_2009_p2;

assign grp_fu_2877_p0 = lhs_V_fu_2015_p1;

assign grp_fu_2877_p1 = grp_fu_2877_p10;

assign grp_fu_2877_p10 = table_i_load_reg_3373;

assign grp_fu_2877_p2 = grp_fu_2877_p20;

assign grp_fu_2877_p20 = xlo_V_3_fu_1997_p3;

assign hi_mask_V_3_fu_2208_p3 = {{tmp_295_fu_2200_p3}, {11'd0}};

assign hist_m_bins_V1_address0 = tmp_143_cast_fu_1506_p1;

assign hist_m_bins_V402_address0 = tmp_143_cast_fu_1506_p1;

assign hist_m_bins_V40_address0 = tmp_142_cast_fu_1489_p1;

assign hist_m_bins_V413_address0 = tmp_143_cast_fu_1506_p1;

assign hist_m_bins_V41_address0 = tmp_142_cast_fu_1489_p1;

assign hist_m_bins_V424_address0 = tmp_143_cast_fu_1506_p1;

assign hist_m_bins_V42_address0 = tmp_142_cast_fu_1489_p1;

assign hist_m_bins_V435_address0 = tmp_143_cast_fu_1506_p1;

assign hist_m_bins_V43_address0 = tmp_142_cast_fu_1489_p1;

assign hist_m_bins_V446_address0 = tmp_143_cast_fu_1506_p1;

assign hist_m_bins_V44_address0 = tmp_142_cast_fu_1489_p1;

assign hist_m_bins_V457_address0 = tmp_143_cast_fu_1506_p1;

assign hist_m_bins_V45_address0 = tmp_142_cast_fu_1489_p1;

assign hist_m_bins_V468_address0 = tmp_143_cast_fu_1506_p1;

assign hist_m_bins_V46_address0 = tmp_142_cast_fu_1489_p1;

assign hist_m_bins_V_address0 = tmp_142_cast_fu_1489_p1;

assign hist_m_maxcnt_V26_address0 = newIndex63_cast_i_fu_1270_p1;

assign hist_m_maxcnt_V27_address0 = newIndex63_cast_i_fu_1270_p1;

assign hist_m_maxcnt_V28_address0 = newIndex63_cast_i_fu_1270_p1;

assign hist_m_maxcnt_V29_address0 = newIndex63_cast_i_fu_1270_p1;

assign hist_m_maxcnt_V30_address0 = newIndex63_cast_i_fu_1270_p1;

assign hist_m_maxcnt_V31_address0 = newIndex63_cast_i_fu_1270_p1;

assign hist_m_maxcnt_V32_address0 = newIndex63_cast_i_fu_1270_p1;

assign hist_m_maxcnt_V_address0 = newIndex63_cast_i_fu_1270_p1;

assign hist_m_nobits_V33_address0 = hist_m_nobits_V33_ad_reg_2963;

assign hist_m_nobits_V34_address0 = hist_m_nobits_V34_ad_reg_2968;

assign hist_m_nobits_V35_address0 = hist_m_nobits_V35_ad_reg_2973;

assign hist_m_nobits_V36_address0 = hist_m_nobits_V36_ad_reg_2978;

assign hist_m_nobits_V37_address0 = hist_m_nobits_V37_ad_reg_2983;

assign hist_m_nobits_V38_address0 = hist_m_nobits_V38_ad_reg_2988;

assign hist_m_nobits_V39_address0 = hist_m_nobits_V39_ad_reg_2993;

assign hist_m_nobits_V_address0 = hist_m_nobits_V_addr_reg_2958;

assign hist_m_omask_V19_address0 = hist_m_omask_V19_add_reg_3003;

assign hist_m_omask_V20_address0 = hist_m_omask_V20_add_reg_3008;

assign hist_m_omask_V21_address0 = hist_m_omask_V21_add_reg_3013;

assign hist_m_omask_V22_address0 = hist_m_omask_V22_add_reg_3018;

assign hist_m_omask_V23_address0 = hist_m_omask_V23_add_reg_3023;

assign hist_m_omask_V24_address0 = hist_m_omask_V24_add_reg_3028;

assign hist_m_omask_V25_address0 = hist_m_omask_V25_add_reg_3033;

assign hist_m_omask_V_address0 = hist_m_omask_V_addr_reg_2998;

assign i_assign_cast24_i_fu_1433_p1 = i_assign_reg_998;

assign ibin_fu_1419_p2 = (ap_phi_mux_i_assign_phi_fu_1002_p4 + 6'd1);

assign idx_V_3_fu_1869_p3 = ((tmp_290_fu_1843_p3[0:0] === 1'b1) ? idx_V_fu_1857_p1 : 5'd0);

assign idx_V_fu_1857_p1 = storemerge_i_fu_1826_p3[4:0];

assign leading_bit_3_fu_2476_p1 = tmp_299_reg_3504;

assign leading_bit_fu_2696_p1 = bit_V_fu_2676_p3;

assign left_10_fu_2583_p2 = ($signed(7'd64) - $signed(cur_bidx_7_cast_i_fu_2580_p1));

assign left_5_cast_i_fu_2791_p1 = left_8_fu_2785_p2;

assign left_7_cast_i_fu_2589_p1 = left_10_fu_2583_p2;

assign left_8_fu_2785_p2 = ($signed(7'd64) - $signed(cur_bidx_5_cast_i_fu_2782_p1));

assign left_9_fu_1924_p2 = ($signed(7'd64) - $signed(cur_bidx_6_cast_i_fu_1920_p1));

assign left_V_fu_1518_p2 = (p_070_0_i_i_reg_1010 ^ 10'd1023);

assign left_cast_i_fu_1549_p1 = left_fu_1543_p2;

assign left_fu_1543_p2 = ($signed(7'd64) - $signed(cur_bidx_cast_i_fu_1539_p1));

assign lhs_V_15_cast_i_fu_2337_p1 = cv_m_lo_V_3_reg_3424_pp1_iter5_reg;

assign lhs_V_cast_i_fu_1882_p1 = idx_V_3_fu_1869_p3;

assign lhs_V_fu_2015_p1 = range_V_6_fu_1991_p2;

assign mpending_V_fu_2346_p2 = (nreduce_V_reg_3449 - nsame_V_reg_3441);

assign nbits_7_fu_1387_p2 = (32'd10 - tmp_i_fu_1379_p3);

assign nbits_assign_1_fu_1912_p1 = grp_fu_1198_p10;

assign nbits_assign_2_fu_2340_p1 = nsame_V_reg_3441;

assign nbits_assign_3_cast_s_fu_1916_p1 = grp_fu_1198_p10;

assign nbits_assign_4_cast2_fu_2343_p1 = nsame_V_reg_3441;

assign nbits_assign_4_cast_s_fu_2190_p1 = nsame_V_fu_2174_p1;

assign nbits_assign_s_fu_2684_p2 = (32'd2 + etx_tofollow_fu_332);

assign nbits_fu_1604_p2 = (32'd10 - tmp_474_i_fu_1596_p3);

assign nebits_fu_2406_p2 = (etx_tofollow_fu_332 + nbits_assign_2_fu_2340_p1);

assign newIndex63_cast_i_ca_fu_1352_p1 = tmp_109_reg_2912;

assign newIndex63_cast_i_fu_1270_p1 = tmp_109_fu_1260_p4;

assign newIndex64_i_cast_fu_1480_p1 = tmp_283_fu_1470_p4;

assign npending_3_fu_2442_p1 = mpending_V_fu_2346_p2;

assign npending_fu_2460_p2 = (etx_tofollow_fu_332 + tmp_526_i_fu_2456_p1);

assign nreduce_V_fu_2273_p1 = val_assign_3_fu_2265_p3[3:0];

assign nsame_V_fu_2174_p1 = val_assign_s_fu_2166_p3[3:0];

assign overrun_10_fu_2593_p2 = (nebits_reg_3492 - left_7_cast_i_fu_2589_p1);

assign overrun_8_fu_2795_p2 = (nbits_assign_s_fu_2684_p2 - left_5_cast_i_fu_2791_p1);

assign overrun_9_fu_1930_p2 = (nbits_assign_3_cast_s_fu_1916_p1 - left_9_fu_1924_p2);

assign overrun_fu_1553_p2 = (ap_phi_mux_nbits_assign_phi_fu_1096_p4 - left_cast_i_fu_1549_p1);

assign ovr_V_3_fu_1861_p3 = ((tmp_290_fu_1843_p3[0:0] === 1'b1) ? ovr_V_4_fu_328 : ovr_V_fu_1851_p2);

assign ovr_V_fu_1851_p2 = ($signed(13'd8160) + $signed(storemerge_i_fu_1826_p3));

assign p_0_1_0_i_cast_i_fu_2418_p1 = $signed(p_0_1_0_i_i_fu_2412_p2);

assign p_0_1_0_i_i_fu_2412_p2 = ($signed(5'd31) + $signed(nbits_assign_4_cast2_fu_2343_p1));

assign p_5_i_fu_2222_p2 = (tmp_254_i_fu_2216_p2 | cv_m_hi_V_3_cast_fu_2127_p4);

integer ap_tvar_int_0;

always @ (pending_V_fu_2242_p2) begin
    for (ap_tvar_int_0 = 12 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 11 - 0) begin
            p_Result_100_fu_2247_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_100_fu_2247_p4[ap_tvar_int_0] = pending_V_fu_2242_p2[11 - ap_tvar_int_0];
        end
    end
end

assign p_Result_101_fu_2257_p3 = {{20'd1048575}, {p_Result_100_fu_2247_p4}};

integer ap_tvar_int_1;

always @ (r_V_42_reg_3413) begin
    for (ap_tvar_int_1 = 12 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 21 - 10) begin
            p_Result_92_fu_2291_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_92_fu_2291_p4[ap_tvar_int_1] = r_V_42_reg_3413[21 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (tmp_558_i_fu_2308_p2) begin
    for (ap_tvar_int_2 = 12 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 11 - 0) begin
            p_Result_93_fu_2314_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_93_fu_2314_p4[ap_tvar_int_2] = tmp_558_i_fu_2308_p2[11 - ap_tvar_int_2];
        end
    end
end

integer ap_tvar_int_3;

always @ (maxcnt_V_fu_1318_p10) begin
    for (ap_tvar_int_3 = 10 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 9 - 0) begin
            p_Result_94_fu_1339_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            p_Result_94_fu_1339_p4[ap_tvar_int_3] = maxcnt_V_fu_1318_p10[9 - ap_tvar_int_3];
        end
    end
end

assign p_Result_95_fu_1372_p3 = {{22'd4194303}, {p_Result_94_reg_3063}};

integer ap_tvar_int_4;

always @ (left_V_reg_3200) begin
    for (ap_tvar_int_4 = 10 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > 9 - 0) begin
            p_Result_96_fu_1579_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            p_Result_96_fu_1579_p4[ap_tvar_int_4] = left_V_reg_3200[9 - ap_tvar_int_4];
        end
    end
end

assign p_Result_97_fu_1588_p3 = {{22'd4194303}, {p_Result_96_fu_1579_p4}};

integer ap_tvar_int_5;

always @ (r_V_51_reg_3435) begin
    for (ap_tvar_int_5 = 12 - 1; ap_tvar_int_5 >= 0; ap_tvar_int_5 = ap_tvar_int_5 - 1) begin
        if (ap_tvar_int_5 > 11 - 0) begin
            p_Result_98_fu_2149_p4[ap_tvar_int_5] = 1'b0;
        end else begin
            p_Result_98_fu_2149_p4[ap_tvar_int_5] = r_V_51_reg_3435[11 - ap_tvar_int_5];
        end
    end
end

assign p_Result_99_fu_2158_p3 = {{20'd1048575}, {p_Result_98_fu_2149_p4}};

always @ (*) begin
    p_Result_s_fu_2488_p4 = r_V_54_reg_3486;
    p_Result_s_fu_2488_p4[p_0_1_0_i_cast_i_reg_3498] = |(32'd0);
end

assign p_mbits_0_i_i_fu_1615_p3 = ((tmp_479_i_fu_1610_p2[0:0] === 1'b1) ? nbits_fu_1604_p2 : nbits_7_reg_3088);

assign p_shl_cast_fu_1362_p1 = tmp_110_fu_1355_p3;

assign pending_V_fu_2242_p2 = (r_V_51_reg_3435 & phitmp_i_fu_2236_p2);

assign phitmp2_i_fu_1769_p2 = (syms_pn_rec_i_reg_1132 + 64'd1);

assign phitmp_i_fu_2236_p2 = (tmp_524_i_fu_2228_p3 | 12'd1);

assign r_V_40_fu_1886_p2 = (6'd1 + lhs_V_cast_i_fu_1882_p1);

assign r_V_46_fu_2184_p2 = (rhs_V_15_fu_2178_p2 & cv_m_lo_V_3_cast_fu_2136_p4);

assign r_V_51_fu_2121_p2 = (cv_m_lo_V_3_fu_2042_p4 ^ cv_m_hi_V_6_fu_2026_p4);

assign r_V_52_fu_2194_p2 = r_V_46_fu_2184_p2 << nbits_assign_4_cast_s_fu_2190_p1;

assign r_V_53_fu_2355_p2 = (5'd12 - nbits_assign_4_cast2_fu_2343_p1);

assign r_V_54_fu_2398_p3 = ((tmp_297_fu_2361_p3[0:0] === 1'b1) ? tmp_298_fu_2394_p1 : tmp_529_i_fu_2389_p2);

assign r_V_55_fu_2285_p2 = cv_m_lo_V_3_cast_fu_2136_p4 << tmp_555_cast_i_cast_fu_2281_p1;

assign r_V_9_fu_2300_p3 = {{1'd1}, {p_Result_92_fu_2291_p4}};

assign r_V_fu_1781_p3 = {{r_V_i_fu_1775_p2}, {1'd0}};

assign r_V_i_fu_1775_p2 = (ap_phi_mux_p_i_phi_fu_1146_p4 - grp_fu_1185_p6);

assign range_V_5_fu_1985_p2 = (range_V_fu_1977_p1 - tmp_503_i_fu_1981_p1);

assign range_V_6_fu_1991_p2 = (13'd1 + range_V_5_fu_1985_p2);

assign range_V_fu_1977_p1 = ap_phi_mux_etx_cv_m_hi_V_phi_fu_1168_p4;

assign rhs_V_15_fu_2178_p2 = (cv_m_hi_V_3_cast_fu_2127_p4 ^ 11'd2047);

assign sel_tmp1_fu_2748_p2 = (sel_tmp9_fu_2742_p2 & bit_V_fu_2676_p3);

assign sel_tmp2_fu_2544_p3 = ((tmp_535_i_fu_2471_p2[0:0] === 1'b1) ? 64'd0 : buf_18_fu_2520_p2);

assign sel_tmp7_fu_2526_p2 = (tmp_535_i_fu_2471_p2 ^ 1'd1);

assign sel_tmp8_fu_2532_p2 = (tmp_299_reg_3504 & sel_tmp7_fu_2526_p2);

assign sel_tmp9_fu_2742_p2 = (tmp_484_i_fu_2690_p2 ^ 1'd1);

assign sel_tmp_fu_2734_p3 = ((tmp_484_i_fu_2690_p2[0:0] === 1'b1) ? 64'd0 : buf_15_fu_2722_p2);

assign shift_10_fu_2618_p3 = ((tmp_546_i_reg_3535[0:0] === 1'b1) ? left_7_cast_i_reg_3525 : nebits_reg_3492_pp1_iter7_reg);

assign shift_8_fu_2821_p3 = ((tmp_498_i_reg_3576[0:0] === 1'b1) ? left_5_cast_i_reg_3566 : nbits_assign_s_reg_3550);

assign shift_9_fu_2054_p3 = ((tmp_513_i_reg_3398[0:0] === 1'b1) ? left_9_reg_3388 : nbits_assign_3_cast_s_reg_3383);

assign shift_fu_1629_p3 = ((tmp_464_i_reg_3220[0:0] === 1'b1) ? left_cast_i_reg_3210 : nbits_assign_reg_1092);

assign storemerge_i_fu_1826_p3 = ((tmp_289_fu_1809_p3[0:0] === 1'b1) ? tmp_486_i_reg_3347 : tmp_487_cast_i_fu_1822_p1);

assign table_i_address1 = tmp_502_i_fu_1892_p1;

assign tmp_107_fu_1303_p3 = {{tmp_s_reg_2900}, {10'd0}};

assign tmp_108_fu_1310_p1 = tmp_107_fu_1303_p3;

assign tmp_109_fu_1260_p4 = {{hist_m_omask_V_offset_dout[4:3]}};

assign tmp_110_fu_1355_p3 = {{tmp_109_reg_2912}, {4'd0}};

assign tmp_111_fu_1366_p2 = (p_shl_cast_fu_1362_p1 + newIndex63_cast_i_ca_fu_1352_p1);

assign tmp_112_fu_1746_p2 = (tmp_136_cast_reg_3068 + tmp_279_fu_1742_p1);

assign tmp_113_fu_1484_p2 = (tmp_111_reg_3078 + newIndex64_i_cast_fu_1480_p1);

assign tmp_114_fu_1501_p2 = (p_shl_cast_reg_3073 + newIndex64_i_cast_fu_1480_p1);

assign tmp_136_cast_fu_1349_p1 = tmp_107_reg_3038;

assign tmp_142_cast_fu_1489_p1 = tmp_113_fu_1484_p2;

assign tmp_143_cast_fu_1506_p1 = tmp_114_fu_1501_p2;

assign tmp_144_cast_fu_1751_p1 = tmp_112_fu_1746_p2;

assign tmp_254_i_fu_2216_p2 = (cv_m_lo_V_3_cast_fu_2136_p4 ^ 11'd2047);

assign tmp_256_i_fu_2564_p2 = (tmp_301_fu_2560_p1 | bits_V_assign_3_fu_2537_p3);

assign tmp_271_fu_1242_p1 = hist_m_omask_V_offset_dout[1:0];

assign tmp_272_fu_1256_p1 = hist_m_omask_V_offset_dout[2:0];

assign tmp_273_fu_1393_p1 = nbits_7_fu_1387_p2[15:0];

assign tmp_275_fu_1657_p1 = tmp_466_i_fu_1639_p2[31:0];

assign tmp_277_fu_1425_p3 = ap_phi_mux_i_assign_phi_fu_1002_p4[32'd5];

assign tmp_278_fu_1458_p3 = p_Val2_62_fu_1437_p10[i_assign_cast24_i_fu_1433_p1];

assign tmp_279_fu_1742_p1 = syms_pn_rec_i_reg_1132[14:0];

assign tmp_281_fu_1759_p1 = syms_pn_rec_i_reg_1132[31:0];

assign tmp_282_fu_1466_p1 = i_assign_reg_998[0:0];

assign tmp_283_fu_1470_p4 = {{i_assign_reg_998[5:1]}};

assign tmp_285_fu_2762_p1 = buf_1_i_i_i_fu_2754_p3[0:0];

assign tmp_288_fu_1804_p2 = r_V_i_reg_3341 << 12'd1;

assign tmp_289_fu_1809_p3 = r_V_i_reg_3341[32'd11];

assign tmp_290_fu_1843_p3 = diff_fu_1837_p2[32'd13];

assign tmp_292_fu_2083_p1 = tmp_515_i_fu_2063_p2[12:0];

assign tmp_293_fu_1942_p3 = overrun_9_fu_1930_p2[32'd6];

assign tmp_295_fu_2200_p3 = r_V_52_fu_2194_p2[32'd10];

assign tmp_297_fu_2361_p3 = r_V_53_fu_2355_p2[32'd4];

assign tmp_298_fu_2394_p1 = tmp_532_i_fu_2383_p2[11:0];

assign tmp_299_fu_2422_p3 = r_V_54_fu_2398_p3[p_0_1_0_i_cast_i_fu_2418_p1];

assign tmp_301_fu_2560_p1 = buf_1_i_i_fu_2552_p3[11:0];

assign tmp_37_fu_1661_p2 = (tmp_469_i_fu_1650_p3 | tmp_275_fu_1657_p1);

assign tmp_38_fu_1667_p4 = {{tmp_466_i_fu_1639_p2[63:32]}};

assign tmp_40_fu_2766_p2 = (tmp_496_i_fu_2728_p2 | tmp_285_fu_2762_p1);

assign tmp_44_fu_2087_p2 = (tmp_519_i_fu_2077_p3 | tmp_292_fu_2083_p1);

assign tmp_45_fu_2093_p4 = {{tmp_515_i_fu_2063_p2[63:13]}};

assign tmp_461_i_fu_1397_p4 = {{{tmp_273_fu_1393_p1}, {grp_fu_1185_p6}}, {grp_fu_1198_p10}};

assign tmp_462_i_fu_1413_p2 = ((ap_phi_mux_i_assign_phi_fu_1002_p4 < 6'd33) ? 1'b1 : 1'b0);

assign tmp_463_i_fu_1524_p1 = i_assign_reg_998_pp0_iter1_reg;

assign tmp_464_i_fu_1559_p2 = (($signed(overrun_fu_1553_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_465_i_fu_1635_p1 = shift_fu_1629_p3;

assign tmp_466_i_fu_1639_p2 = etx_ha_m_cur_10_fu_320 << tmp_465_i_fu_1635_p1;

assign tmp_468_i_fu_1645_p2 = p_0100_0_i_i_reg_1104 >> overrun_reg_3215;

assign tmp_469_i_fu_1650_p3 = ((tmp_464_i_reg_3220[0:0] === 1'b1) ? tmp_468_i_fu_1645_p2 : p_0100_0_i_i_reg_1104);


always @ (p_Result_97_fu_1588_p3) begin
    if (p_Result_97_fu_1588_p3[0] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd0;
    end else if (p_Result_97_fu_1588_p3[1] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd1;
    end else if (p_Result_97_fu_1588_p3[2] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd2;
    end else if (p_Result_97_fu_1588_p3[3] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd3;
    end else if (p_Result_97_fu_1588_p3[4] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd4;
    end else if (p_Result_97_fu_1588_p3[5] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd5;
    end else if (p_Result_97_fu_1588_p3[6] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd6;
    end else if (p_Result_97_fu_1588_p3[7] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd7;
    end else if (p_Result_97_fu_1588_p3[8] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd8;
    end else if (p_Result_97_fu_1588_p3[9] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd9;
    end else if (p_Result_97_fu_1588_p3[10] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd10;
    end else if (p_Result_97_fu_1588_p3[11] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd11;
    end else if (p_Result_97_fu_1588_p3[12] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd12;
    end else if (p_Result_97_fu_1588_p3[13] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd13;
    end else if (p_Result_97_fu_1588_p3[14] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd14;
    end else if (p_Result_97_fu_1588_p3[15] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd15;
    end else if (p_Result_97_fu_1588_p3[16] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd16;
    end else if (p_Result_97_fu_1588_p3[17] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd17;
    end else if (p_Result_97_fu_1588_p3[18] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd18;
    end else if (p_Result_97_fu_1588_p3[19] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd19;
    end else if (p_Result_97_fu_1588_p3[20] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd20;
    end else if (p_Result_97_fu_1588_p3[21] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd21;
    end else if (p_Result_97_fu_1588_p3[22] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd22;
    end else if (p_Result_97_fu_1588_p3[23] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd23;
    end else if (p_Result_97_fu_1588_p3[24] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd24;
    end else if (p_Result_97_fu_1588_p3[25] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd25;
    end else if (p_Result_97_fu_1588_p3[26] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd26;
    end else if (p_Result_97_fu_1588_p3[27] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd27;
    end else if (p_Result_97_fu_1588_p3[28] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd28;
    end else if (p_Result_97_fu_1588_p3[29] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd29;
    end else if (p_Result_97_fu_1588_p3[30] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd30;
    end else if (p_Result_97_fu_1588_p3[31] == 1'b1) begin
        tmp_474_i_fu_1596_p3 = 32'd31;
    end else begin
        tmp_474_i_fu_1596_p3 = 32'd32;
    end
end

assign tmp_479_i_fu_1610_p2 = (($signed(nbits_fu_1604_p2) < $signed(nbits_7_reg_3088)) ? 1'b1 : 1'b0);

assign tmp_484_i_fu_2690_p2 = ((tofollow_fu_2670_p2 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_485_i_fu_1789_p2 = (r_V_fu_1781_p3 | 13'd1);

assign tmp_486_i_fu_1795_p2 = (13'd1 - tmp_485_i_fu_1789_p2);

assign tmp_487_cast_i_fu_1822_p1 = tmp_487_i_fu_1816_p2;

assign tmp_487_i_fu_1816_p2 = (tmp_288_fu_1804_p2 | 12'd1);

assign tmp_489_i_fu_2700_p1 = tofollow_fu_2670_p2;

assign tmp_491_cast_i_fu_1833_p1 = storemerge_i_fu_1826_p3;

assign tmp_493_i_fu_2710_p2 = 64'd1 << tmp_489_i_fu_2700_p1;

assign tmp_494_i_fu_2716_p2 = ($signed(64'd18446744073709551615) + $signed(tmp_493_i_fu_2710_p2));

assign tmp_496_i_fu_2728_p2 = (tmp_484_i_fu_2690_p2 & bit_V_fu_2676_p3);

assign tmp_498_i_fu_2801_p2 = (($signed(overrun_8_fu_2795_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_499_i_fu_2826_p1 = shift_8_fu_2821_p3;

assign tmp_500_i_fu_2830_p2 = etx_ba_m_cur_9_fu_344 << tmp_499_i_fu_2826_p1;

assign tmp_501_i_fu_1877_p1 = idx_V_3_fu_1869_p3;

assign tmp_502_i_fu_1892_p1 = r_V_40_fu_1886_p2;

assign tmp_503_i_fu_1981_p1 = ap_phi_mux_etx_cv_m_lo_V_phi_fu_1156_p4;

assign tmp_507_i_fu_1897_p2 = ((idx_V_3_fu_1869_p3 == 5'd0) ? 1'b1 : 1'b0);

assign tmp_508_i_fu_2836_p1 = overrun_8_reg_3571;

assign tmp_509_i_fu_2839_p2 = buf_21_fu_2815_p3 >> tmp_508_i_fu_2836_p1;

assign tmp_510_i_fu_2845_p3 = ((tmp_498_i_reg_3576[0:0] === 1'b1) ? tmp_509_i_fu_2839_p2 : buf_21_fu_2815_p3);

assign tmp_513_i_fu_1936_p2 = (($signed(overrun_9_fu_1930_p2) > $signed(7'd0)) ? 1'b1 : 1'b0);

assign tmp_514_i_fu_2059_p1 = shift_9_fu_2054_p3;

assign tmp_515_i_fu_2063_p2 = BitStream64_m_cur_re_5_fu_336 << tmp_514_i_fu_2059_p1;

assign tmp_517_cast_i_fu_2069_p1 = overrun_9_reg_3393;

assign tmp_518_i_fu_2072_p2 = ovr_V_3_reg_3352_pp1_iter3_reg >> tmp_517_cast_i_fu_2069_p1;

assign tmp_519_i_fu_2077_p3 = ((tmp_513_i_reg_3398[0:0] === 1'b1) ? tmp_518_i_fu_2072_p2 : ovr_V_3_reg_3352_pp1_iter3_reg);

assign tmp_524_i_fu_2228_p3 = {{p_5_i_fu_2222_p2}, {1'd0}};

assign tmp_525_i_fu_2350_p2 = ((nsame_V_reg_3441 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_526_i_fu_2456_p1 = mpending_V_fu_2346_p2;

assign tmp_528_cast21_i_fu_2369_p1 = r_V_53_fu_2355_p2;

assign tmp_529_i_fu_2389_p2 = cv_m_lo_V_3_reg_3424_pp1_iter5_reg >> tmp_528_cast21_i_fu_2369_p1;

assign tmp_531_cast_i_fu_2379_p1 = tmp_531_i_fu_2373_p2;

assign tmp_531_i_fu_2373_p2 = ($signed(5'd0) - $signed(r_V_53_fu_2355_p2));

assign tmp_532_i_fu_2383_p2 = lhs_V_15_cast_i_fu_2337_p1 << tmp_531_cast_i_fu_2379_p1;

assign tmp_535_i_fu_2471_p2 = ((etx_tofollow_load_3_reg_3480 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_537_i_fu_2430_p2 = ($signed(etx_tofollow_fu_332) + $signed(p_0_1_0_i_cast_i_fu_2418_p1));

assign tmp_538_i_fu_2479_p1 = tmp_537_i_reg_3510;

assign tmp_540_i_fu_2496_p1 = etx_tofollow_load_3_reg_3480;

assign tmp_541_i_fu_2499_p2 = 64'd1 << tmp_540_i_fu_2496_p1;

assign tmp_542_i_fu_2505_p2 = ($signed(64'd18446744073709551615) + $signed(tmp_541_i_fu_2499_p2));

assign tmp_543_i_fu_2511_p1 = $unsigned(p_0_1_0_i_cast_i_reg_3498);

assign tmp_544_i_fu_2514_p2 = tmp_542_i_fu_2505_p2 << tmp_543_i_fu_2511_p1;

assign tmp_546_i_fu_2598_p2 = (($signed(overrun_10_fu_2593_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_547_i_fu_2623_p1 = shift_10_fu_2618_p3;

assign tmp_548_i_fu_2627_p2 = etx_ba_m_cur_9_fu_344 << tmp_547_i_fu_2623_p1;

assign tmp_549_i_fu_2633_p1 = overrun_10_reg_3530;

assign tmp_550_i_fu_2636_p2 = buf_20_fu_2612_p3 >> tmp_549_i_fu_2633_p1;

assign tmp_551_i_fu_2642_p3 = ((tmp_546_i_reg_3535[0:0] === 1'b1) ? tmp_550_i_fu_2636_p2 : buf_20_fu_2612_p3);

assign tmp_555_cast19_i_fu_2277_p1 = nreduce_V_fu_2273_p1;

assign tmp_555_cast_i_cast_fu_2281_p1 = nreduce_V_fu_2273_p1;

assign tmp_558_i_fu_2308_p2 = $signed(r_V_9_fu_2300_p3) >>> tmp_555_cast19_i_fu_2277_p1;

assign tmp_i1017_i_fu_2858_p1 = grp_fu_1233_p4;

assign tmp_i18_i_fu_1709_p1 = wrdIdx_fu_1699_p4;

assign tmp_i316_i_fu_2145_p1 = wrdIdx_7_reg_3408_pp1_iter4_reg;

assign tmp_i515_i_fu_2665_p1 = grp_fu_1233_p4;


always @ (p_Result_95_fu_1372_p3) begin
    if (p_Result_95_fu_1372_p3[0] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd0;
    end else if (p_Result_95_fu_1372_p3[1] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd1;
    end else if (p_Result_95_fu_1372_p3[2] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd2;
    end else if (p_Result_95_fu_1372_p3[3] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd3;
    end else if (p_Result_95_fu_1372_p3[4] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd4;
    end else if (p_Result_95_fu_1372_p3[5] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd5;
    end else if (p_Result_95_fu_1372_p3[6] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd6;
    end else if (p_Result_95_fu_1372_p3[7] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd7;
    end else if (p_Result_95_fu_1372_p3[8] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd8;
    end else if (p_Result_95_fu_1372_p3[9] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd9;
    end else if (p_Result_95_fu_1372_p3[10] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd10;
    end else if (p_Result_95_fu_1372_p3[11] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd11;
    end else if (p_Result_95_fu_1372_p3[12] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd12;
    end else if (p_Result_95_fu_1372_p3[13] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd13;
    end else if (p_Result_95_fu_1372_p3[14] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd14;
    end else if (p_Result_95_fu_1372_p3[15] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd15;
    end else if (p_Result_95_fu_1372_p3[16] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd16;
    end else if (p_Result_95_fu_1372_p3[17] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd17;
    end else if (p_Result_95_fu_1372_p3[18] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd18;
    end else if (p_Result_95_fu_1372_p3[19] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd19;
    end else if (p_Result_95_fu_1372_p3[20] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd20;
    end else if (p_Result_95_fu_1372_p3[21] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd21;
    end else if (p_Result_95_fu_1372_p3[22] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd22;
    end else if (p_Result_95_fu_1372_p3[23] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd23;
    end else if (p_Result_95_fu_1372_p3[24] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd24;
    end else if (p_Result_95_fu_1372_p3[25] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd25;
    end else if (p_Result_95_fu_1372_p3[26] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd26;
    end else if (p_Result_95_fu_1372_p3[27] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd27;
    end else if (p_Result_95_fu_1372_p3[28] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd28;
    end else if (p_Result_95_fu_1372_p3[29] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd29;
    end else if (p_Result_95_fu_1372_p3[30] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd30;
    end else if (p_Result_95_fu_1372_p3[31] == 1'b1) begin
        tmp_i_fu_1379_p3 = 32'd31;
    end else begin
        tmp_i_fu_1379_p3 = 32'd32;
    end
end

assign tofollow_fu_2670_p2 = (32'd1 + etx_tofollow_fu_332);

assign total_V_fu_1529_p2 = (ap_phi_mux_p_030_0_i1_i_phi_fu_1026_p34 + p_070_0_i_i_reg_1010);


always @ (p_Result_101_fu_2257_p3) begin
    if (p_Result_101_fu_2257_p3[0] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd0;
    end else if (p_Result_101_fu_2257_p3[1] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd1;
    end else if (p_Result_101_fu_2257_p3[2] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd2;
    end else if (p_Result_101_fu_2257_p3[3] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd3;
    end else if (p_Result_101_fu_2257_p3[4] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd4;
    end else if (p_Result_101_fu_2257_p3[5] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd5;
    end else if (p_Result_101_fu_2257_p3[6] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd6;
    end else if (p_Result_101_fu_2257_p3[7] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd7;
    end else if (p_Result_101_fu_2257_p3[8] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd8;
    end else if (p_Result_101_fu_2257_p3[9] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd9;
    end else if (p_Result_101_fu_2257_p3[10] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd10;
    end else if (p_Result_101_fu_2257_p3[11] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd11;
    end else if (p_Result_101_fu_2257_p3[12] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd12;
    end else if (p_Result_101_fu_2257_p3[13] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd13;
    end else if (p_Result_101_fu_2257_p3[14] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd14;
    end else if (p_Result_101_fu_2257_p3[15] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd15;
    end else if (p_Result_101_fu_2257_p3[16] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd16;
    end else if (p_Result_101_fu_2257_p3[17] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd17;
    end else if (p_Result_101_fu_2257_p3[18] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd18;
    end else if (p_Result_101_fu_2257_p3[19] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd19;
    end else if (p_Result_101_fu_2257_p3[20] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd20;
    end else if (p_Result_101_fu_2257_p3[21] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd21;
    end else if (p_Result_101_fu_2257_p3[22] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd22;
    end else if (p_Result_101_fu_2257_p3[23] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd23;
    end else if (p_Result_101_fu_2257_p3[24] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd24;
    end else if (p_Result_101_fu_2257_p3[25] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd25;
    end else if (p_Result_101_fu_2257_p3[26] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd26;
    end else if (p_Result_101_fu_2257_p3[27] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd27;
    end else if (p_Result_101_fu_2257_p3[28] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd28;
    end else if (p_Result_101_fu_2257_p3[29] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd29;
    end else if (p_Result_101_fu_2257_p3[30] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd30;
    end else if (p_Result_101_fu_2257_p3[31] == 1'b1) begin
        val_assign_3_fu_2265_p3 = 32'd31;
    end else begin
        val_assign_3_fu_2265_p3 = 32'd32;
    end
end


always @ (p_Result_99_fu_2158_p3) begin
    if (p_Result_99_fu_2158_p3[0] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd0;
    end else if (p_Result_99_fu_2158_p3[1] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd1;
    end else if (p_Result_99_fu_2158_p3[2] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd2;
    end else if (p_Result_99_fu_2158_p3[3] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd3;
    end else if (p_Result_99_fu_2158_p3[4] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd4;
    end else if (p_Result_99_fu_2158_p3[5] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd5;
    end else if (p_Result_99_fu_2158_p3[6] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd6;
    end else if (p_Result_99_fu_2158_p3[7] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd7;
    end else if (p_Result_99_fu_2158_p3[8] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd8;
    end else if (p_Result_99_fu_2158_p3[9] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd9;
    end else if (p_Result_99_fu_2158_p3[10] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd10;
    end else if (p_Result_99_fu_2158_p3[11] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd11;
    end else if (p_Result_99_fu_2158_p3[12] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd12;
    end else if (p_Result_99_fu_2158_p3[13] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd13;
    end else if (p_Result_99_fu_2158_p3[14] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd14;
    end else if (p_Result_99_fu_2158_p3[15] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd15;
    end else if (p_Result_99_fu_2158_p3[16] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd16;
    end else if (p_Result_99_fu_2158_p3[17] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd17;
    end else if (p_Result_99_fu_2158_p3[18] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd18;
    end else if (p_Result_99_fu_2158_p3[19] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd19;
    end else if (p_Result_99_fu_2158_p3[20] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd20;
    end else if (p_Result_99_fu_2158_p3[21] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd21;
    end else if (p_Result_99_fu_2158_p3[22] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd22;
    end else if (p_Result_99_fu_2158_p3[23] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd23;
    end else if (p_Result_99_fu_2158_p3[24] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd24;
    end else if (p_Result_99_fu_2158_p3[25] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd25;
    end else if (p_Result_99_fu_2158_p3[26] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd26;
    end else if (p_Result_99_fu_2158_p3[27] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd27;
    end else if (p_Result_99_fu_2158_p3[28] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd28;
    end else if (p_Result_99_fu_2158_p3[29] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd29;
    end else if (p_Result_99_fu_2158_p3[30] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd30;
    end else if (p_Result_99_fu_2158_p3[31] == 1'b1) begin
        val_assign_s_fu_2166_p3 = 32'd31;
    end else begin
        val_assign_s_fu_2166_p3 = 32'd32;
    end
end

assign wrdIdx_fu_1699_p4 = {{etx_ha_m_idx_i_reg_1080_pp0_iter4_reg[31:6]}};

assign xlo_V_3_fu_1997_p3 = {{ap_phi_mux_etx_cv_m_lo_V_phi_fu_1156_p4}, {10'd0}};

assign xlo_V_4_cast_i_fu_2005_p1 = xlo_V_3_fu_1997_p3;

assign xlo_V_fu_2009_p2 = ($signed(22'd4193280) + $signed(xlo_V_4_cast_i_fu_2005_p1));

always @ (posedge ap_clk) begin
    tmp_107_reg_3038[9:0] <= 10'b0000000000;
    tmp_136_cast_reg_3068[9:0] <= 10'b0000000000;
    tmp_136_cast_reg_3068[14:13] <= 2'b00;
    p_shl_cast_reg_3073[3:0] <= 4'b0000;
    p_shl_cast_reg_3073[6] <= 1'b0;
    left_cast_i_reg_3210[31:7] <= 25'b0000000000000000000000000;
    tmp_486_i_reg_3347[0] <= 1'b0;
    nbits_assign_3_cast_s_reg_3383[6:4] <= 3'b000;
    left_7_cast_i_reg_3525[31:7] <= 25'b0000000000000000000000000;
    left_5_cast_i_reg_3566[31:7] <= 25'b0000000000000000000000000;
end

endmodule //APE_encode151
